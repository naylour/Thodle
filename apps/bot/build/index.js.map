{
  "version": 3,
  "sources": ["../../../node_modules/grammy/out/filter.js", "../../../node_modules/grammy/out/context.js", "../../../node_modules/grammy/out/composer.js", "../../../node_modules/ms/index.js", "../../../node_modules/debug/src/common.js", "../../../node_modules/debug/src/browser.js", "../../../node_modules/has-flag/index.js", "../../../node_modules/supports-color/index.js", "../../../node_modules/debug/src/node.js", "../../../node_modules/debug/src/index.js", "../../../node_modules/grammy/out/platform.node.js", "../../../node_modules/grammy/out/core/error.js", "../../../node_modules/grammy/out/types.node.js", "../../../node_modules/grammy/out/types.js", "../../../node_modules/grammy/out/core/payload.js", "../../../node_modules/grammy/out/shim.node.js", "../../../node_modules/grammy/out/core/client.js", "../../../node_modules/grammy/out/core/api.js", "../../../node_modules/grammy/out/bot.js", "../../../node_modules/grammy/out/convenience/constants.js", "../../../node_modules/grammy/out/convenience/inline_query.js", "../../../node_modules/grammy/out/convenience/input_media.js", "../../../node_modules/grammy/out/convenience/keyboard.js", "../../../node_modules/grammy/out/convenience/session.js", "../../../node_modules/grammy/out/convenience/frameworks.js", "../../../node_modules/grammy/out/convenience/webhook.js", "../../../node_modules/grammy/out/mod.js", "../../../node_modules/zod/v4/core/core.js", "../../../node_modules/zod/v4/core/util.js", "../../../node_modules/zod/v4/core/errors.js", "../../../node_modules/zod/v4/core/parse.js", "../../../node_modules/zod/v4/core/regexes.js", "../../../node_modules/zod/v4/core/checks.js", "../../../node_modules/zod/v4/core/doc.js", "../../../node_modules/zod/v4/core/versions.js", "../../../node_modules/zod/v4/core/schemas.js", "../../../node_modules/zod/v4/locales/ar.js", "../../../node_modules/zod/v4/locales/az.js", "../../../node_modules/zod/v4/locales/be.js", "../../../node_modules/zod/v4/locales/ca.js", "../../../node_modules/zod/v4/locales/cs.js", "../../../node_modules/zod/v4/locales/de.js", "../../../node_modules/zod/v4/locales/en.js", "../../../node_modules/zod/v4/locales/eo.js", "../../../node_modules/zod/v4/locales/es.js", "../../../node_modules/zod/v4/locales/fa.js", "../../../node_modules/zod/v4/locales/fi.js", "../../../node_modules/zod/v4/locales/fr.js", "../../../node_modules/zod/v4/locales/fr-CA.js", "../../../node_modules/zod/v4/locales/he.js", "../../../node_modules/zod/v4/locales/hu.js", "../../../node_modules/zod/v4/locales/id.js", "../../../node_modules/zod/v4/locales/it.js", "../../../node_modules/zod/v4/locales/ja.js", "../../../node_modules/zod/v4/locales/kh.js", "../../../node_modules/zod/v4/locales/ko.js", "../../../node_modules/zod/v4/locales/mk.js", "../../../node_modules/zod/v4/locales/ms.js", "../../../node_modules/zod/v4/locales/nl.js", "../../../node_modules/zod/v4/locales/no.js", "../../../node_modules/zod/v4/locales/ota.js", "../../../node_modules/zod/v4/locales/ps.js", "../../../node_modules/zod/v4/locales/pl.js", "../../../node_modules/zod/v4/locales/pt.js", "../../../node_modules/zod/v4/locales/ru.js", "../../../node_modules/zod/v4/locales/sl.js", "../../../node_modules/zod/v4/locales/sv.js", "../../../node_modules/zod/v4/locales/ta.js", "../../../node_modules/zod/v4/locales/th.js", "../../../node_modules/zod/v4/locales/tr.js", "../../../node_modules/zod/v4/locales/ua.js", "../../../node_modules/zod/v4/locales/ur.js", "../../../node_modules/zod/v4/locales/vi.js", "../../../node_modules/zod/v4/locales/zh-CN.js", "../../../node_modules/zod/v4/locales/zh-TW.js", "../../../node_modules/zod/v4/core/registries.js", "../../../node_modules/zod/v4/core/api.js", "../../../node_modules/zod/v4/core/function.js", "../../../node_modules/zod/v4/core/to-json-schema.js", "../../../node_modules/zod/v4/classic/iso.js", "../../../node_modules/zod/v4/classic/errors.js", "../../../node_modules/zod/v4/classic/parse.js", "../../../node_modules/zod/v4/classic/schemas.js", "../../../node_modules/zod/v4/classic/compat.js", "../../../node_modules/zod/v4/classic/coerce.js", "../../../node_modules/zod/v4/classic/external.js", "../../../packages/env/env.ts", "../../../packages/env/bot.ts", "../../../packages/env/subs.ts", "../../../packages/env/ports.ts", "../../../packages/env/app.ts", "../../../packages/env/mode.ts", "../../../packages/env/api.ts", "../../../packages/utils/deviceHosts.ts", "../lib/config.ts", "../src/bot.ts", "../src/index.ts"],
  "sourcesContent": [
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matchFilter = matchFilter;\nexports.parse = parse;\nexports.preprocess = preprocess;\nconst filterQueryCache = new Map();\n// === Obtain O(1) filter function from query\n/**\n * > This is an advanced function of grammY.\n *\n * Takes a filter query and turns it into a predicate function that can check in\n * constant time whether a given context object satisfies the query. The created\n * predicate can be passed to `bot.filter` and will narrow down the context\n * accordingly.\n *\n * This function is used internally by `bot.on` but exposed for advanced usage\n * like the following.\n * ```ts\n * // Listens for updates except forwards of messages or channel posts\n * bot.drop(matchFilter(':forward_origin'), ctx => { ... })\n * ```\n *\n * Check out the\n * [documentation](https://grammy.dev/ref/core/composer#on)\n * of `bot.on` for examples. In addition, the\n * [website](https://grammy.dev/guide/filter-queries) contains more\n * information about how filter queries work in grammY.\n *\n * @param filter A filter query or an array of filter queries\n */\nfunction matchFilter(filter) {\n    var _a;\n    const queries = Array.isArray(filter) ? filter : [filter];\n    const key = queries.join(\",\");\n    const predicate = (_a = filterQueryCache.get(key)) !== null && _a !== void 0 ? _a : (() => {\n        const parsed = parse(queries);\n        const pred = compile(parsed);\n        filterQueryCache.set(key, pred);\n        return pred;\n    })();\n    return (ctx) => predicate(ctx);\n}\nfunction parse(filter) {\n    return Array.isArray(filter)\n        ? filter.map((q) => q.split(\":\"))\n        : [filter.split(\":\")];\n}\nfunction compile(parsed) {\n    const preprocessed = parsed.flatMap((q) => check(q, preprocess(q)));\n    const ltree = treeify(preprocessed);\n    const predicate = arborist(ltree); // arborists check trees\n    return (ctx) => !!predicate(ctx.update, ctx);\n}\nfunction preprocess(filter) {\n    const valid = UPDATE_KEYS;\n    const expanded = [filter]\n        // expand L1\n        .flatMap((q) => {\n        const [l1, l2, l3] = q;\n        // only expand if shortcut is given\n        if (!(l1 in L1_SHORTCUTS))\n            return [q];\n        // only expand for at least one non-empty part\n        if (!l1 && !l2 && !l3)\n            return [q];\n        // perform actual expansion\n        const targets = L1_SHORTCUTS[l1];\n        const expanded = targets.map((s) => [s, l2, l3]);\n        // assume that bare L1 expansions are always correct\n        if (l2 === undefined)\n            return expanded;\n        // only filter out invalid expansions if we don't do this later\n        if (l2 in L2_SHORTCUTS && (l2 || l3))\n            return expanded;\n        // filter out invalid expansions, e.g. `channel_post:new_chat_member` for empty L1\n        return expanded.filter(([s]) => { var _a; return !!((_a = valid[s]) === null || _a === void 0 ? void 0 : _a[l2]); });\n    })\n        // expand L2\n        .flatMap((q) => {\n        const [l1, l2, l3] = q;\n        // only expand if shortcut is given\n        if (!(l2 in L2_SHORTCUTS))\n            return [q];\n        // only expand for at least one non-empty part\n        if (!l2 && !l3)\n            return [q];\n        // perform actual expansion\n        const targets = L2_SHORTCUTS[l2];\n        const expanded = targets.map((s) => [l1, s, l3]);\n        // assume that bare L2 expansions are always correct\n        if (l3 === undefined)\n            return expanded;\n        // filter out invalid expansions\n        return expanded.filter(([, s]) => { var _a, _b; return !!((_b = (_a = valid[l1]) === null || _a === void 0 ? void 0 : _a[s]) === null || _b === void 0 ? void 0 : _b[l3]); });\n    });\n    if (expanded.length === 0) {\n        throw new Error(`Shortcuts in '${filter.join(\":\")}' do not expand to any valid filter query`);\n    }\n    return expanded;\n}\nfunction check(original, preprocessed) {\n    if (preprocessed.length === 0)\n        throw new Error(\"Empty filter query given\");\n    const errors = preprocessed\n        .map(checkOne)\n        .filter((r) => r !== true);\n    if (errors.length === 0)\n        return preprocessed;\n    else if (errors.length === 1)\n        throw new Error(errors[0]);\n    else {\n        throw new Error(`Invalid filter query '${original.join(\":\")}'. There are ${errors.length} errors after expanding the contained shortcuts: ${errors.join(\"; \")}`);\n    }\n}\nfunction checkOne(filter) {\n    const [l1, l2, l3, ...n] = filter;\n    if (l1 === undefined)\n        return \"Empty filter query given\";\n    if (!(l1 in UPDATE_KEYS)) {\n        const permitted = Object.keys(UPDATE_KEYS);\n        return `Invalid L1 filter '${l1}' given in '${filter.join(\":\")}'. \\\nPermitted values are: ${permitted.map((k) => `'${k}'`).join(\", \")}.`;\n    }\n    if (l2 === undefined)\n        return true;\n    const l1Obj = UPDATE_KEYS[l1];\n    if (!(l2 in l1Obj)) {\n        const permitted = Object.keys(l1Obj);\n        return `Invalid L2 filter '${l2}' given in '${filter.join(\":\")}'. \\\nPermitted values are: ${permitted.map((k) => `'${k}'`).join(\", \")}.`;\n    }\n    if (l3 === undefined)\n        return true;\n    const l2Obj = l1Obj[l2];\n    if (!(l3 in l2Obj)) {\n        const permitted = Object.keys(l2Obj);\n        return `Invalid L3 filter '${l3}' given in '${filter.join(\":\")}'. ${permitted.length === 0\n            ? `No further filtering is possible after '${l1}:${l2}'.`\n            : `Permitted values are: ${permitted.map((k) => `'${k}'`).join(\", \")}.`}`;\n    }\n    if (n.length === 0)\n        return true;\n    return `Cannot filter further than three levels, ':${n.join(\":\")}' is invalid!`;\n}\nfunction treeify(paths) {\n    var _a, _b;\n    const tree = {};\n    for (const [l1, l2, l3] of paths) {\n        const subtree = ((_a = tree[l1]) !== null && _a !== void 0 ? _a : (tree[l1] = {}));\n        if (l2 !== undefined) {\n            const set = ((_b = subtree[l2]) !== null && _b !== void 0 ? _b : (subtree[l2] = new Set()));\n            if (l3 !== undefined)\n                set.add(l3);\n        }\n    }\n    return tree;\n}\nfunction or(left, right) {\n    return (obj, ctx) => left(obj, ctx) || right(obj, ctx);\n}\nfunction concat(get, test) {\n    return (obj, ctx) => {\n        const nextObj = get(obj, ctx);\n        return nextObj && test(nextObj, ctx);\n    };\n}\nfunction leaf(pred) {\n    return (obj, ctx) => pred(obj, ctx) != null;\n}\nfunction arborist(tree) {\n    const l1Predicates = Object.entries(tree).map(([l1, subtree]) => {\n        const l1Pred = (obj) => obj[l1];\n        const l2Predicates = Object.entries(subtree).map(([l2, set]) => {\n            const l2Pred = (obj) => obj[l2];\n            const l3Predicates = Array.from(set).map((l3) => {\n                const l3Pred = l3 === \"me\" // special handling for `me` shortcut\n                    ? (obj, ctx) => {\n                        const me = ctx.me.id;\n                        return testMaybeArray(obj, (u) => u.id === me);\n                    }\n                    : (obj) => testMaybeArray(obj, (e) => e[l3] || e.type === l3);\n                return l3Pred;\n            });\n            return l3Predicates.length === 0\n                ? leaf(l2Pred)\n                : concat(l2Pred, l3Predicates.reduce(or));\n        });\n        return l2Predicates.length === 0\n            ? leaf(l1Pred)\n            : concat(l1Pred, l2Predicates.reduce(or));\n    });\n    if (l1Predicates.length === 0) {\n        throw new Error(\"Cannot create filter function for empty query\");\n    }\n    return l1Predicates.reduce(or);\n}\nfunction testMaybeArray(t, pred) {\n    const p = (x) => x != null && pred(x);\n    return Array.isArray(t) ? t.some(p) : p(t);\n}\n// === Define a structure to validate the queries\n// L3\nconst ENTITY_KEYS = {\n    mention: {},\n    hashtag: {},\n    cashtag: {},\n    bot_command: {},\n    url: {},\n    email: {},\n    phone_number: {},\n    bold: {},\n    italic: {},\n    underline: {},\n    strikethrough: {},\n    spoiler: {},\n    blockquote: {},\n    expandable_blockquote: {},\n    code: {},\n    pre: {},\n    text_link: {},\n    text_mention: {},\n    custom_emoji: {},\n};\nconst USER_KEYS = {\n    me: {},\n    is_bot: {},\n    is_premium: {},\n    added_to_attachment_menu: {},\n};\nconst FORWARD_ORIGIN_KEYS = {\n    user: {},\n    hidden_user: {},\n    chat: {},\n    channel: {},\n};\nconst STICKER_KEYS = {\n    is_video: {},\n    is_animated: {},\n    premium_animation: {},\n};\nconst REACTION_KEYS = {\n    emoji: {},\n    custom_emoji: {},\n    paid: {},\n};\n// L2\nconst COMMON_MESSAGE_KEYS = {\n    forward_origin: FORWARD_ORIGIN_KEYS,\n    is_topic_message: {},\n    is_automatic_forward: {},\n    business_connection_id: {},\n    text: {},\n    animation: {},\n    audio: {},\n    document: {},\n    paid_media: {},\n    photo: {},\n    sticker: STICKER_KEYS,\n    story: {},\n    video: {},\n    video_note: {},\n    voice: {},\n    contact: {},\n    dice: {},\n    game: {},\n    poll: {},\n    venue: {},\n    location: {},\n    entities: ENTITY_KEYS,\n    caption_entities: ENTITY_KEYS,\n    caption: {},\n    link_preview_options: {\n        url: {},\n        prefer_small_media: {},\n        prefer_large_media: {},\n        show_above_text: {},\n    },\n    effect_id: {},\n    paid_star_count: {},\n    has_media_spoiler: {},\n    new_chat_title: {},\n    new_chat_photo: {},\n    delete_chat_photo: {},\n    message_auto_delete_timer_changed: {},\n    pinned_message: {},\n    invoice: {},\n    proximity_alert_triggered: {},\n    chat_background_set: {},\n    giveaway_created: {},\n    giveaway: { only_new_members: {}, has_public_winners: {} },\n    giveaway_winners: { only_new_members: {}, was_refunded: {} },\n    giveaway_completed: {},\n    gift: {},\n    unique_gift: {},\n    paid_message_price_changed: {},\n    video_chat_scheduled: {},\n    video_chat_started: {},\n    video_chat_ended: {},\n    video_chat_participants_invited: {},\n    web_app_data: {},\n};\nconst MESSAGE_KEYS = {\n    ...COMMON_MESSAGE_KEYS,\n    new_chat_members: USER_KEYS,\n    left_chat_member: USER_KEYS,\n    group_chat_created: {},\n    supergroup_chat_created: {},\n    migrate_to_chat_id: {},\n    migrate_from_chat_id: {},\n    successful_payment: {},\n    refunded_payment: {},\n    users_shared: {},\n    chat_shared: {},\n    connected_website: {},\n    write_access_allowed: {},\n    passport_data: {},\n    boost_added: {},\n    forum_topic_created: {},\n    forum_topic_edited: { name: {}, icon_custom_emoji_id: {} },\n    forum_topic_closed: {},\n    forum_topic_reopened: {},\n    general_forum_topic_hidden: {},\n    general_forum_topic_unhidden: {},\n    checklist: { others_can_add_tasks: {}, others_can_mark_tasks_as_done: {} },\n    checklist_tasks_done: {},\n    checklist_tasks_added: {},\n    sender_boost_count: {},\n};\nconst CHANNEL_POST_KEYS = {\n    ...COMMON_MESSAGE_KEYS,\n    channel_chat_created: {},\n    direct_message_price_changed: {},\n};\nconst BUSINESS_CONNECTION_KEYS = {\n    can_reply: {},\n    is_enabled: {},\n};\nconst MESSAGE_REACTION_KEYS = {\n    old_reaction: REACTION_KEYS,\n    new_reaction: REACTION_KEYS,\n};\nconst MESSAGE_REACTION_COUNT_UPDATED_KEYS = {\n    reactions: REACTION_KEYS,\n};\nconst CALLBACK_QUERY_KEYS = { data: {}, game_short_name: {} };\nconst CHAT_MEMBER_UPDATED_KEYS = { from: USER_KEYS };\n// L1\nconst UPDATE_KEYS = {\n    message: MESSAGE_KEYS,\n    edited_message: MESSAGE_KEYS,\n    channel_post: CHANNEL_POST_KEYS,\n    edited_channel_post: CHANNEL_POST_KEYS,\n    business_connection: BUSINESS_CONNECTION_KEYS,\n    business_message: MESSAGE_KEYS,\n    edited_business_message: MESSAGE_KEYS,\n    deleted_business_messages: {},\n    inline_query: {},\n    chosen_inline_result: {},\n    callback_query: CALLBACK_QUERY_KEYS,\n    shipping_query: {},\n    pre_checkout_query: {},\n    poll: {},\n    poll_answer: {},\n    my_chat_member: CHAT_MEMBER_UPDATED_KEYS,\n    chat_member: CHAT_MEMBER_UPDATED_KEYS,\n    chat_join_request: {},\n    message_reaction: MESSAGE_REACTION_KEYS,\n    message_reaction_count: MESSAGE_REACTION_COUNT_UPDATED_KEYS,\n    chat_boost: {},\n    removed_chat_boost: {},\n    purchased_paid_media: {},\n};\n// === Define some helpers for handling shortcuts, e.g. in 'edit:photo'\nconst L1_SHORTCUTS = {\n    \"\": [\"message\", \"channel_post\"],\n    msg: [\"message\", \"channel_post\"],\n    edit: [\"edited_message\", \"edited_channel_post\"],\n};\nconst L2_SHORTCUTS = {\n    \"\": [\"entities\", \"caption_entities\"],\n    media: [\"photo\", \"video\"],\n    file: [\n        \"photo\",\n        \"animation\",\n        \"audio\",\n        \"document\",\n        \"video\",\n        \"video_note\",\n        \"voice\",\n        \"sticker\",\n    ],\n};\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Context = void 0;\nconst filter_js_1 = require(\"./filter.js\");\nconst checker = {\n    filterQuery(filter) {\n        const pred = (0, filter_js_1.matchFilter)(filter);\n        return (ctx) => pred(ctx);\n    },\n    text(trigger) {\n        const hasText = checker.filterQuery([\":text\", \":caption\"]);\n        const trg = triggerFn(trigger);\n        return (ctx) => {\n            var _a, _b;\n            if (!hasText(ctx))\n                return false;\n            const msg = (_a = ctx.message) !== null && _a !== void 0 ? _a : ctx.channelPost;\n            const txt = (_b = msg.text) !== null && _b !== void 0 ? _b : msg.caption;\n            return match(ctx, txt, trg);\n        };\n    },\n    command(command) {\n        const hasEntities = checker.filterQuery(\":entities:bot_command\");\n        const atCommands = new Set();\n        const noAtCommands = new Set();\n        toArray(command).forEach((cmd) => {\n            if (cmd.startsWith(\"/\")) {\n                throw new Error(`Do not include '/' when registering command handlers (use '${cmd.substring(1)}' not '${cmd}')`);\n            }\n            const set = cmd.includes(\"@\") ? atCommands : noAtCommands;\n            set.add(cmd);\n        });\n        return (ctx) => {\n            var _a, _b;\n            if (!hasEntities(ctx))\n                return false;\n            const msg = (_a = ctx.message) !== null && _a !== void 0 ? _a : ctx.channelPost;\n            const txt = (_b = msg.text) !== null && _b !== void 0 ? _b : msg.caption;\n            return msg.entities.some((e) => {\n                if (e.type !== \"bot_command\")\n                    return false;\n                if (e.offset !== 0)\n                    return false;\n                const cmd = txt.substring(1, e.length);\n                if (noAtCommands.has(cmd) || atCommands.has(cmd)) {\n                    ctx.match = txt.substring(cmd.length + 1).trimStart();\n                    return true;\n                }\n                const index = cmd.indexOf(\"@\");\n                if (index === -1)\n                    return false;\n                const atTarget = cmd.substring(index + 1).toLowerCase();\n                const username = ctx.me.username.toLowerCase();\n                if (atTarget !== username)\n                    return false;\n                const atCommand = cmd.substring(0, index);\n                if (noAtCommands.has(atCommand)) {\n                    ctx.match = txt.substring(cmd.length + 1).trimStart();\n                    return true;\n                }\n                return false;\n            });\n        };\n    },\n    reaction(reaction) {\n        const hasMessageReaction = checker.filterQuery(\"message_reaction\");\n        const normalized = typeof reaction === \"string\"\n            ? [{ type: \"emoji\", emoji: reaction }]\n            : (Array.isArray(reaction) ? reaction : [reaction]).map((emoji) => typeof emoji === \"string\" ? { type: \"emoji\", emoji } : emoji);\n        const emoji = new Set(normalized.filter((r) => r.type === \"emoji\")\n            .map((r) => r.emoji));\n        const customEmoji = new Set(normalized.filter((r) => r.type === \"custom_emoji\")\n            .map((r) => r.custom_emoji_id));\n        const paid = normalized.some((r) => r.type === \"paid\");\n        return (ctx) => {\n            if (!hasMessageReaction(ctx))\n                return false;\n            const { old_reaction, new_reaction } = ctx.messageReaction;\n            // try to find a wanted reaction that is new and not old\n            for (const reaction of new_reaction) {\n                // first check if the reaction existed previously\n                let isOld = false;\n                if (reaction.type === \"emoji\") {\n                    for (const old of old_reaction) {\n                        if (old.type !== \"emoji\")\n                            continue;\n                        if (old.emoji === reaction.emoji) {\n                            isOld = true;\n                            break;\n                        }\n                    }\n                }\n                else if (reaction.type === \"custom_emoji\") {\n                    for (const old of old_reaction) {\n                        if (old.type !== \"custom_emoji\")\n                            continue;\n                        if (old.custom_emoji_id === reaction.custom_emoji_id) {\n                            isOld = true;\n                            break;\n                        }\n                    }\n                }\n                else if (reaction.type === \"paid\") {\n                    for (const old of old_reaction) {\n                        if (old.type !== \"paid\")\n                            continue;\n                        isOld = true;\n                        break;\n                    }\n                }\n                else {\n                    // always regard unsupported emoji types as new\n                }\n                // disregard reaction if it is not new\n                if (isOld)\n                    continue;\n                // check if the new reaction is wanted and short-circuit\n                if (reaction.type === \"emoji\") {\n                    if (emoji.has(reaction.emoji))\n                        return true;\n                }\n                else if (reaction.type === \"custom_emoji\") {\n                    if (customEmoji.has(reaction.custom_emoji_id))\n                        return true;\n                }\n                else if (reaction.type === \"paid\") {\n                    if (paid)\n                        return true;\n                }\n                else {\n                    // always regard unsupported emoji types as new\n                    return true;\n                }\n                // new reaction not wanted, check next one\n            }\n            return false;\n        };\n    },\n    chatType(chatType) {\n        const set = new Set(toArray(chatType));\n        return (ctx) => { var _a; return ((_a = ctx.chat) === null || _a === void 0 ? void 0 : _a.type) !== undefined && set.has(ctx.chat.type); };\n    },\n    callbackQuery(trigger) {\n        const hasCallbackQuery = checker.filterQuery(\"callback_query:data\");\n        const trg = triggerFn(trigger);\n        return (ctx) => hasCallbackQuery(ctx) && match(ctx, ctx.callbackQuery.data, trg);\n    },\n    gameQuery(trigger) {\n        const hasGameQuery = checker.filterQuery(\"callback_query:game_short_name\");\n        const trg = triggerFn(trigger);\n        return (ctx) => hasGameQuery(ctx) &&\n            match(ctx, ctx.callbackQuery.game_short_name, trg);\n    },\n    inlineQuery(trigger) {\n        const hasInlineQuery = checker.filterQuery(\"inline_query\");\n        const trg = triggerFn(trigger);\n        return (ctx) => hasInlineQuery(ctx) && match(ctx, ctx.inlineQuery.query, trg);\n    },\n    chosenInlineResult(trigger) {\n        const hasChosenInlineResult = checker.filterQuery(\"chosen_inline_result\");\n        const trg = triggerFn(trigger);\n        return (ctx) => hasChosenInlineResult(ctx) &&\n            match(ctx, ctx.chosenInlineResult.result_id, trg);\n    },\n    preCheckoutQuery(trigger) {\n        const hasPreCheckoutQuery = checker.filterQuery(\"pre_checkout_query\");\n        const trg = triggerFn(trigger);\n        return (ctx) => hasPreCheckoutQuery(ctx) &&\n            match(ctx, ctx.preCheckoutQuery.invoice_payload, trg);\n    },\n    shippingQuery(trigger) {\n        const hasShippingQuery = checker.filterQuery(\"shipping_query\");\n        const trg = triggerFn(trigger);\n        return (ctx) => hasShippingQuery(ctx) &&\n            match(ctx, ctx.shippingQuery.invoice_payload, trg);\n    },\n};\n// === Context class\n/**\n * When your bot receives a message, Telegram sends an update object to your\n * bot. The update contains information about the chat, the user, and of course\n * the message itself. There are numerous other updates, too:\n * https://core.telegram.org/bots/api#update\n *\n * When grammY receives an update, it wraps this update into a context object\n * for you. Context objects are commonly named `ctx`. A context object does two\n * things:\n * 1. **`ctx.update`** holds the update object that you can use to process the\n *    message. This includes providing useful shortcuts for the update, for\n *    instance, `ctx.msg` is a shortcut that gives you the message object from\n *    the update—no matter whether it is contained in `ctx.update.message`, or\n *    `ctx.update.edited_message`, or `ctx.update.channel_post`, or\n *    `ctx.update.edited_channel_post`.\n * 2. **`ctx.api`** gives you access to the full Telegram Bot API so that you\n *    can directly call any method, such as responding via\n *    `ctx.api.sendMessage`. Also here, the context objects has some useful\n *    shortcuts for you. For instance, if you want to send a message to the same\n *    chat that a message comes from (i.e. just respond to a user) you can call\n *    `ctx.reply`. This is nothing but a wrapper for `ctx.api.sendMessage` with\n *    the right `chat_id` pre-filled for you. Almost all methods of the Telegram\n *    Bot API have their own shortcut directly on the context object, so you\n *    probably never really have to use `ctx.api` at all.\n *\n * This context object is then passed to all of the listeners (called\n * middleware) that you register on your bot. Because this is so useful, the\n * context object is often used to hold more information. One example are\n * sessions (a chat-specific data storage that is stored in a database), and\n * another example is `ctx.match` that is used by `bot.command` and other\n * methods to keep information about how a regular expression was matched.\n *\n * Read up about middleware on the\n * [website](https://grammy.dev/guide/context) if you want to know more\n * about the powerful opportunities that lie in context objects, and about how\n * grammY implements them.\n */\nclass Context {\n    constructor(\n    /**\n     * The update object that is contained in the context.\n     */\n    update, \n    /**\n     * An API instance that allows you to call any method of the Telegram\n     * Bot API.\n     */\n    api, \n    /**\n     * Information about the bot itself.\n     */\n    me) {\n        this.update = update;\n        this.api = api;\n        this.me = me;\n    }\n    // UPDATE SHORTCUTS\n    // Keep in sync with types in `filter.ts`.\n    /** Alias for `ctx.update.message` */\n    get message() {\n        return this.update.message;\n    }\n    /** Alias for `ctx.update.edited_message` */\n    get editedMessage() {\n        return this.update.edited_message;\n    }\n    /** Alias for `ctx.update.channel_post` */\n    get channelPost() {\n        return this.update.channel_post;\n    }\n    /** Alias for `ctx.update.edited_channel_post` */\n    get editedChannelPost() {\n        return this.update.edited_channel_post;\n    }\n    /** Alias for `ctx.update.business_connection` */\n    get businessConnection() {\n        return this.update.business_connection;\n    }\n    /** Alias for `ctx.update.business_message` */\n    get businessMessage() {\n        return this.update.business_message;\n    }\n    /** Alias for `ctx.update.edited_business_message` */\n    get editedBusinessMessage() {\n        return this.update.edited_business_message;\n    }\n    /** Alias for `ctx.update.deleted_business_messages` */\n    get deletedBusinessMessages() {\n        return this.update.deleted_business_messages;\n    }\n    /** Alias for `ctx.update.message_reaction` */\n    get messageReaction() {\n        return this.update.message_reaction;\n    }\n    /** Alias for `ctx.update.message_reaction_count` */\n    get messageReactionCount() {\n        return this.update.message_reaction_count;\n    }\n    /** Alias for `ctx.update.inline_query` */\n    get inlineQuery() {\n        return this.update.inline_query;\n    }\n    /** Alias for `ctx.update.chosen_inline_result` */\n    get chosenInlineResult() {\n        return this.update.chosen_inline_result;\n    }\n    /** Alias for `ctx.update.callback_query` */\n    get callbackQuery() {\n        return this.update.callback_query;\n    }\n    /** Alias for `ctx.update.shipping_query` */\n    get shippingQuery() {\n        return this.update.shipping_query;\n    }\n    /** Alias for `ctx.update.pre_checkout_query` */\n    get preCheckoutQuery() {\n        return this.update.pre_checkout_query;\n    }\n    /** Alias for `ctx.update.poll` */\n    get poll() {\n        return this.update.poll;\n    }\n    /** Alias for `ctx.update.poll_answer` */\n    get pollAnswer() {\n        return this.update.poll_answer;\n    }\n    /** Alias for `ctx.update.my_chat_member` */\n    get myChatMember() {\n        return this.update.my_chat_member;\n    }\n    /** Alias for `ctx.update.chat_member` */\n    get chatMember() {\n        return this.update.chat_member;\n    }\n    /** Alias for `ctx.update.chat_join_request` */\n    get chatJoinRequest() {\n        return this.update.chat_join_request;\n    }\n    /** Alias for `ctx.update.chat_boost` */\n    get chatBoost() {\n        return this.update.chat_boost;\n    }\n    /** Alias for `ctx.update.removed_chat_boost` */\n    get removedChatBoost() {\n        return this.update.removed_chat_boost;\n    }\n    /** Alias for `ctx.update.purchased_paid_media` */\n    get purchasedPaidMedia() {\n        return this.update.purchased_paid_media;\n    }\n    // AGGREGATION SHORTCUTS\n    /**\n     * Get the message object from wherever possible. Alias for `this.message ??\n     * this.editedMessage ?? this.channelPost ?? this.editedChannelPost ??\n     * this.businessMessage ?? this.editedBusinessMessage ??\n     * this.callbackQuery?.message`.\n     */\n    get msg() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        // Keep in sync with types in `filter.ts`.\n        return ((_f = (_e = (_d = (_c = (_b = (_a = this.message) !== null && _a !== void 0 ? _a : this.editedMessage) !== null && _b !== void 0 ? _b : this.channelPost) !== null && _c !== void 0 ? _c : this.editedChannelPost) !== null && _d !== void 0 ? _d : this.businessMessage) !== null && _e !== void 0 ? _e : this.editedBusinessMessage) !== null && _f !== void 0 ? _f : (_g = this.callbackQuery) === null || _g === void 0 ? void 0 : _g.message);\n    }\n    /**\n     * Get the chat object from wherever possible. Alias for `(this.msg ??\n     * this.deletedBusinessMessages ?? this.messageReaction ??\n     * this.messageReactionCount ?? this.myChatMember ??  this.chatMember ??\n     * this.chatJoinRequest ?? this.chatBoost ??  this.removedChatBoost)?.chat`.\n     */\n    get chat() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        // Keep in sync with types in `filter.ts`.\n        return (_j = ((_h = (_g = (_f = (_e = (_d = (_c = (_b = (_a = this.msg) !== null && _a !== void 0 ? _a : this.deletedBusinessMessages) !== null && _b !== void 0 ? _b : this.messageReaction) !== null && _c !== void 0 ? _c : this.messageReactionCount) !== null && _d !== void 0 ? _d : this.myChatMember) !== null && _e !== void 0 ? _e : this.chatMember) !== null && _f !== void 0 ? _f : this.chatJoinRequest) !== null && _g !== void 0 ? _g : this.chatBoost) !== null && _h !== void 0 ? _h : this.removedChatBoost)) === null || _j === void 0 ? void 0 : _j.chat;\n    }\n    /**\n     * Get the sender chat object from wherever possible. Alias for\n     * `ctx.msg?.sender_chat`.\n     */\n    get senderChat() {\n        var _a;\n        // Keep in sync with types in `filter.ts`.\n        return (_a = this.msg) === null || _a === void 0 ? void 0 : _a.sender_chat;\n    }\n    /**\n     * Get the user object from wherever possible. Alias for\n     * `(this.businessConnection ?? this.messageReaction ??\n     * (this.chatBoost?.boost ?? this.removedChatBoost)?.source)?.user ??\n     * (this.callbackQuery ?? this.msg ?? this.inlineQuery ??\n     * this.chosenInlineResult ?? this.shippingQuery ?? this.preCheckoutQuery ??\n     * this.myChatMember ?? this.chatMember ?? this.chatJoinRequest ??\n     * this.purchasedPaidMedia)?.from`.\n     */\n    get from() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n        // Keep in sync with types in `filter.ts`.\n        return (_g = (_f = ((_b = (_a = this.businessConnection) !== null && _a !== void 0 ? _a : this.messageReaction) !== null && _b !== void 0 ? _b : (_e = ((_d = (_c = this.chatBoost) === null || _c === void 0 ? void 0 : _c.boost) !== null && _d !== void 0 ? _d : this.removedChatBoost)) === null || _e === void 0 ? void 0 : _e.source)) === null || _f === void 0 ? void 0 : _f.user) !== null && _g !== void 0 ? _g : (_s = ((_r = (_q = (_p = (_o = (_m = (_l = (_k = (_j = (_h = this.callbackQuery) !== null && _h !== void 0 ? _h : this.msg) !== null && _j !== void 0 ? _j : this.inlineQuery) !== null && _k !== void 0 ? _k : this.chosenInlineResult) !== null && _l !== void 0 ? _l : this.shippingQuery) !== null && _m !== void 0 ? _m : this.preCheckoutQuery) !== null && _o !== void 0 ? _o : this.myChatMember) !== null && _p !== void 0 ? _p : this.chatMember) !== null && _q !== void 0 ? _q : this.chatJoinRequest) !== null && _r !== void 0 ? _r : this.purchasedPaidMedia)) === null || _s === void 0 ? void 0 : _s.from;\n    }\n    /**\n     * Get the message identifier from wherever possible. Alias for\n     * `this.msg?.message_id ?? this.messageReaction?.message_id ??\n     * this.messageReactionCount?.message_id`.\n     */\n    get msgId() {\n        var _a, _b, _c, _d, _e;\n        // Keep in sync with types in `filter.ts`.\n        return (_d = (_b = (_a = this.msg) === null || _a === void 0 ? void 0 : _a.message_id) !== null && _b !== void 0 ? _b : (_c = this.messageReaction) === null || _c === void 0 ? void 0 : _c.message_id) !== null && _d !== void 0 ? _d : (_e = this.messageReactionCount) === null || _e === void 0 ? void 0 : _e.message_id;\n    }\n    /**\n     * Gets the chat identifier from wherever possible. Alias for `this.chat?.id\n     * ?? this.businessConnection?.user_chat_id`.\n     */\n    get chatId() {\n        var _a, _b, _c;\n        // Keep in sync with types in `filter.ts`.\n        return (_b = (_a = this.chat) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : (_c = this.businessConnection) === null || _c === void 0 ? void 0 : _c.user_chat_id;\n    }\n    /**\n     * Get the inline message identifier from wherever possible. Alias for\n     * `(ctx.callbackQuery ?? ctx.chosenInlineResult)?.inline_message_id`.\n     */\n    get inlineMessageId() {\n        var _a, _b, _c;\n        return ((_b = (_a = this.callbackQuery) === null || _a === void 0 ? void 0 : _a.inline_message_id) !== null && _b !== void 0 ? _b : (_c = this.chosenInlineResult) === null || _c === void 0 ? void 0 : _c.inline_message_id);\n    }\n    /**\n     * Get the business connection identifier from wherever possible. Alias for\n     * `this.msg?.business_connection_id ?? this.businessConnection?.id ??\n     * this.deletedBusinessMessages?.business_connection_id`.\n     */\n    get businessConnectionId() {\n        var _a, _b, _c, _d, _e;\n        return (_d = (_b = (_a = this.msg) === null || _a === void 0 ? void 0 : _a.business_connection_id) !== null && _b !== void 0 ? _b : (_c = this.businessConnection) === null || _c === void 0 ? void 0 : _c.id) !== null && _d !== void 0 ? _d : (_e = this.deletedBusinessMessages) === null || _e === void 0 ? void 0 : _e.business_connection_id;\n    }\n    entities(types) {\n        var _a, _b;\n        const message = this.msg;\n        if (message === undefined)\n            return [];\n        const text = (_a = message.text) !== null && _a !== void 0 ? _a : message.caption;\n        if (text === undefined)\n            return [];\n        let entities = (_b = message.entities) !== null && _b !== void 0 ? _b : message.caption_entities;\n        if (entities === undefined)\n            return [];\n        if (types !== undefined) {\n            const filters = new Set(toArray(types));\n            entities = entities.filter((entity) => filters.has(entity.type));\n        }\n        return entities.map((entity) => ({\n            ...entity,\n            text: text.substring(entity.offset, entity.offset + entity.length),\n        }));\n    }\n    /**\n     * Find out which reactions were added and removed in a `message_reaction`\n     * update. This method looks at `ctx.messageReaction` and computes the\n     * difference between the old reaction and the new reaction. It also groups\n     * the reactions by emoji reactions and custom emoji reactions. For example,\n     * the resulting object could look like this:\n     * ```ts\n     * {\n     *   emoji: ['👍', '🎉']\n     *   emojiAdded: ['🎉'],\n     *   emojiKept: ['👍'],\n     *   emojiRemoved: [],\n     *   customEmoji: [],\n     *   customEmojiAdded: [],\n     *   customEmojiKept: [],\n     *   customEmojiRemoved: ['id0123'],\n     *   paid: true,\n     *   paidAdded: false,\n     *   paidRemoved: false,\n     * }\n     * ```\n     * In the above example, a tada reaction was added by the user, and a custom\n     * emoji reaction with the custom emoji 'id0123' was removed in the same\n     * update. The user had already reacted with a thumbs up reaction and a paid\n     * star reaction, which they left both unchanged. As a result, the current\n     * reaction by the user is thumbs up, tada, and a paid reaction. Note that\n     * the current reaction (all emoji reactions regardless of type in one list)\n     * can also be obtained from `ctx.messageReaction.new_reaction`.\n     *\n     * Remember that reaction updates only include information about the\n     * reaction of a specific user. The respective message may have many more\n     * reactions by other people which will not be included in this update.\n     *\n     * @returns An object containing information about the reaction update\n     */\n    reactions() {\n        const emoji = [];\n        const emojiAdded = [];\n        const emojiKept = [];\n        const emojiRemoved = [];\n        const customEmoji = [];\n        const customEmojiAdded = [];\n        const customEmojiKept = [];\n        const customEmojiRemoved = [];\n        let paid = false;\n        let paidAdded = false;\n        const r = this.messageReaction;\n        if (r !== undefined) {\n            const { old_reaction, new_reaction } = r;\n            // group all current emoji in `emoji` and `customEmoji`\n            for (const reaction of new_reaction) {\n                if (reaction.type === \"emoji\") {\n                    emoji.push(reaction.emoji);\n                }\n                else if (reaction.type === \"custom_emoji\") {\n                    customEmoji.push(reaction.custom_emoji_id);\n                }\n                else if (reaction.type === \"paid\") {\n                    paid = paidAdded = true;\n                }\n            }\n            // temporarily move all old emoji to the *Removed arrays\n            for (const reaction of old_reaction) {\n                if (reaction.type === \"emoji\") {\n                    emojiRemoved.push(reaction.emoji);\n                }\n                else if (reaction.type === \"custom_emoji\") {\n                    customEmojiRemoved.push(reaction.custom_emoji_id);\n                }\n                else if (reaction.type === \"paid\") {\n                    paidAdded = false;\n                }\n            }\n            // temporarily move all new emoji to the *Added arrays\n            emojiAdded.push(...emoji);\n            customEmojiAdded.push(...customEmoji);\n            // drop common emoji from both lists and add them to `emojiKept`\n            for (let i = 0; i < emojiRemoved.length; i++) {\n                const len = emojiAdded.length;\n                if (len === 0)\n                    break;\n                const rem = emojiRemoved[i];\n                for (let j = 0; j < len; j++) {\n                    if (rem === emojiAdded[j]) {\n                        emojiKept.push(rem);\n                        emojiRemoved.splice(i, 1);\n                        emojiAdded.splice(j, 1);\n                        i--;\n                        break;\n                    }\n                }\n            }\n            // drop common custom emoji from both lists and add them to `customEmojiKept`\n            for (let i = 0; i < customEmojiRemoved.length; i++) {\n                const len = customEmojiAdded.length;\n                if (len === 0)\n                    break;\n                const rem = customEmojiRemoved[i];\n                for (let j = 0; j < len; j++) {\n                    if (rem === customEmojiAdded[j]) {\n                        customEmojiKept.push(rem);\n                        customEmojiRemoved.splice(i, 1);\n                        customEmojiAdded.splice(j, 1);\n                        i--;\n                        break;\n                    }\n                }\n            }\n        }\n        return {\n            emoji,\n            emojiAdded,\n            emojiKept,\n            emojiRemoved,\n            customEmoji,\n            customEmojiAdded,\n            customEmojiKept,\n            customEmojiRemoved,\n            paid,\n            paidAdded,\n        };\n    }\n    /**\n     * Returns `true` if this context object matches the given filter query, and\n     * `false` otherwise. This uses the same logic as `bot.on`.\n     *\n     * @param filter The filter query to check\n     */\n    has(filter) {\n        return Context.has.filterQuery(filter)(this);\n    }\n    /**\n     * Returns `true` if this context object contains the given text, or if it\n     * contains text that matches the given regular expression. It returns\n     * `false` otherwise. This uses the same logic as `bot.hears`.\n     *\n     * @param trigger The string or regex to match\n     */\n    hasText(trigger) {\n        return Context.has.text(trigger)(this);\n    }\n    /**\n     * Returns `true` if this context object contains the given command, and\n     * `false` otherwise. This uses the same logic as `bot.command`.\n     *\n     * @param command The command to match\n     */\n    hasCommand(command) {\n        return Context.has.command(command)(this);\n    }\n    hasReaction(reaction) {\n        return Context.has.reaction(reaction)(this);\n    }\n    /**\n     * Returns `true` if this context object belongs to a chat with the given\n     * chat type, and `false` otherwise. This uses the same logic as\n     * `bot.chatType`.\n     *\n     * @param chatType The chat type to match\n     */\n    hasChatType(chatType) {\n        return Context.has.chatType(chatType)(this);\n    }\n    /**\n     * Returns `true` if this context object contains the given callback query,\n     * or if the contained callback query data matches the given regular\n     * expression. It returns `false` otherwise. This uses the same logic as\n     * `bot.callbackQuery`.\n     *\n     * @param trigger The string or regex to match\n     */\n    hasCallbackQuery(trigger) {\n        return Context.has.callbackQuery(trigger)(this);\n    }\n    /**\n     * Returns `true` if this context object contains the given game query, or\n     * if the contained game query matches the given regular expression. It\n     * returns `false` otherwise. This uses the same logic as `bot.gameQuery`.\n     *\n     * @param trigger The string or regex to match\n     */\n    hasGameQuery(trigger) {\n        return Context.has.gameQuery(trigger)(this);\n    }\n    /**\n     * Returns `true` if this context object contains the given inline query, or\n     * if the contained inline query matches the given regular expression. It\n     * returns `false` otherwise. This uses the same logic as `bot.inlineQuery`.\n     *\n     * @param trigger The string or regex to match\n     */\n    hasInlineQuery(trigger) {\n        return Context.has.inlineQuery(trigger)(this);\n    }\n    /**\n     * Returns `true` if this context object contains the chosen inline result,\n     * or if the contained chosen inline result matches the given regular\n     * expression. It returns `false` otherwise. This uses the same logic as\n     * `bot.chosenInlineResult`.\n     *\n     * @param trigger The string or regex to match\n     */\n    hasChosenInlineResult(trigger) {\n        return Context.has.chosenInlineResult(trigger)(this);\n    }\n    /**\n     * Returns `true` if this context object contains the given pre-checkout\n     * query, or if the contained pre-checkout query matches the given regular\n     * expression. It returns `false` otherwise. This uses the same logic as\n     * `bot.preCheckoutQuery`.\n     *\n     * @param trigger The string or regex to match\n     */\n    hasPreCheckoutQuery(trigger) {\n        return Context.has.preCheckoutQuery(trigger)(this);\n    }\n    /**\n     * Returns `true` if this context object contains the given shipping query,\n     * or if the contained shipping query matches the given regular expression.\n     * It returns `false` otherwise. This uses the same logic as\n     * `bot.shippingQuery`.\n     *\n     * @param trigger The string or regex to match\n     */\n    hasShippingQuery(trigger) {\n        return Context.has.shippingQuery(trigger)(this);\n    }\n    // API\n    /**\n     * Context-aware alias for `api.sendMessage`. Use this method to send text messages. On success, the sent Message is returned.\n     *\n     * @param text Text of the message to be sent, 1-4096 characters after entities parsing\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendmessage\n     */\n    reply(text, other, signal) {\n        return this.api.sendMessage(orThrow(this.chatId, \"sendMessage\"), text, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.forwardMessage`. Use this method to forward messages of any kind. Service messages and messages with protected content can't be forwarded. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#forwardmessage\n     */\n    forwardMessage(chat_id, other, signal) {\n        return this.api.forwardMessage(chat_id, orThrow(this.chatId, \"forwardMessage\"), orThrow(this.msgId, \"forwardMessage\"), other, signal);\n    }\n    /**\n     * Context-aware alias for `api.forwardMessages`. Use this method to forward multiple messages of any kind. If some of the specified messages can't be found or forwarded, they are skipped. Service messages and messages with protected content can't be forwarded. Album grouping is kept for forwarded messages. On success, an array of MessageId of the sent messages is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_ids A list of 1-100 identifiers of messages in the current chat to forward. The identifiers must be specified in a strictly increasing order.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#forwardmessages\n     */\n    forwardMessages(chat_id, message_ids, other, signal) {\n        return this.api.forwardMessages(chat_id, orThrow(this.chatId, \"forwardMessages\"), message_ids, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.copyMessage`. Use this method to copy messages of any kind. Service messages, paid media messages, giveaway messages, giveaway winners messages, and invoice messages can't be copied. A quiz poll can be copied only if the value of the field correct_option_id is known to the bot. The method is analogous to the method forwardMessage, but the copied message doesn't have a link to the original message. Returns the MessageId of the sent message on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#copymessage\n     */\n    copyMessage(chat_id, other, signal) {\n        return this.api.copyMessage(chat_id, orThrow(this.chatId, \"copyMessage\"), orThrow(this.msgId, \"copyMessage\"), other, signal);\n    }\n    /**\n     * Context-aware alias for `api.copyMessages`. Use this method to copy messages of any kind. If some of the specified messages can't be found or copied, they are skipped. Service messages, paid media messages, giveaway messages, giveaway winners messages, and invoice messages can't be copied. A quiz poll can be copied only if the value of the field correct_option_id is known to the bot. The method is analogous to the method forwardMessages, but the copied messages don't have a link to the original message. Album grouping is kept for copied messages. On success, an array of MessageId of the sent messages is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_ids A list of 1-100 identifiers of messages in the current chat to copy. The identifiers must be specified in a strictly increasing order.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#copymessages\n     */\n    copyMessages(chat_id, message_ids, other, signal) {\n        return this.api.copyMessages(chat_id, orThrow(this.chatId, \"copyMessages\"), message_ids, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendPhoto`. Use this method to send photos. On success, the sent Message is returned.\n     *\n     * @param photo Photo to send. Pass a file_id as String to send a photo that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a photo from the Internet, or upload a new photo using multipart/form-data. The photo must be at most 10 MB in size. The photo's width and height must not exceed 10000 in total. Width and height ratio must be at most 20.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendphoto\n     */\n    replyWithPhoto(photo, other, signal) {\n        return this.api.sendPhoto(orThrow(this.chatId, \"sendPhoto\"), photo, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendAudio`. Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .MP3 or .M4A format. On success, the sent Message is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * For sending voice messages, use the sendVoice method instead.\n     *\n     * @param audio Audio file to send. Pass a file_id as String to send an audio file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an audio file from the Internet, or upload a new one using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendaudio\n     */\n    replyWithAudio(audio, other, signal) {\n        return this.api.sendAudio(orThrow(this.chatId, \"sendAudio\"), audio, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendDocument`. Use this method to send general files. On success, the sent Message is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * @param document File to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#senddocument\n     */\n    replyWithDocument(document, other, signal) {\n        return this.api.sendDocument(orThrow(this.chatId, \"sendDocument\"), document, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendVideo`. Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * @param video Video to send. Pass a file_id as String to send a video that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a video from the Internet, or upload a new video using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendvideo\n     */\n    replyWithVideo(video, other, signal) {\n        return this.api.sendVideo(orThrow(this.chatId, \"sendVideo\"), video, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendAnimation`. Use this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound). On success, the sent Message is returned. Bots can currently send animation files of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * @param animation Animation to send. Pass a file_id as String to send an animation that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an animation from the Internet, or upload a new animation using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendanimation\n     */\n    replyWithAnimation(animation, other, signal) {\n        return this.api.sendAnimation(orThrow(this.chatId, \"sendAnimation\"), animation, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendVoice`. Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .OGG file encoded with OPUS (other formats may be sent as Audio or Document). On success, the sent Message is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * @param voice Audio file to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendvoice\n     */\n    replyWithVoice(voice, other, signal) {\n        return this.api.sendVoice(orThrow(this.chatId, \"sendVoice\"), voice, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendVideoNote`. Use this method to send video messages. On success, the sent Message is returned.\n     * As of v.4.0, Telegram clients support rounded square mp4 videos of up to 1 minute long.\n     *\n     * @param video_note Video note to send. Pass a file_id as String to send a video note that exists on the Telegram servers (recommended) or upload a new video using multipart/form-data.. Sending video notes by a URL is currently unsupported\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendvideonote\n     */\n    replyWithVideoNote(video_note, other, signal) {\n        return this.api.sendVideoNote(orThrow(this.chatId, \"sendVideoNote\"), video_note, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendMediaGroup`. Use this method to send a group of photos, videos, documents or audios as an album. Documents and audio files can be only grouped in an album with messages of the same type. On success, an array of Messages that were sent is returned.\n     *\n     * @param media An array describing messages to be sent, must include 2-10 items\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendmediagroup\n     */\n    replyWithMediaGroup(media, other, signal) {\n        return this.api.sendMediaGroup(orThrow(this.chatId, \"sendMediaGroup\"), media, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendLocation`. Use this method to send point on the map. On success, the sent Message is returned.\n     *\n     * @param latitude Latitude of the location\n     * @param longitude Longitude of the location\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendlocation\n     */\n    replyWithLocation(latitude, longitude, other, signal) {\n        return this.api.sendLocation(orThrow(this.chatId, \"sendLocation\"), latitude, longitude, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.editMessageLiveLocation`. Use this method to edit live location messages. A location can be edited until its live_period expires or editing is explicitly disabled by a call to stopMessageLiveLocation. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned.\n     *\n     * @param latitude Latitude of new location\n     * @param longitude Longitude of new location\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagelivelocation\n     */\n    editMessageLiveLocation(latitude, longitude, other, signal) {\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined\n            ? this.api.editMessageLiveLocationInline(inlineId, latitude, longitude, { business_connection_id: this.businessConnectionId, ...other }, signal)\n            : this.api.editMessageLiveLocation(orThrow(this.chatId, \"editMessageLiveLocation\"), orThrow(this.msgId, \"editMessageLiveLocation\"), latitude, longitude, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.stopMessageLiveLocation`. Use this method to stop updating a live location message before live_period expires. On success, if the message is not an inline message, the edited Message is returned, otherwise True is returned.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#stopmessagelivelocation\n     */\n    stopMessageLiveLocation(other, signal) {\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined\n            ? this.api.stopMessageLiveLocationInline(inlineId, { business_connection_id: this.businessConnectionId, ...other }, signal)\n            : this.api.stopMessageLiveLocation(orThrow(this.chatId, \"stopMessageLiveLocation\"), orThrow(this.msgId, \"stopMessageLiveLocation\"), { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendPaidMedia`. Use this method to send paid media. On success, the sent Message is returned.\n     *\n     * @param star_count The number of Telegram Stars that must be paid to buy access to the media\n     * @param media An array describing the media to be sent; up to 10 items\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendpaidmedia\n     */\n    sendPaidMedia(star_count, media, other, signal) {\n        return this.api.sendPaidMedia(orThrow(this.chatId, \"sendPaidMedia\"), star_count, media, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendVenue`. Use this method to send information about a venue. On success, the sent Message is returned.\n     *\n     * @param latitude Latitude of the venue\n     * @param longitude Longitude of the venue\n     * @param title Name of the venue\n     * @param address Address of the venue\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendvenue\n     */\n    replyWithVenue(latitude, longitude, title, address, other, signal) {\n        return this.api.sendVenue(orThrow(this.chatId, \"sendVenue\"), latitude, longitude, title, address, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendContact`. Use this method to send phone contacts. On success, the sent Message is returned.\n     *\n     * @param phone_number Contact's phone number\n     * @param first_name Contact's first name\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendcontact\n     */\n    replyWithContact(phone_number, first_name, other, signal) {\n        return this.api.sendContact(orThrow(this.chatId, \"sendContact\"), phone_number, first_name, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendPoll`. Use this method to send a native poll. On success, the sent Message is returned.\n     *\n     * @param question Poll question, 1-300 characters\n     * @param options A list of answer options, 2-12 strings 1-100 characters each\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendpoll\n     */\n    replyWithPoll(question, options, other, signal) {\n        return this.api.sendPoll(orThrow(this.chatId, \"sendPoll\"), question, options, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendChecklist`. Use this method to send a checklist on behalf of a connected business account. On success, the sent Message is returned.\n     *\n     * @param checklist An object for the checklist to send\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendchecklist\n     */\n    replyWithChecklist(checklist, other, signal) {\n        return this.api.sendChecklist(orThrow(this.businessConnectionId, \"sendChecklist\"), orThrow(this.chatId, \"sendChecklist\"), checklist, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.editMessageChecklist`. Use this method to edit a checklist on behalf of a connected business account. On success, the edited Message is returned.\n     *\n     * @param checklist An object for the new checklist\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagechecklist\n     */\n    editMessageChecklist(checklist, other, signal) {\n        var _a, _b, _c, _d;\n        const msg = orThrow(this.msg, \"editMessageChecklist\");\n        const target = (_d = (_b = (_a = msg.checklist_tasks_done) === null || _a === void 0 ? void 0 : _a.checklist_message) !== null && _b !== void 0 ? _b : (_c = msg.checklist_tasks_added) === null || _c === void 0 ? void 0 : _c.checklist_message) !== null && _d !== void 0 ? _d : msg;\n        return this.api.editMessageChecklist(orThrow(this.businessConnectionId, \"editMessageChecklist\"), orThrow(target.chat.id, \"editMessageChecklist\"), orThrow(target.message_id, \"editMessageChecklist\"), checklist, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendDice`. Use this method to send an animated emoji that will display a random value. On success, the sent Message is returned.\n     *\n     * @param emoji Emoji on which the dice throw animation is based. Currently, must be one of “🎲”, “🎯”, “🏀”, “⚽”, “🎳”, or “🎰”. Dice can have values 1-6 for “🎲”, “🎯” and “🎳”, values 1-5 for “🏀” and “⚽”, and values 1-64 for “🎰”. Defaults to “🎲”\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#senddice\n     */\n    replyWithDice(emoji, other, signal) {\n        return this.api.sendDice(orThrow(this.chatId, \"sendDice\"), emoji, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendChatAction`. Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). Returns True on success.\n     *\n     * Example: The ImageBot needs some time to process a request and upload the image. Instead of sending a text message along the lines of “Retrieving image, please wait…”, the bot may use sendChatAction with action = upload_photo. The user will see a “sending photo” status for the bot.\n     *\n     * We only recommend using this method when a response from the bot will take a noticeable amount of time to arrive.\n     *\n     * @param action Type of action to broadcast. Choose one, depending on what the user is about to receive: typing for text messages, upload_photo for photos, record_video or upload_video for videos, record_voice or upload_voice for voice notes, upload_document for general files, choose_sticker for stickers, find_location for location data, record_video_note or upload_video_note for video notes.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendchataction\n     */\n    replyWithChatAction(action, other, signal) {\n        return this.api.sendChatAction(orThrow(this.chatId, \"sendChatAction\"), action, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.setMessageReaction`. Use this method to change the chosen reactions on a message. Service messages of some types can't be reacted to. Automatically forwarded messages from a channel to its discussion group have the same available reactions as messages in the channel. Bots can't use paid reactions. Returns True on success.\n     *\n     * @param reaction A list of reaction types to set on the message. Currently, as non-premium users, bots can set up to one reaction per message. A custom emoji reaction can be used if it is either already present on the message or explicitly allowed by chat administrators. Paid reactions can't be used by bots.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setmessagereaction\n     */\n    react(reaction, other, signal) {\n        return this.api.setMessageReaction(orThrow(this.chatId, \"setMessageReaction\"), orThrow(this.msgId, \"setMessageReaction\"), typeof reaction === \"string\"\n            ? [{ type: \"emoji\", emoji: reaction }]\n            : (Array.isArray(reaction) ? reaction : [reaction])\n                .map((emoji) => typeof emoji === \"string\"\n                ? { type: \"emoji\", emoji }\n                : emoji), other, signal);\n    }\n    /**\n     * Context-aware alias for `api.getUserProfilePhotos`. Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getuserprofilephotos\n     */\n    getUserProfilePhotos(other, signal) {\n        return this.api.getUserProfilePhotos(orThrow(this.from, \"getUserProfilePhotos\").id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.serUserEmojiStatus`. Changes the emoji status for a given user that previously allowed the bot to manage their emoji status via the Mini App method requestEmojiStatusAccess. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setuseremojistatus\n     */\n    setUserEmojiStatus(other, signal) {\n        return this.api.setUserEmojiStatus(orThrow(this.from, \"setUserEmojiStatus\").id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.getUserChatBoosts`. Use this method to get the list of boosts added to a chat by a user. Requires administrator rights in the chat. Returns a UserChatBoosts object.\n     *\n     * @param chat_id Unique identifier for the chat or username of the channel (in the format @channelusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getuserchatboosts\n     */\n    getUserChatBoosts(chat_id, signal) {\n        return this.api.getUserChatBoosts(chat_id, orThrow(this.from, \"getUserChatBoosts\").id, signal);\n    }\n    /**\n     * Context-aware alias for `api.getBusinessConnection`. Use this method to get information about the connection of the bot with a business account. Returns a BusinessConnection object on success.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getbusinessconnection\n     */\n    getBusinessConnection(signal) {\n        return this.api.getBusinessConnection(orThrow(this.businessConnectionId, \"getBusinessConnection\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.getFile`. Use this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a File object is returned. The file can then be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>, where <file_path> is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile again.\n     *\n     * Note: This function may not preserve the original file name and MIME type. You should save the file's MIME type and name (if available) when the File object is received.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getfile\n     */\n    getFile(signal) {\n        var _a, _b, _c, _d, _e, _f;\n        const m = orThrow(this.msg, \"getFile\");\n        const file = m.photo !== undefined\n            ? m.photo[m.photo.length - 1]\n            : (_f = (_e = (_d = (_c = (_b = (_a = m.animation) !== null && _a !== void 0 ? _a : m.audio) !== null && _b !== void 0 ? _b : m.document) !== null && _c !== void 0 ? _c : m.video) !== null && _d !== void 0 ? _d : m.video_note) !== null && _e !== void 0 ? _e : m.voice) !== null && _f !== void 0 ? _f : m.sticker;\n        return this.api.getFile(orThrow(file, \"getFile\").file_id, signal);\n    }\n    /** @deprecated Use `banAuthor` instead. */\n    kickAuthor(...args) {\n        return this.banAuthor(...args);\n    }\n    /**\n     * Context-aware alias for `api.banChatMember`. Use this method to ban a user in a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the chat on their own using invite links, etc., unless unbanned first. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#banchatmember\n     */\n    banAuthor(other, signal) {\n        return this.api.banChatMember(orThrow(this.chatId, \"banAuthor\"), orThrow(this.from, \"banAuthor\").id, other, signal);\n    }\n    /** @deprecated Use `banChatMember` instead. */\n    kickChatMember(...args) {\n        return this.banChatMember(...args);\n    }\n    /**\n     * Context-aware alias for `api.banChatMember`. Use this method to ban a user in a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the chat on their own using invite links, etc., unless unbanned first. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#banchatmember\n     */\n    banChatMember(user_id, other, signal) {\n        return this.api.banChatMember(orThrow(this.chatId, \"banChatMember\"), user_id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.unbanChatMember`. Use this method to unban a previously banned user in a supergroup or channel. The user will not return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. By default, this method guarantees that after the call the user is not a member of the chat, but will be able to join it. So if the user is a member of the chat they will also be removed from the chat. If you don't want this, use the parameter only_if_banned. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unbanchatmember\n     */\n    unbanChatMember(user_id, other, signal) {\n        return this.api.unbanChatMember(orThrow(this.chatId, \"unbanChatMember\"), user_id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.restrictChatMember`. Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate administrator rights. Pass True for all permissions to lift restrictions from a user. Returns True on success.\n     *\n     * @param permissions An object for new user permissions\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#restrictchatmember\n     */\n    restrictAuthor(permissions, other, signal) {\n        return this.api.restrictChatMember(orThrow(this.chatId, \"restrictAuthor\"), orThrow(this.from, \"restrictAuthor\").id, permissions, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.restrictChatMember`. Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate administrator rights. Pass True for all permissions to lift restrictions from a user. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param permissions An object for new user permissions\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#restrictchatmember\n     */\n    restrictChatMember(user_id, permissions, other, signal) {\n        return this.api.restrictChatMember(orThrow(this.chatId, \"restrictChatMember\"), user_id, permissions, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.promoteChatMember`. Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Pass False for all boolean parameters to demote a user. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#promotechatmember\n     */\n    promoteAuthor(other, signal) {\n        return this.api.promoteChatMember(orThrow(this.chatId, \"promoteAuthor\"), orThrow(this.from, \"promoteAuthor\").id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.promoteChatMember`. Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Pass False for all boolean parameters to demote a user. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#promotechatmember\n     */\n    promoteChatMember(user_id, other, signal) {\n        return this.api.promoteChatMember(orThrow(this.chatId, \"promoteChatMember\"), user_id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.setChatAdministratorCustomTitle`. Use this method to set a custom title for an administrator in a supergroup promoted by the bot. Returns True on success.\n     *\n     * @param custom_title New custom title for the administrator; 0-16 characters, emoji are not allowed\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatadministratorcustomtitle\n     */\n    setChatAdministratorAuthorCustomTitle(custom_title, signal) {\n        return this.api.setChatAdministratorCustomTitle(orThrow(this.chatId, \"setChatAdministratorAuthorCustomTitle\"), orThrow(this.from, \"setChatAdministratorAuthorCustomTitle\").id, custom_title, signal);\n    }\n    /**\n     * Context-aware alias for `api.setChatAdministratorCustomTitle`. Use this method to set a custom title for an administrator in a supergroup promoted by the bot. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param custom_title New custom title for the administrator; 0-16 characters, emoji are not allowed\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatadministratorcustomtitle\n     */\n    setChatAdministratorCustomTitle(user_id, custom_title, signal) {\n        return this.api.setChatAdministratorCustomTitle(orThrow(this.chatId, \"setChatAdministratorCustomTitle\"), user_id, custom_title, signal);\n    }\n    /**\n     * Context-aware alias for `api.banChatSenderChat`. Use this method to ban a channel chat in a supergroup or a channel. Until the chat is unbanned, the owner of the banned chat won't be able to send messages on behalf of any of their channels. The bot must be an administrator in the supergroup or channel for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param sender_chat_id Unique identifier of the target sender chat\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#banchatsenderchat\n     */\n    banChatSenderChat(sender_chat_id, signal) {\n        return this.api.banChatSenderChat(orThrow(this.chatId, \"banChatSenderChat\"), sender_chat_id, signal);\n    }\n    /**\n     * Context-aware alias for `api.unbanChatSenderChat`. Use this method to unban a previously banned channel chat in a supergroup or channel. The bot must be an administrator for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param sender_chat_id Unique identifier of the target sender chat\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unbanchatsenderchat\n     */\n    unbanChatSenderChat(sender_chat_id, signal) {\n        return this.api.unbanChatSenderChat(orThrow(this.chatId, \"unbanChatSenderChat\"), sender_chat_id, signal);\n    }\n    /**\n     * Context-aware alias for `api.setChatPermissions`. Use this method to set default chat permissions for all members. The bot must be an administrator in the group or a supergroup for this to work and must have the can_restrict_members administrator rights. Returns True on success.\n     *\n     * @param permissions New default chat permissions\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatpermissions\n     */\n    setChatPermissions(permissions, other, signal) {\n        return this.api.setChatPermissions(orThrow(this.chatId, \"setChatPermissions\"), permissions, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.exportChatInviteLink`. Use this method to generate a new primary invite link for a chat; any previously generated primary link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the new invite link as String on success.\n     *\n     * Note: Each administrator in a chat generates their own invite links. Bots can't use invite links generated by other administrators. If you want your bot to work with invite links, it will need to generate its own link using exportChatInviteLink or by calling the getChat method. If your bot needs to generate a new primary invite link replacing its previous one, use exportChatInviteLink again.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#exportchatinvitelink\n     */\n    exportChatInviteLink(signal) {\n        return this.api.exportChatInviteLink(orThrow(this.chatId, \"exportChatInviteLink\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.createChatInviteLink`. Use this method to create an additional invite link for a chat. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. The link can be revoked using the method revokeChatInviteLink. Returns the new invite link as ChatInviteLink object.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#createchatinvitelink\n     */\n    createChatInviteLink(other, signal) {\n        return this.api.createChatInviteLink(orThrow(this.chatId, \"createChatInviteLink\"), other, signal);\n    }\n    /**\n     * Context-aware alias for `api.editChatInviteLink`. Use this method to edit a non-primary invite link created by the bot. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the edited invite link as a ChatInviteLink object.\n     *\n     * @param invite_link The invite link to edit\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editchatinvitelink\n     */\n    editChatInviteLink(invite_link, other, signal) {\n        return this.api.editChatInviteLink(orThrow(this.chatId, \"editChatInviteLink\"), invite_link, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.createChatSubscriptionInviteLink`. Use this method to create a subscription invite link for a channel chat. The bot must have the can_invite_users administrator rights. The link can be edited using the method editChatSubscriptionInviteLink or revoked using the method revokeChatInviteLink. Returns the new invite link as a ChatInviteLink object.\n     *\n     * @param subscription_period The number of seconds the subscription will be active for before the next payment. Currently, it must always be 2592000 (30 days).\n     * @param subscription_price The amount of Telegram Stars a user must pay initially and after each subsequent subscription period to be a member of the chat; 1-2500\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#createchatsubscriptioninvitelink\n     */\n    createChatSubscriptionInviteLink(subscription_period, subscription_price, other, signal) {\n        return this.api.createChatSubscriptionInviteLink(orThrow(this.chatId, \"createChatSubscriptionInviteLink\"), subscription_period, subscription_price, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.editChatSubscriptionInviteLink`. Use this method to edit a subscription invite link created by the bot. The bot must have the can_invite_users administrator rights. Returns the edited invite link as a ChatInviteLink object.\n     *\n     * @param invite_link The invite link to edit\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editchatsubscriptioninvitelink\n     */\n    editChatSubscriptionInviteLink(invite_link, other, signal) {\n        return this.api.editChatSubscriptionInviteLink(orThrow(this.chatId, \"editChatSubscriptionInviteLink\"), invite_link, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.revokeChatInviteLink`. Use this method to revoke an invite link created by the bot. If the primary link is revoked, a new link is automatically generated. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the revoked invite link as ChatInviteLink object.\n     *\n     * @param invite_link The invite link to revoke\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#revokechatinvitelink\n     */\n    revokeChatInviteLink(invite_link, signal) {\n        return this.api.revokeChatInviteLink(orThrow(this.chatId, \"editChatInviteLink\"), invite_link, signal);\n    }\n    /**\n     * Context-aware alias for `api.approveChatJoinRequest`. Use this method to approve a chat join request. The bot must be an administrator in the chat for this to work and must have the can_invite_users administrator right. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#approvechatjoinrequest\n     */\n    approveChatJoinRequest(user_id, signal) {\n        return this.api.approveChatJoinRequest(orThrow(this.chatId, \"approveChatJoinRequest\"), user_id, signal);\n    }\n    /**\n     * Context-aware alias for `api.declineChatJoinRequest`. Use this method to decline a chat join request. The bot must be an administrator in the chat for this to work and must have the can_invite_users administrator right. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#declinechatjoinrequest\n     */\n    declineChatJoinRequest(user_id, signal) {\n        return this.api.declineChatJoinRequest(orThrow(this.chatId, \"declineChatJoinRequest\"), user_id, signal);\n    }\n    /**\n     * Context-aware alias for `api.setChatPhoto`. Use this method to set a new profile photo for the chat. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param photo New chat photo, uploaded using multipart/form-data\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatphoto\n     */\n    setChatPhoto(photo, signal) {\n        return this.api.setChatPhoto(orThrow(this.chatId, \"setChatPhoto\"), photo, signal);\n    }\n    /**\n     * Context-aware alias for `api.deleteChatPhoto`. Use this method to delete a chat photo. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletechatphoto\n     */\n    deleteChatPhoto(signal) {\n        return this.api.deleteChatPhoto(orThrow(this.chatId, \"deleteChatPhoto\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.setChatTitle`. Use this method to change the title of a chat. Titles can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param title New chat title, 1-255 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchattitle\n     */\n    setChatTitle(title, signal) {\n        return this.api.setChatTitle(orThrow(this.chatId, \"setChatTitle\"), title, signal);\n    }\n    /**\n     * Context-aware alias for `api.setChatDescription`. Use this method to change the description of a group, a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param description New chat description, 0-255 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatdescription\n     */\n    setChatDescription(description, signal) {\n        return this.api.setChatDescription(orThrow(this.chatId, \"setChatDescription\"), description, signal);\n    }\n    /**\n     * Context-aware alias for `api.pinChatMessage`. Use this method to add a message to the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can_pin_messages' administrator right in a supergroup or 'can_edit_messages' administrator right in a channel. Returns True on success.\n     *\n     * @param message_id Identifier of a message to pin\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#pinchatmessage\n     */\n    pinChatMessage(message_id, other, signal) {\n        return this.api.pinChatMessage(orThrow(this.chatId, \"pinChatMessage\"), message_id, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.unpinChatMessage`. Use this method to remove a message from the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can_pin_messages' administrator right in a supergroup or 'can_edit_messages' administrator right in a channel. Returns True on success.\n     *\n     * @param message_id Identifier of a message to unpin. If not specified, the most recent pinned message (by sending date) will be unpinned.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unpinchatmessage\n     */\n    unpinChatMessage(message_id, other, signal) {\n        return this.api.unpinChatMessage(orThrow(this.chatId, \"unpinChatMessage\"), message_id, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.unpinAllChatMessages`. Use this method to clear the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can_pin_messages' administrator right in a supergroup or 'can_edit_messages' administrator right in a channel. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unpinallchatmessages\n     */\n    unpinAllChatMessages(signal) {\n        return this.api.unpinAllChatMessages(orThrow(this.chatId, \"unpinAllChatMessages\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.leaveChat`. Use this method for your bot to leave a group, supergroup or channel. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#leavechat\n     */\n    leaveChat(signal) {\n        return this.api.leaveChat(orThrow(this.chatId, \"leaveChat\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.getChat`. Use this method to get up to date information about the chat (current name of the user for one-on-one conversations, current username of a user, group or channel, etc.). Returns a Chat object on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchat\n     */\n    getChat(signal) {\n        return this.api.getChat(orThrow(this.chatId, \"getChat\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.getChatAdministrators`. Use this method to get a list of administrators in a chat, which aren't bots. Returns an Array of ChatMember objects.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchatadministrators\n     */\n    getChatAdministrators(signal) {\n        return this.api.getChatAdministrators(orThrow(this.chatId, \"getChatAdministrators\"), signal);\n    }\n    /** @deprecated Use `getChatMembersCount` instead. */\n    getChatMembersCount(...args) {\n        return this.getChatMemberCount(...args);\n    }\n    /**\n     * Context-aware alias for `api.getChatMemberCount`. Use this method to get the number of members in a chat. Returns Int on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchatmembercount\n     */\n    getChatMemberCount(signal) {\n        return this.api.getChatMemberCount(orThrow(this.chatId, \"getChatMemberCount\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.getChatMember`. Use this method to get information about a member of a chat. The method is guaranteed to work only if the bot is an administrator in the chat. Returns a ChatMember object on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchatmember\n     */\n    getAuthor(signal) {\n        return this.api.getChatMember(orThrow(this.chatId, \"getAuthor\"), orThrow(this.from, \"getAuthor\").id, signal);\n    }\n    /**\n     * Context-aware alias for `api.getChatMember`. Use this method to get information about a member of a chat. The method is guaranteed to work only if the bot is an administrator in the chat. Returns a ChatMember object on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchatmember\n     */\n    getChatMember(user_id, signal) {\n        return this.api.getChatMember(orThrow(this.chatId, \"getChatMember\"), user_id, signal);\n    }\n    /**\n     * Context-aware alias for `api.setChatStickerSet`. Use this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Use the field can_set_sticker_set ly returned in getChat requests to check if the bot can use this method. Returns True on success.\n     *\n     * @param sticker_set_name Name of the sticker set to be set as the group sticker set\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatstickerset\n     */\n    setChatStickerSet(sticker_set_name, signal) {\n        return this.api.setChatStickerSet(orThrow(this.chatId, \"setChatStickerSet\"), sticker_set_name, signal);\n    }\n    /**\n     * Context-aware alias for `api.deleteChatStickerSet`. Use this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Use the field can_set_sticker_set ly returned in getChat requests to check if the bot can use this method. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletechatstickerset\n     */\n    deleteChatStickerSet(signal) {\n        return this.api.deleteChatStickerSet(orThrow(this.chatId, \"deleteChatStickerSet\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.createForumTopic`. Use this method to create a topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns information about the created topic as a ForumTopic object.\n     *\n     * @param name Topic name, 1-128 characters\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#createforumtopic\n     */\n    createForumTopic(name, other, signal) {\n        return this.api.createForumTopic(orThrow(this.chatId, \"createForumTopic\"), name, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.editForumTopic`. Use this method to edit name and icon of a topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights, unless it is the creator of the topic. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editforumtopic\n     */\n    editForumTopic(other, signal) {\n        const message = orThrow(this.msg, \"editForumTopic\");\n        const thread = orThrow(message.message_thread_id, \"editForumTopic\");\n        return this.api.editForumTopic(message.chat.id, thread, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.closeForumTopic`. Use this method to close an open topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights, unless it is the creator of the topic. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#closeforumtopic\n     */\n    closeForumTopic(signal) {\n        const message = orThrow(this.msg, \"closeForumTopic\");\n        const thread = orThrow(message.message_thread_id, \"closeForumTopic\");\n        return this.api.closeForumTopic(message.chat.id, thread, signal);\n    }\n    /**\n     * Context-aware alias for `api.reopenForumTopic`. Use this method to reopen a closed topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights, unless it is the creator of the topic. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#reopenforumtopic\n     */\n    reopenForumTopic(signal) {\n        const message = orThrow(this.msg, \"reopenForumTopic\");\n        const thread = orThrow(message.message_thread_id, \"reopenForumTopic\");\n        return this.api.reopenForumTopic(message.chat.id, thread, signal);\n    }\n    /**\n     * Context-aware alias for `api.deleteForumTopic`. Use this method to delete a forum topic along with all its messages in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_delete_messages administrator rights. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deleteforumtopic\n     */\n    deleteForumTopic(signal) {\n        const message = orThrow(this.msg, \"deleteForumTopic\");\n        const thread = orThrow(message.message_thread_id, \"deleteForumTopic\");\n        return this.api.deleteForumTopic(message.chat.id, thread, signal);\n    }\n    /**\n     * Context-aware alias for `api.unpinAllForumTopicMessages`. Use this method to clear the list of pinned messages in a forum topic. The bot must be an administrator in the chat for this to work and must have the can_pin_messages administrator right in the supergroup. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unpinallforumtopicmessages\n     */\n    unpinAllForumTopicMessages(signal) {\n        const message = orThrow(this.msg, \"unpinAllForumTopicMessages\");\n        const thread = orThrow(message.message_thread_id, \"unpinAllForumTopicMessages\");\n        return this.api.unpinAllForumTopicMessages(message.chat.id, thread, signal);\n    }\n    /**\n     * Context-aware alias for `api.editGeneralForumTopic`. Use this method to edit the name of the 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns True on success.\n     *\n     * @param name New topic name, 1-128 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editgeneralforumtopic\n     */\n    editGeneralForumTopic(name, signal) {\n        return this.api.editGeneralForumTopic(orThrow(this.chatId, \"editGeneralForumTopic\"), name, signal);\n    }\n    /**\n     * Context-aware alias for `api.closeGeneralForumTopic`. Use this method to close an open 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#closegeneralforumtopic\n     */\n    closeGeneralForumTopic(signal) {\n        return this.api.closeGeneralForumTopic(orThrow(this.chatId, \"closeGeneralForumTopic\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.reopenGeneralForumTopic`. Use this method to reopen a closed 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. The topic will be automatically unhidden if it was hidden. Returns True on success.     *\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#reopengeneralforumtopic\n     */\n    reopenGeneralForumTopic(signal) {\n        return this.api.reopenGeneralForumTopic(orThrow(this.chatId, \"reopenGeneralForumTopic\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.hideGeneralForumTopic`. Use this method to hide the 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. The topic will be automatically closed if it was open. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#hidegeneralforumtopic\n     */\n    hideGeneralForumTopic(signal) {\n        return this.api.hideGeneralForumTopic(orThrow(this.chatId, \"hideGeneralForumTopic\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.unhideGeneralForumTopic`. Use this method to unhide the 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unhidegeneralforumtopic\n     */\n    unhideGeneralForumTopic(signal) {\n        return this.api.unhideGeneralForumTopic(orThrow(this.chatId, \"unhideGeneralForumTopic\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.unpinAllGeneralForumTopicMessages`. Use this method to clear the list of pinned messages in a General forum topic. The bot must be an administrator in the chat for this to work and must have the can_pin_messages administrator right in the supergroup. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unpinallgeneralforumtopicmessages\n     */\n    unpinAllGeneralForumTopicMessages(signal) {\n        return this.api.unpinAllGeneralForumTopicMessages(orThrow(this.chatId, \"unpinAllGeneralForumTopicMessages\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.answerCallbackQuery`. Use this method to send answers to callback queries sent from inline keyboards. The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, True is returned.\n     *\n     * Alternatively, the user can be redirected to the specified Game URL. For this option to work, you must first create a game for your bot via @BotFather and accept the terms. Otherwise, you may use links like t.me/your_bot?start=XXXX that open your bot with a parameter.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#answercallbackquery\n     */\n    answerCallbackQuery(other, signal) {\n        return this.api.answerCallbackQuery(orThrow(this.callbackQuery, \"answerCallbackQuery\").id, typeof other === \"string\" ? { text: other } : other, signal);\n    }\n    /**\n     * Context-aware alias for `api.setChatMenuButton`. Use this method to change the bot's menu button in a private chat, or the default menu button. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatmenubutton\n     */\n    setChatMenuButton(other, signal) {\n        return this.api.setChatMenuButton(other, signal);\n    }\n    /**\n     * Context-aware alias for `api.getChatMenuButton`. Use this method to get the current value of the bot's menu button in a private chat, or the default menu button. Returns MenuButton on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchatmenubutton\n     */\n    getChatMenuButton(other, signal) {\n        return this.api.getChatMenuButton(other, signal);\n    }\n    /**\n     * Context-aware alias for `api.setMyDefaultAdministratorRights`. Use this method to the change the default administrator rights requested by the bot when it's added as an administrator to groups or channels. These rights will be suggested to users, but they are are free to modify the list before adding the bot. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setmydefaultadministratorrights\n     */\n    setMyDefaultAdministratorRights(other, signal) {\n        return this.api.setMyDefaultAdministratorRights(other, signal);\n    }\n    /**\n     * Context-aware alias for `api.getMyDefaultAdministratorRights`. Use this method to get the current default administrator rights of the bot. Returns ChatAdministratorRights on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     */\n    getMyDefaultAdministratorRights(other, signal) {\n        return this.api.getMyDefaultAdministratorRights(other, signal);\n    }\n    /**\n     * Context-aware alias for `api.editMessageText`. Use this method to edit text and game messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param text New text of the message, 1-4096 characters after entities parsing\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagetext\n     */\n    editMessageText(text, other, signal) {\n        var _a, _b, _c, _d, _e;\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined\n            ? this.api.editMessageTextInline(inlineId, text, { business_connection_id: this.businessConnectionId, ...other }, signal)\n            : this.api.editMessageText(orThrow(this.chatId, \"editMessageText\"), orThrow((_d = (_b = (_a = this.msg) === null || _a === void 0 ? void 0 : _a.message_id) !== null && _b !== void 0 ? _b : (_c = this.messageReaction) === null || _c === void 0 ? void 0 : _c.message_id) !== null && _d !== void 0 ? _d : (_e = this.messageReactionCount) === null || _e === void 0 ? void 0 : _e.message_id, \"editMessageText\"), text, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.editMessageCaption`. Use this method to edit captions of messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagecaption\n     */\n    editMessageCaption(other, signal) {\n        var _a, _b, _c, _d, _e;\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined\n            ? this.api.editMessageCaptionInline(inlineId, { business_connection_id: this.businessConnectionId, ...other }, signal)\n            : this.api.editMessageCaption(orThrow(this.chatId, \"editMessageCaption\"), orThrow((_d = (_b = (_a = this.msg) === null || _a === void 0 ? void 0 : _a.message_id) !== null && _b !== void 0 ? _b : (_c = this.messageReaction) === null || _c === void 0 ? void 0 : _c.message_id) !== null && _d !== void 0 ? _d : (_e = this.messageReactionCount) === null || _e === void 0 ? void 0 : _e.message_id, \"editMessageCaption\"), { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.editMessageMedia`. Use this method to edit animation, audio, document, photo, or video messages, or to add media to text messages. If a message is part of a message album, then it can be edited only to an audio for audio albums, only to a document for document albums and to a photo or a video otherwise. When an inline message is edited, a new file can't be uploaded; use a previously uploaded file via its file_id or specify a URL. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param media An object for a new media content of the message\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagemedia\n     */\n    editMessageMedia(media, other, signal) {\n        var _a, _b, _c, _d, _e;\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined\n            ? this.api.editMessageMediaInline(inlineId, media, { business_connection_id: this.businessConnectionId, ...other }, signal)\n            : this.api.editMessageMedia(orThrow(this.chatId, \"editMessageMedia\"), orThrow((_d = (_b = (_a = this.msg) === null || _a === void 0 ? void 0 : _a.message_id) !== null && _b !== void 0 ? _b : (_c = this.messageReaction) === null || _c === void 0 ? void 0 : _c.message_id) !== null && _d !== void 0 ? _d : (_e = this.messageReactionCount) === null || _e === void 0 ? void 0 : _e.message_id, \"editMessageMedia\"), media, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.editMessageReplyMarkup`. Use this method to edit only the reply markup of messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagereplymarkup\n     */\n    editMessageReplyMarkup(other, signal) {\n        var _a, _b, _c, _d, _e;\n        const inlineId = this.inlineMessageId;\n        return inlineId !== undefined\n            ? this.api.editMessageReplyMarkupInline(inlineId, { business_connection_id: this.businessConnectionId, ...other }, signal)\n            : this.api.editMessageReplyMarkup(orThrow(this.chatId, \"editMessageReplyMarkup\"), orThrow((_d = (_b = (_a = this.msg) === null || _a === void 0 ? void 0 : _a.message_id) !== null && _b !== void 0 ? _b : (_c = this.messageReaction) === null || _c === void 0 ? void 0 : _c.message_id) !== null && _d !== void 0 ? _d : (_e = this.messageReactionCount) === null || _e === void 0 ? void 0 : _e.message_id, \"editMessageReplyMarkup\"), { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.stopPoll`. Use this method to stop a poll which was sent by the bot. On success, the stopped Poll is returned.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#stoppoll\n     */\n    stopPoll(other, signal) {\n        var _a, _b, _c, _d, _e;\n        return this.api.stopPoll(orThrow(this.chatId, \"stopPoll\"), orThrow((_d = (_b = (_a = this.msg) === null || _a === void 0 ? void 0 : _a.message_id) !== null && _b !== void 0 ? _b : (_c = this.messageReaction) === null || _c === void 0 ? void 0 : _c.message_id) !== null && _d !== void 0 ? _d : (_e = this.messageReactionCount) === null || _e === void 0 ? void 0 : _e.message_id, \"stopPoll\"), { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Context-aware alias for `api.deleteMessage`. Use this method to delete a message, including service messages, with the following limitations:\n     * - A message can only be deleted if it was sent less than 48 hours ago.\n     * - A dice message in a private chat can only be deleted if it was sent more than 24 hours ago.\n     * - Bots can delete outgoing messages in private chats, groups, and supergroups.\n     * - Bots can delete incoming messages in private chats.\n     * - Bots granted can_post_messages permissions can delete outgoing messages in channels.\n     * - If the bot is an administrator of a group, it can delete any message there.\n     * - If the bot has can_delete_messages permission in a supergroup or a channel, it can delete any message there.\n     * Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletemessage\n     */\n    deleteMessage(signal) {\n        var _a, _b, _c, _d, _e;\n        return this.api.deleteMessage(orThrow(this.chatId, \"deleteMessage\"), orThrow((_d = (_b = (_a = this.msg) === null || _a === void 0 ? void 0 : _a.message_id) !== null && _b !== void 0 ? _b : (_c = this.messageReaction) === null || _c === void 0 ? void 0 : _c.message_id) !== null && _d !== void 0 ? _d : (_e = this.messageReactionCount) === null || _e === void 0 ? void 0 : _e.message_id, \"deleteMessage\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.deleteMessages`. Use this method to delete multiple messages simultaneously. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_ids A list of 1-100 identifiers of messages to delete. See deleteMessage for limitations on which messages can be deleted\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletemessages\n     */\n    deleteMessages(message_ids, signal) {\n        return this.api.deleteMessages(orThrow(this.chatId, \"deleteMessages\"), message_ids, signal);\n    }\n    /**\n     * Context-aware alias for `api.deleteBusinessMessages`. Delete messages on behalf of a business account. Requires the can_delete_outgoing_messages business bot right to delete messages sent by the bot itself, or the can_delete_all_messages business bot right to delete any message. Returns True on success.\n     *\n     * @param message_ids A list of 1-100 identifiers of messages to delete. All messages must be from the same chat. See deleteMessage for limitations on which messages can be deleted\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletebusinessmessages\n     */\n    deleteBusinessMessages(message_ids, signal) {\n        return this.api.deleteBusinessMessages(orThrow(this.businessConnectionId, \"deleteBusinessMessages\"), message_ids, signal);\n    }\n    /**\n     * Context-aware alias for `api.setBusinessAccountName`. Changes the first and last name of a managed business account. Requires the can_change_name business bot right. Returns True on success.\n     *\n     * @param first_name The new value of the first name for the business account; 1-64 characters\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountname\n     */\n    setBusinessAccountName(first_name, other, signal) {\n        return this.api.setBusinessAccountName(orThrow(this.businessConnectionId, \"setBusinessAccountName\"), first_name, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.setBusinessAccountUsername`. Changes the username of a managed business account. Requires the can_change_username business bot right. Returns True on success.\n     *\n     * @param username The new value of the username for the business account; 0-32 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountusername\n     */\n    setBusinessAccountUsername(username, signal) {\n        return this.api.setBusinessAccountUsername(orThrow(this.businessConnectionId, \"setBusinessAccountUsername\"), username, signal);\n    }\n    /**\n     * Context-aware alias for `api.setBusinessAccountBio`. Changes the bio of a managed business account. Requires the can_change_bio business bot right. Returns True on success.\n     *\n     * @param bio The new value of the bio for the business account; 0-140 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountbio\n     */\n    setBusinessAccountBio(bio, signal) {\n        return this.api.setBusinessAccountBio(orThrow(this.businessConnectionId, \"setBusinessAccountBio\"), bio, signal);\n    }\n    /**\n     * Context-aware alias for `api.setBusinessAccountProfilePhoto`. CsetBusinessAccountProfilePhotohanges the profile photo of a managed business account. Requires the can_edit_profile_photo business bot right. Returns True on success.\n     *\n     * @param photo The new profile photo to set\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountprofilephoto\n     */\n    setBusinessAccountProfilePhoto(photo, other, signal) {\n        return this.api.setBusinessAccountProfilePhoto(orThrow(this.businessConnectionId, \"setBusinessAccountProfilePhoto\"), photo, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.removeBusinessAccountProfilePhoto`. Removes the current profile photo of a managed business account. Requires the can_edit_profile_photo business bot right. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#removebusinessaccountprofilephoto\n     */\n    removeBusinessAccountProfilePhoto(other, signal) {\n        return this.api.removeBusinessAccountProfilePhoto(orThrow(this.businessConnectionId, \"removeBusinessAccountProfilePhoto\"), other, signal);\n    }\n    /**\n     * Context-aware alias for `api.setBusinessAccountGiftSettings`. Changes the privacy settings pertaining to incoming gifts in a managed business account. Requires the can_change_gift_settings business bot right. Returns True on success.\n     *\n     * @param show_gift_button Pass True, if a button for sending a gift to the user or by the business account must always be shown in the input field\n     * @param accepted_gift_types Types of gifts accepted by the business account\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountgiftsettings\n     */\n    setBusinessAccountGiftSettings(show_gift_button, accepted_gift_types, signal) {\n        return this.api.setBusinessAccountGiftSettings(orThrow(this.businessConnectionId, \"setBusinessAccountGiftSettings\"), show_gift_button, accepted_gift_types, signal);\n    }\n    /**\n     * Context-aware alias for `api.getBusinessAccountStarBalance`. Returns the amount of Telegram Stars owned by a managed business account. Requires the can_view_gifts_and_stars business bot right. Returns StarAmount on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getbusinessaccountstarbalance\n     */\n    getBusinessAccountStarBalance(signal) {\n        return this.api.getBusinessAccountStarBalance(orThrow(this.businessConnectionId, \"getBusinessAccountStarBalance\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.transferBusinessAccountStars`. Transfers Telegram Stars from the business account balance to the bot's balance. Requires the can_transfer_stars business bot right. Returns True on success.\n     *\n     * @param star_count Number of Telegram Stars to transfer; 1-10000\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#transferbusinessaccountstars\n     */\n    transferBusinessAccountStars(star_count, signal) {\n        return this.api.transferBusinessAccountStars(orThrow(this.businessConnectionId, \"transferBusinessAccountStars\"), star_count, signal);\n    }\n    /**\n     * Context-aware alias for `api.getBusinessAccountGifts`. Returns the gifts received and owned by a managed business account. Requires the can_view_gifts_and_stars business bot right. Returns OwnedGifts on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getbusinessaccountgifts\n     */\n    getBusinessAccountGifts(other, signal) {\n        return this.api.getBusinessAccountGifts(orThrow(this.businessConnectionId, \"getBusinessAccountGifts\"), other, signal);\n    }\n    /**\n     * Context-aware alias for `api.convertGiftToStars`. Converts a given regular gift to Telegram Stars. Requires the can_convert_gifts_to_stars business bot right. Returns True on success.\n     *\n     * @param owned_gift_id Unique identifier of the regular gift that should be converted to Telegram Stars\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#convertgifttostars\n     */\n    convertGiftToStars(owned_gift_id, signal) {\n        return this.api.convertGiftToStars(orThrow(this.businessConnectionId, \"convertGiftToStars\"), owned_gift_id, signal);\n    }\n    /**\n     * Context-aware alias for `api.upgradeGift`. Upgrades a given regular gift to a unique gift. Requires the can_transfer_and_upgrade_gifts business bot right. Additionally requires the can_transfer_stars business bot right if the upgrade is paid. Returns True on success.\n     *\n     * @param owned_gift_id Unique identifier of the regular gift that should be upgraded to a unique one\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#upgradegift\n     */\n    upgradeGift(owned_gift_id, other, signal) {\n        return this.api.upgradeGift(orThrow(this.businessConnectionId, \"upgradeGift\"), owned_gift_id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.transferGift`. Transfers an owned unique gift to another user. Requires the can_transfer_and_upgrade_gifts business bot right. Requires can_transfer_stars business bot right if the transfer is paid. Returns True on success.\n     *\n     * @param owned_gift_id Unique identifier of the regular gift that should be transferred\n     * @param new_owner_chat_id Unique identifier of the chat which will own the gift. The chat must be active in the last 24 hours.\n     * @param star_count The amount of Telegram Stars that will be paid for the transfer from the business account balance. If positive, then the can_transfer_stars business bot right is required.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#transfergift\n     */\n    transferGift(owned_gift_id, new_owner_chat_id, star_count, signal) {\n        return this.api.transferGift(orThrow(this.businessConnectionId, \"transferGift\"), owned_gift_id, new_owner_chat_id, star_count, signal);\n    }\n    /**\n     * Context-aware alias for `api.postStory`. Posts a story on behalf of a managed business account. Requires the can_manage_stories business bot right. Returns Story on success.\n     *\n     * @param content Content of the story\n     * @param active_period Period after which the story is moved to the archive, in seconds; must be one of 6 * 3600, 12 * 3600, 86400, or 2 * 86400\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#poststory\n     */\n    postStory(content, active_period, other, signal) {\n        return this.api.postStory(orThrow(this.businessConnectionId, \"postStory\"), content, active_period, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.`. editStoryEdits a story previously posted by the bot on behalf of a managed business account. Requires the can_manage_stories business bot right. Returns Story on success.\n     *\n     * @param story_id Unique identifier of the story to edit\n     * @param content Content of the story\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editstory\n     */\n    editStory(story_id, content, other, signal) {\n        return this.api.editStory(orThrow(this.businessConnectionId, \"editStory\"), story_id, content, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.deleteStory`. Deletes a story previously posted by the bot on behalf of a managed business account. Requires the can_manage_stories business bot right. Returns True on success.\n     *\n     * @param story_id Unique identifier of the story to delete\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletestory\n     */\n    deleteStory(story_id, signal) {\n        return this.api.deleteStory(orThrow(this.businessConnectionId, \"deleteStory\"), story_id, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendSticker`. Use this method to send static .WEBP, animated .TGS, or video .WEBM stickers. On success, the sent Message is returned.\n     *\n     * @param sticker Sticker to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a .WEBP sticker from the Internet, or upload a new .WEBP, .TGS, or .WEBM sticker using multipart/form-data. Video and animated stickers can't be sent via an HTTP URL.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendsticker\n     */\n    replyWithSticker(sticker, other, signal) {\n        return this.api.sendSticker(orThrow(this.chatId, \"sendSticker\"), sticker, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n    /**\n     * Use this method to get information about custom emoji stickers by their identifiers. Returns an Array of Sticker objects.\n     *\n     * @param custom_emoji_ids A list of custom emoji identifiers\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getcustomemojistickers\n     */\n    getCustomEmojiStickers(signal) {\n        var _a, _b;\n        return this.api.getCustomEmojiStickers(((_b = (_a = this.msg) === null || _a === void 0 ? void 0 : _a.entities) !== null && _b !== void 0 ? _b : [])\n            .filter((e) => e.type === \"custom_emoji\")\n            .map((e) => e.custom_emoji_id), signal);\n    }\n    /**\n     * Context-aware alias for `api.sendGift`. Sends a gift to the given user. The gift can't be converted to Telegram Stars by the receiver. Returns True on success.\n     *\n     * @param gift_id Identifier of the gift\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendgift\n     */\n    replyWithGift(gift_id, other, signal) {\n        return this.api.sendGift(orThrow(this.from, \"sendGift\").id, gift_id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.giftPremiumSubscription`. Gifts a Telegram Premium subscription to the given user. Returns True on success.\n     *\n     * @param month_count Number of months the Telegram Premium subscription will be active for the user; must be one of 3, 6, or 12\n     * @param star_count Number of Telegram Stars to pay for the Telegram Premium subscription; must be 1000 for 3 months, 1500 for 6 months, and 2500 for 12 months\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#giftpremiumsubscription\n     */\n    giftPremiumSubscription(month_count, star_count, other, signal) {\n        return this.api.giftPremiumSubscription(orThrow(this.from, \"giftPremiumSubscription\").id, month_count, star_count, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendGift`. Sends a gift to the given channel chat. The gift can't be converted to Telegram Stars by the receiver. Returns True on success.\n     *\n     * @param gift_id Identifier of the gift\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendgift\n     */\n    replyWithGiftToChannel(gift_id, other, signal) {\n        return this.api.sendGiftToChannel(orThrow(this.chat, \"sendGift\").id, gift_id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.answerInlineQuery`. Use this method to send answers to an inline query. On success, True is returned.\n     * No more than 50 results per query are allowed.\n     *\n     * Example: An inline bot that sends YouTube videos can ask the user to connect the bot to their YouTube account to adapt search results accordingly. To do this, it displays a 'Connect your YouTube account' button above the results, or even before showing any. The user presses the button, switches to a private chat with the bot and, in doing so, passes a start parameter that instructs the bot to return an OAuth link. Once done, the bot can offer a switch_inline button so that the user can easily return to the chat where they wanted to use the bot's inline capabilities.\n     *\n     * @param results An array of results for the inline query\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#answerinlinequery\n     */\n    answerInlineQuery(results, other, signal) {\n        return this.api.answerInlineQuery(orThrow(this.inlineQuery, \"answerInlineQuery\").id, results, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.savePreparedInlineMessage`. Stores a message that can be sent by a user of a Mini App. Returns a PreparedInlineMessage object.\n     *\n     * @param result An object describing the message to be sent\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#savepreparedinlinemessage\n     */\n    savePreparedInlineMessage(result, other, signal) {\n        return this.api.savePreparedInlineMessage(orThrow(this.from, \"savePreparedInlineMessage\").id, result, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendInvoice`. Use this method to send invoices. On success, the sent Message is returned.\n     *\n     * @param title Product name, 1-32 characters\n     * @param description Product description, 1-255 characters\n     * @param payload Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.\n     * @param currency Three-letter ISO 4217 currency code, see more on currencies\n     * @param prices Price breakdown, a list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendinvoice\n     */\n    replyWithInvoice(title, description, payload, currency, prices, other, signal) {\n        return this.api.sendInvoice(orThrow(this.chatId, \"sendInvoice\"), title, description, payload, currency, prices, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.answerShippingQuery`. If you sent an invoice requesting a shipping address and the parameter is_flexible was specified, the Bot API will send an Update with a shipping_query field to the bot. Use this method to reply to shipping queries. On success, True is returned.\n     *\n     * @param shipping_query_id Unique identifier for the query to be answered\n     * @param ok Pass True if delivery to the specified address is possible and False if there are any problems (for example, if delivery to the specified address is not possible)\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#answershippingquery\n     */\n    answerShippingQuery(ok, other, signal) {\n        return this.api.answerShippingQuery(orThrow(this.shippingQuery, \"answerShippingQuery\").id, ok, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.answerPreCheckoutQuery`. Once the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an Update with the field pre_checkout_query. Use this method to respond to such pre-checkout queries. On success, True is returned. Note: The Bot API must receive an answer within 10 seconds after the pre-checkout query was sent.\n     *\n     * @param ok Specify True if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order. Use False if there are any problems.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#answerprecheckoutquery\n     */\n    answerPreCheckoutQuery(ok, other, signal) {\n        return this.api.answerPreCheckoutQuery(orThrow(this.preCheckoutQuery, \"answerPreCheckoutQuery\").id, ok, typeof other === \"string\" ? { error_message: other } : other, signal);\n    }\n    /**\n     * Context-aware alias for `api.refundStarPayment`. Refunds a successful payment in Telegram Stars.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#refundstarpayment\n     */\n    refundStarPayment(signal) {\n        var _a;\n        return this.api.refundStarPayment(orThrow(this.from, \"refundStarPayment\").id, orThrow((_a = this.msg) === null || _a === void 0 ? void 0 : _a.successful_payment, \"refundStarPayment\")\n            .telegram_payment_charge_id, signal);\n    }\n    /**\n     * Context-aware alias for `api.editUserStarSubscription`. Allows the bot to cancel or re-enable extension of a subscription paid in Telegram Stars. Returns True on success.\n     *\n     * @param telegram_payment_charge_id Telegram payment identifier for the subscription\n     * @param is_canceled Pass True to cancel extension of the user subscription; the subscription must be active up to the end of the current subscription period. Pass False to allow the user to re-enable a subscription that was previously canceled by the bot.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#edituserstarsubscription\n     */\n    editUserStarSubscription(telegram_payment_charge_id, is_canceled, signal) {\n        return this.api.editUserStarSubscription(orThrow(this.from, \"editUserStarSubscription\").id, telegram_payment_charge_id, is_canceled, signal);\n    }\n    /**\n     * Context-aware alias for `api.verifyUser`. Verifies a user on behalf of the organization which is represented by the bot. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#verifyuser\n     */\n    verifyUser(other, signal) {\n        return this.api.verifyUser(orThrow(this.from, \"verifyUser\").id, other, signal);\n    }\n    /**\n     * Context-aware alias for `api.verifyChat`. Verifies a chat on behalf of the organization which is represented by the bot. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#verifychat\n     */\n    verifyChat(other, signal) {\n        return this.api.verifyChat(orThrow(this.chatId, \"verifyChat\"), other, signal);\n    }\n    /**\n     * Context-aware alias for `api.removeUserVerification`. Removes verification from a user who is currently verified on behalf of the organization represented by the bot. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#removeuserverification\n     */\n    removeUserVerification(signal) {\n        return this.api.removeUserVerification(orThrow(this.from, \"removeUserVerification\").id, signal);\n    }\n    /**\n     * Context-aware alias for `api.removeChatVerification`. Removes verification from a chat that is currently verified on behalf of the organization represented by the bot. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#removechatverification\n     */\n    removeChatVerification(signal) {\n        return this.api.removeChatVerification(orThrow(this.chatId, \"removeChatVerification\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.readBusinessMessage`. Marks incoming message as read on behalf of a business account. Requires the can_read_messages business bot right. Returns True on success.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#readbusinessmessage\n     */\n    readBusinessMessage(signal) {\n        return this.api.readBusinessMessage(orThrow(this.businessConnectionId, \"readBusinessMessage\"), orThrow(this.chatId, \"readBusinessMessage\"), orThrow(this.msgId, \"readBusinessMessage\"), signal);\n    }\n    /**\n     * Context-aware alias for `api.setPassportDataErrors`. Informs a user that some of the Telegram Passport elements they provided contains errors. The user will not be able to re-submit their Passport to you until the errors are fixed (the contents of the field for which you returned the error must change). Returns True on success.\n     *\n     * Use this if the data submitted by the user doesn't satisfy the standards your service requires for any reason. For example, if a birthday date seems invalid, a submitted document is blurry, a scan shows evidence of tampering, etc. Supply some details in the error message to make sure the user knows how to correct the issues.\n     *\n     * @param errors An array describing the errors\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setpassportdataerrors\n     */\n    setPassportDataErrors(errors, signal) {\n        return this.api.setPassportDataErrors(orThrow(this.from, \"setPassportDataErrors\").id, errors, signal);\n    }\n    /**\n     * Context-aware alias for `api.sendGame`. Use this method to send a game. On success, the sent Message is returned.\n     *\n     * @param game_short_name Short name of the game, serves as the unique identifier for the game. Set up your games via BotFather.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendgame\n     */\n    replyWithGame(game_short_name, other, signal) {\n        return this.api.sendGame(orThrow(this.chatId, \"sendGame\"), game_short_name, { business_connection_id: this.businessConnectionId, ...other }, signal);\n    }\n}\nexports.Context = Context;\n// PROBING SHORTCUTS\n/**\n * `Context.has` is an object that contains a number of useful functions for\n * probing context objects. Each of these functions can generate a predicate\n * function, to which you can pass context objects in order to check if a\n * condition holds for the respective context object.\n *\n * For example, you can call `Context.has.filterQuery(\":text\")` to generate\n * a predicate function that tests context objects for containing text:\n * ```ts\n * const hasText = Context.has.filterQuery(\":text\");\n *\n * if (hasText(ctx0)) {} // `ctx0` matches the filter query `:text`\n * if (hasText(ctx1)) {} // `ctx1` matches the filter query `:text`\n * if (hasText(ctx2)) {} // `ctx2` matches the filter query `:text`\n * ```\n * These predicate functions are used internally by the has-methods that are\n * installed on every context object. This means that calling\n * `ctx.has(\":text\")` is equivalent to\n * `Context.has.filterQuery(\":text\")(ctx)`.\n */\nContext.has = checker;\n// === Util functions\nfunction orThrow(value, method) {\n    if (value === undefined) {\n        throw new Error(`Missing information for API call to ${method}`);\n    }\n    return value;\n}\nfunction triggerFn(trigger) {\n    return toArray(trigger).map((t) => typeof t === \"string\"\n        ? (txt) => (txt === t ? t : null)\n        : (txt) => txt.match(t));\n}\nfunction match(ctx, content, triggers) {\n    for (const t of triggers) {\n        const res = t(content);\n        if (res) {\n            ctx.match = res;\n            return true;\n        }\n    }\n    return false;\n}\nfunction toArray(e) {\n    return Array.isArray(e) ? e : [e];\n}\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Composer = exports.BotError = void 0;\nexports.run = run;\nconst context_js_1 = require(\"./context.js\");\n// === Middleware errors\n/**\n * This error is thrown when middleware throws. It simply wraps the original\n * error (accessible via the `error` property), but also provides access to the\n * respective context object that was processed while the error occurred.\n */\nclass BotError extends Error {\n    constructor(error, ctx) {\n        super(generateBotErrorMessage(error));\n        this.error = error;\n        this.ctx = ctx;\n        this.name = \"BotError\";\n        if (error instanceof Error)\n            this.stack = error.stack;\n    }\n}\nexports.BotError = BotError;\nfunction generateBotErrorMessage(error) {\n    let msg;\n    if (error instanceof Error) {\n        msg = `${error.name} in middleware: ${error.message}`;\n    }\n    else {\n        const type = typeof error;\n        msg = `Non-error value of type ${type} thrown in middleware`;\n        switch (type) {\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"symbol\":\n                msg += `: ${error}`;\n                break;\n            case \"string\":\n                msg += `: ${String(error).substring(0, 50)}`;\n                break;\n            default:\n                msg += \"!\";\n                break;\n        }\n    }\n    return msg;\n}\n// === Middleware base functions\nfunction flatten(mw) {\n    return typeof mw === \"function\"\n        ? mw\n        : (ctx, next) => mw.middleware()(ctx, next);\n}\nfunction concat(first, andThen) {\n    return async (ctx, next) => {\n        let nextCalled = false;\n        await first(ctx, async () => {\n            if (nextCalled)\n                throw new Error(\"`next` already called before!\");\n            else\n                nextCalled = true;\n            await andThen(ctx, next);\n        });\n    };\n}\nfunction pass(_ctx, next) {\n    return next();\n}\nconst leaf = () => Promise.resolve();\n/**\n * Runs some given middleware function with a given context object.\n *\n * @param middleware The middleware to run\n * @param ctx The context to use\n */\nasync function run(middleware, ctx) {\n    await middleware(ctx, leaf);\n}\n// === Composer\n/**\n * The composer is the heart of the middleware system in grammY. It is also the\n * superclass of `Bot`. Whenever you call `use` or `on` or some of the other\n * methods on your bot, you are in fact using the underlying composer instance\n * to register your middleware.\n *\n * If you're just getting started, you do not need to worry about what\n * middleware is, or about how to use a composer.\n *\n * On the other hand, if you want to dig deeper into how grammY implements\n * middleware, check out the\n * [documentation](https://grammy.dev/advanced/middleware) on the website.\n */\nclass Composer {\n    /**\n     * Constructs a new composer based on the provided middleware. If no\n     * middleware is given, the composer instance will simply make all context\n     * objects pass through without touching them.\n     *\n     * @param middleware The middleware to compose\n     */\n    constructor(...middleware) {\n        this.handler = middleware.length === 0\n            ? pass\n            : middleware.map(flatten).reduce(concat);\n    }\n    middleware() {\n        return this.handler;\n    }\n    /**\n     * Registers some middleware that receives all updates. It is installed by\n     * concatenating it to the end of all previously installed middleware.\n     *\n     * Often, this method is used to install middleware that behaves like a\n     * plugin, for example session middleware.\n     * ```ts\n     * bot.use(session())\n     * ```\n     *\n     * This method returns a new instance of composer. The returned instance can\n     * be further extended, and all changes will be regarded here. Confer the\n     * [documentation](https://grammy.dev/advanced/middleware) on the\n     * website if you want to know more about how the middleware system in\n     * grammY works, especially when it comes to chaining the method calls\n     * (`use( ... ).use( ... ).use( ... )`).\n     *\n     * @param middleware The middleware to register\n     */\n    use(...middleware) {\n        const composer = new Composer(...middleware);\n        this.handler = concat(this.handler, flatten(composer));\n        return composer;\n    }\n    /**\n     * Registers some middleware that will only be executed for some specific\n     * updates, namely those matching the provided filter query. Filter queries\n     * are a concise way to specify which updates you are interested in.\n     *\n     * Here are some examples of valid filter queries:\n     * ```ts\n     * // All kinds of message updates\n     * bot.on('message', ctx => { ... })\n     *\n     * // Only text messages\n     * bot.on('message:text', ctx => { ... })\n     *\n     * // Only text messages with URL\n     * bot.on('message:entities:url', ctx => { ... })\n     *\n     * // Text messages and text channel posts\n     * bot.on(':text', ctx => { ... })\n     *\n     * // Messages with URL in text or caption (i.e. entities or caption entities)\n     * bot.on('message::url', ctx => { ... })\n     *\n     * // Messages or channel posts with URL in text or caption\n     * bot.on('::url', ctx => { ... })\n     * ```\n     *\n     * You can use autocomplete in VS Code to see all available filter queries.\n     * Check out the\n     * [documentation](https://grammy.dev/guide/filter-queries) on the\n     * website to learn more about filter queries in grammY.\n     *\n     * It is possible to pass multiple filter queries in an array, i.e.\n     * ```ts\n     * // Matches all text messages and edited text messages that contain a URL\n     * bot.on(['message:entities:url', 'edited_message:entities:url'], ctx => { ... })\n     * ```\n     *\n     * Your middleware will be executed if _any of the provided filter queries_\n     * matches (logical OR).\n     *\n     * If you instead want to match _all of the provided filter queries_\n     * (logical AND), you can chain the `.on` calls:\n     * ```ts\n     * // Matches all messages and channel posts that both a) contain a URL and b) are forwards\n     * bot.on('::url').on(':forward_origin', ctx => { ... })\n     * ```\n     *\n     * @param filter The filter query to use, may also be an array of queries\n     * @param middleware The middleware to register behind the given filter\n     */\n    on(filter, ...middleware) {\n        return this.filter(context_js_1.Context.has.filterQuery(filter), ...middleware);\n    }\n    /**\n     * Registers some middleware that will only be executed when the message\n     * contains some text. Is it possible to pass a regular expression to match:\n     * ```ts\n     * // Match some text (exact match)\n     * bot.hears('I love grammY', ctx => ctx.reply('And grammY loves you! <3'))\n     * // Match a regular expression\n     * bot.hears(/\\/echo (.+)/, ctx => ctx.reply(ctx.match[1]))\n     * ```\n     * Note how `ctx.match` will contain the result of the regular expression.\n     * Here it is a `RegExpMatchArray` object, so `ctx.match[1]` refers to the\n     * part of the regex that was matched by `(.+)`, i.e. the text that comes\n     * after “/echo”.\n     *\n     * You can pass an array of triggers. Your middleware will be executed if at\n     * least one of them matches.\n     *\n     * Both text and captions of the received messages will be scanned. For\n     * example, when a photo is sent to the chat and its caption matches the\n     * trigger, your middleware will be executed.\n     *\n     * If you only want to match text messages and not captions, you can do\n     * this:\n     * ```ts\n     * // Only matches text messages (and channel posts) for the regex\n     * bot.on(':text').hears(/\\/echo (.+)/, ctx => { ... })\n     * ```\n     *\n     * @param trigger The text to look for\n     * @param middleware The middleware to register\n     */\n    hears(trigger, ...middleware) {\n        return this.filter(context_js_1.Context.has.text(trigger), ...middleware);\n    }\n    /**\n     * Registers some middleware that will only be executed when a certain\n     * command is found.\n     * ```ts\n     * // Reacts to /start commands\n     * bot.command('start', ctx => { ... })\n     * // Reacts to /help commands\n     * bot.command('help', ctx => { ... })\n     * ```\n     *\n     * The rest of the message (excluding the command, and trimmed) is provided\n     * via `ctx.match`.\n     *\n     * > **Did you know?** You can use deep linking\n     * > (https://core.telegram.org/bots/features#deep-linking) to let users\n     * > start your bot with a custom payload. As an example, send someone the\n     * > link https://t.me/name-of-your-bot?start=custom-payload and register a\n     * > start command handler on your bot with grammY. As soon as the user\n     * > starts your bot, you will receive `custom-payload` in the `ctx.match`\n     * > property!\n     * > ```ts\n     * > bot.command('start', ctx => {\n     * >   const payload = ctx.match // will be 'custom-payload'\n     * > })\n     * > ```\n     *\n     * Note that commands are not matched in captions or in the middle of the\n     * text.\n     * ```ts\n     * bot.command('start', ctx => { ... })\n     * // ... does not match:\n     * // A message saying: “some text /start some more text”\n     * // A photo message with the caption “/start”\n     * ```\n     *\n     * By default, commands are detected in channel posts, too. This means that\n     * `ctx.message` is potentially `undefined`, so you should use `ctx.msg`\n     * instead to grab both messages and channel posts. Alternatively, if you\n     * want to limit your bot to finding commands only in private and group\n     * chats, you can use `bot.on('message').command('start', ctx => { ... })`,\n     * or even store a message-only version of your bot in a variable like so:\n     * ```ts\n     * const m = bot.on('message')\n     *\n     * m.command('start', ctx => { ... })\n     * m.command('help', ctx => { ... })\n     * // etc\n     * ```\n     *\n     * If you need more freedom matching your commands, check out the `commands`\n     * plugin.\n     *\n     * @param command The command to look for\n     * @param middleware The middleware to register\n     */\n    command(command, ...middleware) {\n        return this.filter(context_js_1.Context.has.command(command), ...middleware);\n    }\n    /**\n     * Registers some middleware that will only be added when a new reaction of\n     * the given type is added to a message.\n     * ```ts\n     * // Reacts to new '👍' reactions\n     * bot.reaction('👍', ctx => { ... })\n     * // Reacts to new '👍' or '👎' reactions\n     * bot.reaction(['👍', '👎'], ctx => { ... })\n     * ```\n     *\n     * > Note that you have to enable `message_reaction` updates in\n     * `allowed_updates` if you want your bot to receive updates about message\n     * reactions.\n     *\n     * `bot.reaction` will trigger if:\n     * - a new emoji reaction is added to a message\n     * - a new custom emoji reaction is added a message\n     *\n     * `bot.reaction` will not trigger if:\n     * - a reaction is removed\n     * - an anonymous reaction count is updated, such as on channel posts\n     * - `message_reaction` updates are not enabled for your bot\n     *\n     * @param reaction The reaction to look for\n     * @param middleware The middleware to register\n     */\n    reaction(reaction, ...middleware) {\n        return this.filter(context_js_1.Context.has.reaction(reaction), ...middleware);\n    }\n    /**\n     * Registers some middleware for certain chat types only. For example, you\n     * can use this method to only receive updates from private chats. The four\n     * chat types are `\"channel\"`, `\"supergroup\"`, `\"group\"`, and `\"private\"`.\n     * This is especially useful when combined with other filtering logic. For\n     * example, this is how can you respond to `/start` commands only from\n     * private chats:\n     * ```ts\n     * bot.chatType(\"private\").command(\"start\", ctx => { ... })\n     * ```\n     *\n     * Naturally, you can also use this method on its own.\n     * ```ts\n     * // Private chats only\n     * bot.chatType(\"private\", ctx => { ... });\n     * // Channels only\n     * bot.chatType(\"channel\", ctx => { ... });\n     * ```\n     *\n     * You can pass an array of chat types if you want your middleware to run\n     * for any of several provided chat types.\n     * ```ts\n     * // Groups and supergroups only\n     * bot.chatType([\"group\", \"supergroup\"], ctx => { ... });\n     * ```\n     * [Remember](https://grammy.dev/guide/context#shortcuts) also that you\n     * can access the chat type via `ctx.chat.type`.\n     *\n     * @param chatType The chat type\n     * @param middleware The middleware to register\n     */\n    chatType(chatType, ...middleware) {\n        return this.filter(context_js_1.Context.has.chatType(chatType), ...middleware);\n    }\n    /**\n     * Registers some middleware for callback queries, i.e. the updates that\n     * Telegram delivers to your bot when a user clicks an inline button (that\n     * is a button under a message).\n     *\n     * This method is essentially the same as calling\n     * ```ts\n     * bot.on('callback_query:data', ctx => { ... })\n     * ```\n     * but it also allows you to match the query data against a given text or\n     * regular expression.\n     *\n     * ```ts\n     * // Create an inline keyboard\n     * const keyboard = new InlineKeyboard().text('Go!', 'button-payload')\n     * // Send a message with the keyboard\n     * await bot.api.sendMessage(chat_id, 'Press a button!', {\n     *   reply_markup: keyboard\n     * })\n     * // Listen to users pressing buttons with that specific payload\n     * bot.callbackQuery('button-payload', ctx => { ... })\n     *\n     * // Listen to users pressing any button your bot ever sent\n     * bot.on('callback_query:data', ctx => { ... })\n     * ```\n     *\n     * Always remember to call `answerCallbackQuery`—even if you don't perform\n     * any action: https://core.telegram.org/bots/api#answercallbackquery\n     * ```ts\n     * bot.on('callback_query:data', async ctx => {\n     *   await ctx.answerCallbackQuery()\n     * })\n     * ```\n     *\n     * You can pass an array of triggers. Your middleware will be executed if at\n     * least one of them matches.\n     *\n     * @param trigger The string to look for in the payload\n     * @param middleware The middleware to register\n     */\n    callbackQuery(trigger, ...middleware) {\n        return this.filter(context_js_1.Context.has.callbackQuery(trigger), ...middleware);\n    }\n    /**\n     * Registers some middleware for game queries, i.e. the updates that\n     * Telegram delivers to your bot when a user clicks an inline button for the\n     * HTML5 games platform on Telegram.\n     *\n     * This method is essentially the same as calling\n     * ```ts\n     * bot.on('callback_query:game_short_name', ctx => { ... })\n     * ```\n     * but it also allows you to match the query data against a given text or\n     * regular expression.\n     *\n     * You can pass an array of triggers. Your middleware will be executed if at\n     * least one of them matches.\n     *\n     * @param trigger The string to look for in the payload\n     * @param middleware The middleware to register\n     */\n    gameQuery(trigger, ...middleware) {\n        return this.filter(context_js_1.Context.has.gameQuery(trigger), ...middleware);\n    }\n    /**\n     * Registers middleware for inline queries. Telegram sends an inline query\n     * to your bot whenever a user types “@your_bot_name ...” into a text field\n     * in Telegram. You bot will then receive the entered search query and can\n     * respond with a number of results (text, images, etc) that the user can\n     * pick from to send a message _via_ your bot to the respective chat. Check\n     * out https://core.telegram.org/bots/inline to read more about inline bots.\n     *\n     * > Note that you have to enable inline mode for you bot by contacting\n     * > @BotFather first.\n     *\n     * ```ts\n     * // Listen for users typing “@your_bot_name query”\n     * bot.inlineQuery('query', async ctx => {\n     *   // Answer the inline query, confer https://core.telegram.org/bots/api#answerinlinequery\n     *   await ctx.answerInlineQuery( ... )\n     * })\n     * ```\n     *\n     * @param trigger The inline query text to match\n     * @param middleware The middleware to register\n     */\n    inlineQuery(trigger, ...middleware) {\n        return this.filter(context_js_1.Context.has.inlineQuery(trigger), ...middleware);\n    }\n    /**\n     * Registers middleware for the ChosenInlineResult by the given id or ids.\n     * ChosenInlineResult represents a result of an inline query that was chosen\n     * by the user and sent to their chat partner. Check out\n     * https://core.telegram.org/bots/api#choseninlineresult to read more about\n     * chosen inline results.\n     *\n     * ```ts\n     * bot.chosenInlineResult('id', async ctx => {\n     *   const id = ctx.result_id;\n     *   // Your code\n     * })\n     * ```\n     *\n     * @param resultId An id or array of ids\n     * @param middleware The middleware to register\n     */\n    chosenInlineResult(resultId, ...middleware) {\n        return this.filter(context_js_1.Context.has.chosenInlineResult(resultId), ...middleware);\n    }\n    /**\n     * Registers middleware for pre-checkout queries. Telegram sends a\n     * pre-checkout query to your bot whenever a user has confirmed their\n     * payment and shipping details. You bot will then receive all information\n     * about the order and has to respond within 10 seconds with a confirmation\n     * of whether everything is alright (goods are available, etc.) and the bot\n     * is ready to proceed with the order. Check out\n     * https://core.telegram.org/bots/api#precheckoutquery to read more about\n     * pre-checkout queries.\n     *\n     * ```ts\n     * bot.preCheckoutQuery('invoice_payload', async ctx => {\n     *   // Answer the pre-checkout query, confer https://core.telegram.org/bots/api#answerprecheckoutquery\n     *   await ctx.answerPreCheckoutQuery( ... )\n     * })\n     * ```\n     *\n     * @param trigger The string to look for in the invoice payload\n     * @param middleware The middleware to register\n     */\n    preCheckoutQuery(trigger, ...middleware) {\n        return this.filter(context_js_1.Context.has.preCheckoutQuery(trigger), ...middleware);\n    }\n    /**\n     * Registers middleware for shipping queries. If you sent an invoice\n     * requesting a shipping address and the parameter _is_flexible_ was\n     * specified, Telegram will send a shipping query to your bot whenever a\n     * user has confirmed their shipping details. You bot will then receive the\n     * shipping information and can respond with a confirmation of whether\n     * delivery to the specified address is possible. Check out\n     * https://core.telegram.org/bots/api#shippingquery to read more about\n     * shipping queries.\n     *\n     * ```ts\n     * bot.shippingQuery('invoice_payload', async ctx => {\n     *   // Answer the shipping query, confer https://core.telegram.org/bots/api#answershippingquery\n     *   await ctx.answerShippingQuery( ... )\n     * })\n     * ```\n     *\n     * @param trigger The string to look for in the invoice payload\n     * @param middleware The middleware to register\n     */\n    shippingQuery(trigger, ...middleware) {\n        return this.filter(context_js_1.Context.has.shippingQuery(trigger), ...middleware);\n    }\n    filter(predicate, ...middleware) {\n        const composer = new Composer(...middleware);\n        this.branch(predicate, composer, pass);\n        return composer;\n    }\n    /**\n     * > This is an advanced method of grammY.\n     *\n     * Registers middleware behind a custom filter function that operates on the\n     * context object and decides whether or not to execute the middleware. In\n     * other words, the middleware will only be executed if the given predicate\n     * returns `false` for the given context object. Otherwise, it will be\n     * skipped and the next middleware will be executed. Note that the predicate\n     * may be asynchronous, i.e. it can return a Promise of a boolean.\n     *\n     * This method is the same using `filter` (normal usage) with a negated\n     * predicate.\n     *\n     * @param predicate The predicate to check\n     * @param middleware The middleware to register\n     */\n    drop(predicate, ...middleware) {\n        return this.filter(async (ctx) => !(await predicate(ctx)), ...middleware);\n    }\n    /**\n     * > This is an advanced method of grammY.\n     *\n     * Registers some middleware that runs concurrently to the executing\n     * middleware stack.\n     * ```ts\n     * bot.use( ... ) // will run first\n     * bot.fork( ... ) // will be started second, but run concurrently\n     * bot.use( ... ) // will also be run second\n     * ```\n     * In the first middleware, as soon as `next`'s Promise resolves, both forks\n     * have completed.\n     *\n     * Both the fork and the downstream middleware are awaited with\n     * `Promise.all`, so you will only be able to catch at most one error (the\n     * one that is thrown first).\n     *\n     * In contrast to the other middleware methods on composer, `fork` does not\n     * simply return the composer connected to the main middleware stack.\n     * Instead, it returns the created composer _of the fork_ connected to the\n     * middleware stack. This allows for the following pattern.\n     * ```ts\n     * // Middleware will be run concurrently!\n     * bot.fork().on('message', ctx => { ... })\n     * ```\n     *\n     * @param middleware The middleware to run concurrently\n     */\n    fork(...middleware) {\n        const composer = new Composer(...middleware);\n        const fork = flatten(composer);\n        this.use((ctx, next) => Promise.all([next(), run(fork, ctx)]));\n        return composer;\n    }\n    /**\n     * > This is an advanced method of grammY.\n     *\n     * Executes some middleware that can be generated on the fly for each\n     * context. Pass a factory function that creates some middleware (or a\n     * middleware array even). The factory function will be called once per\n     * context, and its result will be executed with the context object.\n     * ```ts\n     * // The middleware returned by `createMyMiddleware` will be used only once\n     * bot.lazy(ctx => createMyMiddleware(ctx))\n     * ```\n     *\n     * You may generate this middleware in an `async` fashion.\n     *\n     * You can decide to return an empty array (`[]`) if you don't want to run\n     * any middleware for a given context object. This is equivalent to\n     * returning an empty instance of `Composer`.\n     *\n     * @param middlewareFactory The factory function creating the middleware\n     */\n    lazy(middlewareFactory) {\n        return this.use(async (ctx, next) => {\n            const middleware = await middlewareFactory(ctx);\n            const arr = Array.isArray(middleware) ? middleware : [middleware];\n            await flatten(new Composer(...arr))(ctx, next);\n        });\n    }\n    /**\n     * > This is an advanced method of grammY.\n     *\n     * _Not to be confused with the `router` plugin._\n     *\n     * This method is an alternative to the `router` plugin. It allows you to\n     * branch between different middleware per context object. You can pass two\n     * things to it:\n     * 1. A routing function\n     * 2. Different middleware identified by key\n     *\n     * The routing function decides based on the context object which middleware\n     * to run. Each middleware is identified by a key, so the routing function\n     * simply returns the key of that middleware.\n     * ```ts\n     * // Define different route handlers\n     * const routeHandlers = {\n     *   evenUpdates: (ctx: Context) => { ... }\n     *   oddUpdates: (ctx: Context) => { ... }\n     * }\n     * // Decide for a context object which one to pick\n     * const router = (ctx: Context) => ctx.update.update_id % 2 === 0\n     *   ? 'evenUpdates'\n     *   : 'oddUpdates'\n     * // Route it!\n     * bot.route(router, routeHandlers)\n     * ```\n     *\n     * Optionally, you can pass a third option that is used as fallback\n     * middleware if your route function returns `undefined`, or if the key\n     * returned by your router has no middleware associated with it.\n     *\n     * This method may need less setup than first instantiating a `Router`, but\n     * for more complex setups, having a `Router` may be more readable.\n     *\n     * @param router The routing function to use\n     * @param routeHandlers Handlers for every route\n     * @param fallback Optional fallback middleware if no route matches\n     */\n    route(router, routeHandlers, fallback = pass) {\n        return this.lazy(async (ctx) => {\n            var _a;\n            const route = await router(ctx);\n            return (_a = (route === undefined || !routeHandlers[route]\n                ? fallback\n                : routeHandlers[route])) !== null && _a !== void 0 ? _a : [];\n        });\n    }\n    /**\n     * > This is an advanced method of grammY.\n     *\n     * Allows you to branch between two cases for a given context object.\n     *\n     * This method takes a predicate function that is tested once per context\n     * object. If it returns `true`, the first supplied middleware is executed.\n     * If it returns `false`, the second supplied middleware is executed. Note\n     * that the predicate may be asynchronous, i.e. it can return a Promise of a\n     * boolean.\n     *\n     * @param predicate The predicate to check\n     * @param trueMiddleware The middleware for the `true` case\n     * @param falseMiddleware The middleware for the `false` case\n     */\n    branch(predicate, trueMiddleware, falseMiddleware) {\n        return this.lazy(async (ctx) => (await predicate(ctx)) ? trueMiddleware : falseMiddleware);\n    }\n    /**\n     * > This is an advanced function of grammY.\n     *\n     * Installs an error boundary that catches errors that happen only inside\n     * the given middleware. This allows you to install custom error handlers\n     * that protect some parts of your bot. Errors will not be able to bubble\n     * out of this part of your middleware system, unless the supplied error\n     * handler rethrows them, in which case the next surrounding error boundary\n     * will catch the error.\n     *\n     * Example usage:\n     * ```ts\n     * function errHandler(err: BotError) {\n     *   console.error('Error boundary caught error!', err)\n     * }\n     *\n     * const safe =\n     *   // All passed middleware will be protected by the error boundary.\n     *   bot.errorBoundary(errHandler, middleware0, middleware1, middleware2)\n     *\n     * // Those will also be protected!\n     * safe.on('message', middleware3)\n     *\n     * // No error from `middleware4` will reach the `errHandler` from above,\n     * // as errors are suppressed.\n     *\n     * // do nothing on error (suppress error), and run outside middleware\n     * const suppress = (_err: BotError, next: NextFunction) => { return next() }\n     * safe.errorBoundary(suppress).on('edited_message', middleware4)\n     * ```\n     *\n     * Check out the\n     * [documentation](https://grammy.dev/guide/errors#error-boundaries) on\n     * the website to learn more about error boundaries.\n     *\n     * @param errorHandler The error handler to use\n     * @param middleware The middleware to protect\n     */\n    errorBoundary(errorHandler, ...middleware) {\n        const composer = new Composer(...middleware);\n        const bound = flatten(composer);\n        this.use(async (ctx, next) => {\n            let nextCalled = false;\n            const cont = () => ((nextCalled = true), Promise.resolve());\n            try {\n                await bound(ctx, cont);\n            }\n            catch (err) {\n                nextCalled = false;\n                await errorHandler(new BotError(err, ctx), cont);\n            }\n            if (nextCalled)\n                await next();\n        });\n        return composer;\n    }\n}\nexports.Composer = Composer;\n",
    "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n",
    "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n",
    "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n",
    "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n",
    "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n",
    "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n",
    "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultAdapter = exports.itrToStream = exports.debug = void 0;\nexports.baseFetchConfig = baseFetchConfig;\n// === Needed imports\nconst http_1 = require(\"http\");\nconst https_1 = require(\"https\");\nconst stream_1 = require(\"stream\");\n// === Export debug\nvar debug_1 = require(\"debug\");\nObject.defineProperty(exports, \"debug\", { enumerable: true, get: function () { return debug_1.debug; } });\n// === Export system-specific operations\n// Turn an AsyncIterable<Uint8Array> into a stream\nconst itrToStream = (itr) => stream_1.Readable.from(itr, { objectMode: false });\nexports.itrToStream = itrToStream;\n// === Base configuration for `fetch` calls\nconst httpAgents = new Map();\nconst httpsAgents = new Map();\nfunction getCached(map, key, otherwise) {\n    let value = map.get(key);\n    if (value === undefined) {\n        value = otherwise();\n        map.set(key, value);\n    }\n    return value;\n}\nfunction baseFetchConfig(apiRoot) {\n    if (apiRoot.startsWith(\"https:\")) {\n        return {\n            compress: true,\n            agent: getCached(httpsAgents, apiRoot, () => new https_1.Agent({ keepAlive: true })),\n        };\n    }\n    else if (apiRoot.startsWith(\"http:\")) {\n        return {\n            agent: getCached(httpAgents, apiRoot, () => new http_1.Agent({ keepAlive: true })),\n        };\n    }\n    else\n        return {};\n}\n// === Default webhook adapter\nexports.defaultAdapter = \"express\";\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpError = exports.GrammyError = void 0;\nexports.toGrammyError = toGrammyError;\nexports.toHttpError = toHttpError;\nconst platform_node_js_1 = require(\"../platform.node.js\");\nconst debug = (0, platform_node_js_1.debug)(\"grammy:warn\");\n/**\n * This class represents errors that are thrown by grammY because the Telegram\n * Bot API responded with an error.\n *\n * Instances of this class hold the information that the Telegram backend\n * returned.\n *\n * If this error is thrown, grammY could successfully communicate with the\n * Telegram Bot API servers, however, an error code was returned for the\n * respective method call.\n */\nclass GrammyError extends Error {\n    constructor(message, err, \n    /** The called method name which caused this error to be thrown. */\n    method, \n    /** The payload that was passed when calling the method. */\n    payload) {\n        var _a;\n        super(`${message} (${err.error_code}: ${err.description})`);\n        this.method = method;\n        this.payload = payload;\n        /** Flag that this request was unsuccessful. Always `false`. */\n        this.ok = false;\n        this.name = \"GrammyError\";\n        this.error_code = err.error_code;\n        this.description = err.description;\n        this.parameters = (_a = err.parameters) !== null && _a !== void 0 ? _a : {};\n    }\n}\nexports.GrammyError = GrammyError;\nfunction toGrammyError(err, method, payload) {\n    switch (err.error_code) {\n        case 401:\n            debug(\"Error 401 means that your bot token is wrong, talk to https://t.me/BotFather to check it.\");\n            break;\n        case 409:\n            debug(\"Error 409 means that you are running your bot several times on long polling. Consider revoking the bot token if you believe that no other instance is running.\");\n            break;\n    }\n    return new GrammyError(`Call to '${method}' failed!`, err, method, payload);\n}\n/**\n * This class represents errors that are thrown by grammY because an HTTP call\n * to the Telegram Bot API failed.\n *\n * Instances of this class hold the error object that was created because the\n * fetch call failed. It can be inspected to determine why exactly the network\n * request failed.\n *\n * If an [API transformer\n * function](https://grammy.dev/advanced/transformers) throws an error,\n * grammY will regard this as if the network request failed. The contained error\n * will then be the error that was thrown by the transformer function.\n */\nclass HttpError extends Error {\n    constructor(message, \n    /** The thrown error object. */\n    error) {\n        super(message);\n        this.error = error;\n        this.name = \"HttpError\";\n    }\n}\nexports.HttpError = HttpError;\nfunction isTelegramError(err) {\n    return (typeof err === \"object\" &&\n        err !== null &&\n        \"status\" in err &&\n        \"statusText\" in err);\n}\nfunction toHttpError(method, sensitiveLogs) {\n    return (err) => {\n        let msg = `Network request for '${method}' failed!`;\n        if (isTelegramError(err))\n            msg += ` (${err.status}: ${err.statusText})`;\n        if (sensitiveLogs && err instanceof Error)\n            msg += ` ${err.message}`;\n        throw new HttpError(msg, err);\n    };\n}\n",
    "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputFile = void 0;\nconst fs_1 = require(\"fs\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst path_1 = require(\"path\");\nconst platform_node_1 = require(\"./platform.node\");\nconst debug = (0, platform_node_1.debug)(\"grammy:warn\");\n// === Export all API types\n__exportStar(require(\"@grammyjs/types\"), exports);\n// === InputFile handling and File augmenting\n/**\n * An `InputFile` wraps a number of different sources for [sending\n * files](https://grammy.dev/guide/files#uploading-your-own-files).\n *\n * It corresponds to the `InputFile` type in the [Telegram Bot API\n * Reference](https://core.telegram.org/bots/api#inputfile).\n */\nclass InputFile {\n    /**\n     * Constructs an `InputFile` that can be used in the API to send files.\n     *\n     * @param file A path to a local file or a `Buffer` or a `fs.ReadStream` that specifies the file data\n     * @param filename Optional name of the file\n     */\n    constructor(file, filename) {\n        this.consumed = false;\n        this.fileData = file;\n        filename !== null && filename !== void 0 ? filename : (filename = this.guessFilename(file));\n        this.filename = filename;\n        if (typeof file === \"string\" &&\n            (file.startsWith(\"http:\") || file.startsWith(\"https:\"))) {\n            debug(`InputFile received the local file path '${file}' that looks like a URL. Is this a mistake?`);\n        }\n    }\n    guessFilename(file) {\n        if (typeof file === \"string\")\n            return (0, path_1.basename)(file);\n        if (\"url\" in file)\n            return (0, path_1.basename)(file.url);\n        if (!(file instanceof URL))\n            return undefined;\n        if (file.pathname !== \"/\") {\n            const filename = (0, path_1.basename)(file.pathname);\n            if (filename)\n                return filename;\n        }\n        return (0, path_1.basename)(file.hostname);\n    }\n    /**\n     * Internal method. Do not use.\n     *\n     * Converts this instance into a binary representation that can be sent to\n     * the Bot API server in the request body.\n     */\n    async toRaw() {\n        if (this.consumed) {\n            throw new Error(\"Cannot reuse InputFile data source!\");\n        }\n        const data = this.fileData;\n        // Handle local files\n        if (typeof data === \"string\")\n            return (0, fs_1.createReadStream)(data);\n        // Handle URLs and URLLike objects\n        if (data instanceof URL) {\n            return data.protocol === \"file\" // node-fetch does not support file URLs\n                ? (0, fs_1.createReadStream)(data.pathname)\n                : fetchFile(data);\n        }\n        if (\"url\" in data)\n            return fetchFile(data.url);\n        // Return buffers as-is\n        if (data instanceof Uint8Array)\n            return data;\n        // Unwrap supplier functions\n        if (typeof data === \"function\") {\n            return new InputFile(await data()).toRaw();\n        }\n        // Mark streams and iterators as consumed and return them as-is\n        this.consumed = true;\n        return data;\n    }\n}\nexports.InputFile = InputFile;\nasync function* fetchFile(url) {\n    const { body } = await (0, node_fetch_1.default)(url);\n    for await (const chunk of body) {\n        if (typeof chunk === \"string\") {\n            throw new Error(`Could not transfer file, received string data instead of bytes from '${url}'`);\n        }\n        yield chunk;\n    }\n}\n",
    "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types.node.js\"), exports);\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requiresFormDataUpload = requiresFormDataUpload;\nexports.createJsonPayload = createJsonPayload;\nexports.createFormDataPayload = createFormDataPayload;\nconst platform_node_js_1 = require(\"../platform.node.js\");\nconst types_js_1 = require(\"../types.js\");\n// === Payload types (JSON vs. form data)\n/**\n * Determines for a given payload if it may be sent as JSON, or if it has to be\n * uploaded via multipart/form-data. Returns `true` in the latter case and\n * `false` in the former.\n *\n * @param payload The payload to analyze\n */\nfunction requiresFormDataUpload(payload) {\n    return payload instanceof types_js_1.InputFile || (typeof payload === \"object\" &&\n        payload !== null &&\n        Object.values(payload).some((v) => Array.isArray(v)\n            ? v.some(requiresFormDataUpload)\n            : v instanceof types_js_1.InputFile || requiresFormDataUpload(v)));\n}\n/**\n * Calls `JSON.stringify` but removes `null` values from objects before\n * serialization\n *\n * @param value value\n * @returns stringified value\n */\nfunction str(value) {\n    return JSON.stringify(value, (_, v) => v !== null && v !== void 0 ? v : undefined);\n}\n/**\n * Turns a payload into an options object that can be passed to a `fetch` call\n * by setting the necessary headers and method. May only be called for payloads\n * `P` that let `requiresFormDataUpload(P)` return `false`.\n *\n * @param payload The payload to wrap\n */\nfunction createJsonPayload(payload) {\n    return {\n        method: \"POST\",\n        headers: {\n            \"content-type\": \"application/json\",\n            connection: \"keep-alive\",\n        },\n        body: str(payload),\n    };\n}\nasync function* protectItr(itr, onError) {\n    try {\n        yield* itr;\n    }\n    catch (err) {\n        onError(err);\n    }\n}\n/**\n * Turns a payload into an options object that can be passed to a `fetch` call\n * by setting the necessary headers and method. Note that this method creates a\n * multipart/form-data stream under the hood. If possible, a JSON payload should\n * be created instead for performance reasons.\n *\n * @param payload The payload to wrap\n */\nfunction createFormDataPayload(payload, onError) {\n    const boundary = createBoundary();\n    const itr = payloadToMultipartItr(payload, boundary);\n    const safeItr = protectItr(itr, onError);\n    const stream = (0, platform_node_js_1.itrToStream)(safeItr);\n    return {\n        method: \"POST\",\n        headers: {\n            \"content-type\": `multipart/form-data; boundary=${boundary}`,\n            connection: \"keep-alive\",\n        },\n        body: stream,\n    };\n}\n// === Form data creation\nfunction createBoundary() {\n    // Taken from Deno std lib\n    return \"----------\" + randomId(32);\n}\nfunction randomId(length = 16) {\n    return Array.from(Array(length))\n        .map(() => Math.random().toString(36)[2] || 0)\n        .join(\"\");\n}\nconst enc = new TextEncoder();\n/**\n * Takes a payload object and produces a valid multipart/form-data stream. The\n * stream is an iterator of `Uint8Array` objects. You also need to specify the\n * boundary string that was used in the Content-Type header of the HTTP request.\n *\n * @param payload a payload object\n * @param boundary the boundary string to use between the parts\n */\nasync function* payloadToMultipartItr(payload, boundary) {\n    const files = extractFiles(payload);\n    // Start multipart/form-data protocol\n    yield enc.encode(`--${boundary}\\r\\n`);\n    // Send all payload fields\n    const separator = enc.encode(`\\r\\n--${boundary}\\r\\n`);\n    let first = true;\n    for (const [key, value] of Object.entries(payload)) {\n        if (value == null)\n            continue;\n        if (!first)\n            yield separator;\n        yield valuePart(key, typeof value === \"object\" ? str(value) : value);\n        first = false;\n    }\n    // Send all files\n    for (const { id, origin, file } of files) {\n        if (!first)\n            yield separator;\n        yield* filePart(id, origin, file);\n        first = false;\n    }\n    // End multipart/form-data protocol\n    yield enc.encode(`\\r\\n--${boundary}--\\r\\n`);\n}\n/**\n * Replaces all instances of `InputFile` in a given payload by attach://\n * strings. This alters the passed object. After calling this method, the\n * payload object can be stringified.\n *\n * Returns a list of `InputFile` instances along with the random identifiers\n * that were used in the corresponding attach:// strings, as well as the origin\n * keys of the original payload object.\n *\n * @param value a payload object, or a part of it\n * @param key the origin key of the payload object, if a part of it is passed\n * @returns the cleaned payload object\n */\nfunction extractFiles(value) {\n    if (typeof value !== \"object\" || value === null)\n        return [];\n    return Object.entries(value).flatMap(([k, v]) => {\n        if (Array.isArray(v))\n            return v.flatMap((p) => extractFiles(p));\n        else if (v instanceof types_js_1.InputFile) {\n            const id = randomId();\n            // Overwrite `InputFile` instance with attach:// string\n            Object.assign(value, { [k]: `attach://${id}` });\n            const origin = k === \"media\" &&\n                \"type\" in value && typeof value.type === \"string\"\n                ? value.type // use `type` for `InputMedia*`\n                : k; // use property key otherwise\n            return { id, origin, file: v };\n        }\n        else\n            return extractFiles(v);\n    });\n}\n/** Turns a regular value into a `Uint8Array` */\nfunction valuePart(key, value) {\n    return enc.encode(`content-disposition:form-data;name=\"${key}\"\\r\\n\\r\\n${value}`);\n}\n/** Turns an InputFile into a generator of `Uint8Array`s */\nasync function* filePart(id, origin, input) {\n    const filename = input.filename || `${origin}.${getExt(origin)}`;\n    if (filename.includes(\"\\r\") || filename.includes(\"\\n\")) {\n        throw new Error(`File paths cannot contain carriage-return (\\\\r) \\\nor newline (\\\\n) characters! Filename for property '${origin}' was:\n\"\"\"\n${filename}\n\"\"\"`);\n    }\n    yield enc.encode(`content-disposition:form-data;name=\"${id}\";filename=${filename}\\r\\ncontent-type:application/octet-stream\\r\\n\\r\\n`);\n    const data = await input.toRaw();\n    if (data instanceof Uint8Array)\n        yield data;\n    else\n        yield* data;\n}\n/** Returns the default file extension for an API property name */\nfunction getExt(key) {\n    switch (key) {\n        case \"certificate\":\n            return \"pem\";\n        case \"photo\":\n        case \"thumbnail\":\n            return \"jpg\";\n        case \"voice\":\n            return \"ogg\";\n        case \"audio\":\n            return \"mp3\";\n        case \"animation\":\n        case \"video\":\n        case \"video_note\":\n            return \"mp4\";\n        case \"sticker\":\n            return \"webp\";\n        default:\n            return \"dat\";\n    }\n}\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetch = exports.AbortController = void 0;\nvar abort_controller_1 = require(\"abort-controller\");\nObject.defineProperty(exports, \"AbortController\", { enumerable: true, get: function () { return abort_controller_1.AbortController; } });\nvar node_fetch_1 = require(\"node-fetch\");\nObject.defineProperty(exports, \"fetch\", { enumerable: true, get: function () { return node_fetch_1.default; } });\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRawApi = createRawApi;\nconst platform_node_js_1 = require(\"../platform.node.js\");\nconst error_js_1 = require(\"./error.js\");\nconst payload_js_1 = require(\"./payload.js\");\nconst debug = (0, platform_node_js_1.debug)(\"grammy:core\");\n// Transformer base functions\nfunction concatTransformer(prev, trans) {\n    return (method, payload, signal) => trans(prev, method, payload, signal);\n}\nclass ApiClient {\n    constructor(token, options = {}, webhookReplyEnvelope = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        this.token = token;\n        this.webhookReplyEnvelope = webhookReplyEnvelope;\n        this.hasUsedWebhookReply = false;\n        this.installedTransformers = [];\n        this.call = async (method, p, signal) => {\n            const payload = p !== null && p !== void 0 ? p : {};\n            debug(`Calling ${method}`);\n            if (signal !== undefined)\n                validateSignal(method, payload, signal);\n            // General config\n            const opts = this.options;\n            const formDataRequired = (0, payload_js_1.requiresFormDataUpload)(payload);\n            // Short-circuit on webhook reply\n            if (this.webhookReplyEnvelope.send !== undefined &&\n                !this.hasUsedWebhookReply &&\n                !formDataRequired &&\n                opts.canUseWebhookReply(method)) {\n                this.hasUsedWebhookReply = true;\n                const config = (0, payload_js_1.createJsonPayload)({ ...payload, method });\n                await this.webhookReplyEnvelope.send(config.body);\n                return { ok: true, result: true };\n            }\n            // Handle timeouts and errors in the underlying form-data stream\n            const controller = createAbortControllerFromSignal(signal);\n            const timeout = createTimeout(controller, opts.timeoutSeconds, method);\n            const streamErr = createStreamError(controller);\n            // Build request URL and config\n            const url = opts.buildUrl(opts.apiRoot, this.token, method, opts.environment);\n            const config = formDataRequired\n                ? (0, payload_js_1.createFormDataPayload)(payload, (err) => streamErr.catch(err))\n                : (0, payload_js_1.createJsonPayload)(payload);\n            const sig = controller.signal;\n            const options = { ...opts.baseFetchConfig, signal: sig, ...config };\n            // Perform fetch call, and handle networking errors\n            const successPromise = this.fetch(url instanceof URL ? url.href : url, options).catch((0, error_js_1.toHttpError)(method, opts.sensitiveLogs));\n            // Those are the three possible outcomes of the fetch call:\n            const operations = [successPromise, streamErr.promise, timeout.promise];\n            // Wait for result\n            try {\n                const res = await Promise.race(operations);\n                return await res.json();\n            }\n            finally {\n                if (timeout.handle !== undefined)\n                    clearTimeout(timeout.handle);\n            }\n        };\n        const apiRoot = (_a = options.apiRoot) !== null && _a !== void 0 ? _a : \"https://api.telegram.org\";\n        const environment = (_b = options.environment) !== null && _b !== void 0 ? _b : \"prod\";\n        // In an ideal world, `fetch` is independent of the context being called,\n        // but in a Cloudflare worker, any context other than global throws an error.\n        // That is why we need to call custom fetch or fetch without context.\n        const { fetch: customFetch } = options;\n        const fetchFn = customFetch !== null && customFetch !== void 0 ? customFetch : shim_node_js_1.fetch;\n        this.options = {\n            apiRoot,\n            environment,\n            buildUrl: (_c = options.buildUrl) !== null && _c !== void 0 ? _c : defaultBuildUrl,\n            timeoutSeconds: (_d = options.timeoutSeconds) !== null && _d !== void 0 ? _d : 500,\n            baseFetchConfig: {\n                ...(0, platform_node_js_1.baseFetchConfig)(apiRoot),\n                ...options.baseFetchConfig,\n            },\n            canUseWebhookReply: (_e = options.canUseWebhookReply) !== null && _e !== void 0 ? _e : (() => false),\n            sensitiveLogs: (_f = options.sensitiveLogs) !== null && _f !== void 0 ? _f : false,\n            fetch: ((...args) => fetchFn(...args)),\n        };\n        this.fetch = this.options.fetch;\n        if (this.options.apiRoot.endsWith(\"/\")) {\n            throw new Error(`Remove the trailing '/' from the 'apiRoot' option (use '${this.options.apiRoot.substring(0, this.options.apiRoot.length - 1)}' instead of '${this.options.apiRoot}')`);\n        }\n    }\n    use(...transformers) {\n        this.call = transformers.reduce(concatTransformer, this.call);\n        this.installedTransformers.push(...transformers);\n        return this;\n    }\n    async callApi(method, payload, signal) {\n        const data = await this.call(method, payload, signal);\n        if (data.ok)\n            return data.result;\n        else\n            throw (0, error_js_1.toGrammyError)(data, method, payload);\n    }\n}\n/**\n * Creates a new transformable API, i.e. an object that lets you perform raw API\n * calls to the Telegram Bot API server but pass the calls through a stack of\n * transformers before. This will create a new API client instance under the\n * hood that will be used to connect to the Telegram servers. You therefore need\n * to pass the bot token. In addition, you may pass API client options as well\n * as a webhook reply envelope that allows the client to perform up to one HTTP\n * request in response to a webhook call if this is desired.\n *\n * @param token The bot's token\n * @param options A number of options to pass to the created API client\n * @param webhookReplyEnvelope The webhook reply envelope that will be used\n */\nfunction createRawApi(token, options, webhookReplyEnvelope) {\n    const client = new ApiClient(token, options, webhookReplyEnvelope);\n    const proxyHandler = {\n        get(_, m) {\n            return m === \"toJSON\"\n                ? \"__internal\"\n                // Methods with zero parameters are called without any payload,\n                // so we have to manually inject an empty payload.\n                : m === \"getMe\" ||\n                    m === \"getWebhookInfo\" ||\n                    m === \"getForumTopicIconStickers\" ||\n                    m === \"getAvailableGifts\" ||\n                    m === \"logOut\" ||\n                    m === \"close\" ||\n                    m === \"getMyStarBalance\"\n                    ? client.callApi.bind(client, m, {})\n                    : client.callApi.bind(client, m);\n        },\n        ...proxyMethods,\n    };\n    const raw = new Proxy({}, proxyHandler);\n    const installedTransformers = client.installedTransformers;\n    const api = {\n        raw,\n        installedTransformers,\n        use: (...t) => {\n            client.use(...t);\n            return api;\n        },\n    };\n    return api;\n}\nconst defaultBuildUrl = (root, token, method, env) => {\n    const prefix = env === \"test\" ? \"test/\" : \"\";\n    return `${root}/bot${token}/${prefix}${method}`;\n};\nconst proxyMethods = {\n    set() {\n        return false;\n    },\n    defineProperty() {\n        return false;\n    },\n    deleteProperty() {\n        return false;\n    },\n    ownKeys() {\n        return [];\n    },\n};\n/** Creates a timeout error which aborts a given controller */\nfunction createTimeout(controller, seconds, method) {\n    let handle = undefined;\n    const promise = new Promise((_, reject) => {\n        handle = setTimeout(() => {\n            const msg = `Request to '${method}' timed out after ${seconds} seconds`;\n            reject(new Error(msg));\n            controller.abort();\n        }, 1000 * seconds);\n    });\n    return { promise, handle };\n}\n/** Creates a stream error which abort a given controller */\nfunction createStreamError(abortController) {\n    let onError = (err) => {\n        // Re-throw by default, but will be overwritten immediately\n        throw err;\n    };\n    const promise = new Promise((_, reject) => {\n        onError = (err) => {\n            reject(err);\n            abortController.abort();\n        };\n    });\n    return { promise, catch: onError };\n}\nfunction createAbortControllerFromSignal(signal) {\n    const abortController = new shim_node_js_1.AbortController();\n    if (signal === undefined)\n        return abortController;\n    const sig = signal;\n    function abort() {\n        abortController.abort();\n        sig.removeEventListener(\"abort\", abort);\n    }\n    if (sig.aborted)\n        abort();\n    else\n        sig.addEventListener(\"abort\", abort);\n    return { abort, signal: abortController.signal };\n}\nfunction validateSignal(method, payload, signal) {\n    // We use a very simple heuristic to check for AbortSignal instances\n    // in order to avoid doing a runtime-specific version of `instanceof`.\n    if (typeof (signal === null || signal === void 0 ? void 0 : signal.addEventListener) === \"function\") {\n        return;\n    }\n    let payload0 = JSON.stringify(payload);\n    if (payload0.length > 20) {\n        payload0 = payload0.substring(0, 16) + \" ...\";\n    }\n    let payload1 = JSON.stringify(signal);\n    if (payload1.length > 20) {\n        payload1 = payload1.substring(0, 16) + \" ...\";\n    }\n    throw new Error(`Incorrect abort signal instance found! \\\nYou passed two payloads to '${method}' but you should merge \\\nthe second one containing '${payload1}' into the first one \\\ncontaining '${payload0}'! If you are using context shortcuts, \\\nyou may want to use a method on 'ctx.api' instead.\n\nIf you want to prevent such mistakes in the future, \\\nconsider using TypeScript. https://www.typescriptlang.org/`);\n}\nconst shim_node_js_1 = require(\"./../shim.node.js\");\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Api = void 0;\nconst client_js_1 = require(\"./client.js\");\n/**\n * This class provides access to the full Telegram Bot API. All methods of the\n * API have an equivalent on this class, with the most important parameters\n * pulled up into the function signature, and the other parameters captured by\n * an object.\n *\n * In addition, this class has a property `raw` that provides raw access to the\n * complete Telegram API, with the method signatures 1:1 represented as\n * documented on the website (https://core.telegram.org/bots/api).\n *\n * Every method takes an optional `AbortSignal` object that allows you to cancel\n * the request if desired.\n *\n * In advanced use cases, this class allows to install transformers that can\n * modify the method and payload on the fly before sending it to the Telegram\n * servers. Confer the `config` property for this.\n */\nclass Api {\n    /**\n     * Constructs a new instance of `Api`. It is independent from all other\n     * instances of this class. For example, this lets you install a custom set\n     * of transformers.\n     *\n     * @param token Bot API token obtained from [@BotFather](https://t.me/BotFather)\n     * @param options Optional API client options for the underlying client instance\n     * @param webhookReplyEnvelope Optional envelope to handle webhook replies\n     */\n    constructor(token, options, webhookReplyEnvelope) {\n        this.token = token;\n        this.options = options;\n        const { raw, use, installedTransformers } = (0, client_js_1.createRawApi)(token, options, webhookReplyEnvelope);\n        this.raw = raw;\n        this.config = {\n            use,\n            installedTransformers: () => installedTransformers.slice(),\n        };\n    }\n    /**\n     * Use this method to receive incoming updates using long polling (wiki). Returns an Array of Update objects.\n     *\n     * Notes\n     * 1. This method will not work if an outgoing webhook is set up.\n     * 2. In order to avoid getting duplicate updates, recalculate offset after each server response.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getupdates\n     */\n    getUpdates(other, signal) {\n        return this.raw.getUpdates({ ...other }, signal);\n    }\n    /**\n     * Use this method to specify a URL and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified URL, containing a JSON-serialized Update. In case of an unsuccessful request, we will give up after a reasonable amount of attempts. Returns True on success.\n     *\n     * If you'd like to make sure that the webhook was set by you, you can specify secret data in the parameter secret_token. If specified, the request will contain a header “X-Telegram-Bot-Api-Secret-Token” with the secret token as content.\n     *\n     * Notes\n     * 1. You will not be able to receive updates using getUpdates for as long as an outgoing webhook is set up.\n     * 2. To use a self-signed certificate, you need to upload your public key certificate using certificate parameter. Please upload as InputFile, sending a String will not work.\n     * 3. Ports currently supported for Webhooks: 443, 80, 88, 8443.\n     *\n     * If you're having any trouble setting up webhooks, please check out this amazing guide to webhooks.\n     *\n     * @param url HTTPS url to send updates to. Use an empty string to remove webhook integration\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setwebhook\n     */\n    setWebhook(url, other, signal) {\n        return this.raw.setWebhook({ url, ...other }, signal);\n    }\n    /**\n     * Use this method to remove webhook integration if you decide to switch back to getUpdates. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletewebhook\n     */\n    deleteWebhook(other, signal) {\n        return this.raw.deleteWebhook({ ...other }, signal);\n    }\n    /**\n     * Use this method to get current webhook status. Requires no parameters. On success, returns a WebhookInfo object. If the bot is using getUpdates, will return an object with the url field empty.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getwebhookinfo\n     */\n    getWebhookInfo(signal) {\n        return this.raw.getWebhookInfo(signal);\n    }\n    /**\n     * A simple method for testing your bot's authentication token. Requires no parameters. Returns basic information about the bot in form of a User object.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getme\n     */\n    getMe(signal) {\n        return this.raw.getMe(signal);\n    }\n    /**\n     * Use this method to log out from the cloud Bot API server before launching the bot locally. You must log out the bot before running it locally, otherwise there is no guarantee that the bot will receive updates. After a successful call, you can immediately log in on a local server, but will not be able to log in back to the cloud Bot API server for 10 minutes. Returns True on success. Requires no parameters.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#logout\n     */\n    logOut(signal) {\n        return this.raw.logOut(signal);\n    }\n    /**\n     * Use this method to close the bot instance before moving it from one local server to another. You need to delete the webhook before calling this method to ensure that the bot isn't launched again after server restart. The method will return error 429 in the first 10 minutes after the bot is launched. Returns True on success. Requires no parameters.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#close\n     */\n    close(signal) {\n        return this.raw.close(signal);\n    }\n    /**\n     * Use this method to send text messages. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param text Text of the message to be sent, 1-4096 characters after entities parsing\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendmessage\n     */\n    sendMessage(chat_id, text, other, signal) {\n        return this.raw.sendMessage({ chat_id, text, ...other }, signal);\n    }\n    /**\n     * Use this method to forward messages of any kind. Service messages and messages with protected content can't be forwarded. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param from_chat_id Unique identifier for the chat where the original message was sent (or channel username in the format @channelusername)\n     * @param message_id Message identifier in the chat specified in from_chat_id\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#forwardmessage\n     */\n    forwardMessage(chat_id, from_chat_id, message_id, other, signal) {\n        return this.raw.forwardMessage({ chat_id, from_chat_id, message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to forward multiple messages of any kind. If some of the specified messages can't be found or forwarded, they are skipped. Service messages and messages with protected content can't be forwarded. Album grouping is kept for forwarded messages. On success, an array of MessageId of the sent messages is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param from_chat_id Unique identifier for the chat where the original messages were sent (or channel username in the format @channelusername)\n     * @param message_ids A list of 1-100 identifiers of messages in the chat from_chat_id to forward. The identifiers must be specified in a strictly increasing order.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#forwardmessages\n     */\n    forwardMessages(chat_id, from_chat_id, message_ids, other, signal) {\n        return this.raw.forwardMessages({\n            chat_id,\n            from_chat_id,\n            message_ids,\n            ...other,\n        }, signal);\n    }\n    /**\n     * Use this method to copy messages of any kind. Service messages, paid media messages, giveaway messages, giveaway winners messages, and invoice messages can't be copied. A quiz poll can be copied only if the value of the field correct_option_id is known to the bot. The method is analogous to the method forwardMessage, but the copied message doesn't have a link to the original message. Returns the MessageId of the sent message on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param from_chat_id Unique identifier for the chat where the original message was sent (or channel username in the format @channelusername)\n     * @param message_id Message identifier in the chat specified in from_chat_id\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#copymessage\n     */\n    copyMessage(chat_id, from_chat_id, message_id, other, signal) {\n        return this.raw.copyMessage({ chat_id, from_chat_id, message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to copy messages of any kind. If some of the specified messages can't be found or copied, they are skipped. Service messages, paid media messages, giveaway messages, giveaway winners messages, and invoice messages can't be copied. A quiz poll can be copied only if the value of the field correct_option_id is known to the bot. The method is analogous to the method forwardMessages, but the copied messages don't have a link to the original message. Album grouping is kept for copied messages. On success, an array of MessageId of the sent messages is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param from_chat_id Unique identifier for the chat where the original messages were sent (or channel username in the format @channelusername)\n     * @param message_ids A list of 1-100 identifiers of messages in the chat from_chat_id to copy. The identifiers must be specified in a strictly increasing order.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#copymessages\n     */\n    copyMessages(chat_id, from_chat_id, message_ids, other, signal) {\n        return this.raw.copyMessages({\n            chat_id,\n            from_chat_id,\n            message_ids,\n            ...other,\n        }, signal);\n    }\n    /**\n     * Use this method to send photos. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param photo Photo to send. Pass a file_id as String to send a photo that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a photo from the Internet, or upload a new photo using multipart/form-data. The photo must be at most 10 MB in size. The photo's width and height must not exceed 10000 in total. Width and height ratio must be at most 20.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendphoto\n     */\n    sendPhoto(chat_id, photo, other, signal) {\n        return this.raw.sendPhoto({ chat_id, photo, ...other }, signal);\n    }\n    /**\n     * Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .MP3 or .M4A format. On success, the sent Message is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * For sending voice messages, use the sendVoice method instead.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param audio Audio file to send. Pass a file_id as String to send an audio file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an audio file from the Internet, or upload a new one using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendaudio\n     */\n    sendAudio(chat_id, audio, other, signal) {\n        return this.raw.sendAudio({ chat_id, audio, ...other }, signal);\n    }\n    /**\n     * Use this method to send general files. On success, the sent Message is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param document File to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#senddocument\n     */\n    sendDocument(chat_id, document, other, signal) {\n        return this.raw.sendDocument({ chat_id, document, ...other }, signal);\n    }\n    /**\n     * Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param video Video to send. Pass a file_id as String to send a video that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a video from the Internet, or upload a new video using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendvideo\n     */\n    sendVideo(chat_id, video, other, signal) {\n        return this.raw.sendVideo({ chat_id, video, ...other }, signal);\n    }\n    /**\n     * Use this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound). On success, the sent Message is returned. Bots can currently send animation files of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param animation Animation to send. Pass a file_id as String to send an animation that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an animation from the Internet, or upload a new animation using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendanimation\n     */\n    sendAnimation(chat_id, animation, other, signal) {\n        return this.raw.sendAnimation({ chat_id, animation, ...other }, signal);\n    }\n    /**\n     * Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .OGG file encoded with OPUS (other formats may be sent as Audio or Document). On success, the sent Message is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param voice Audio file to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendvoice\n     */\n    sendVoice(chat_id, voice, other, signal) {\n        return this.raw.sendVoice({ chat_id, voice, ...other }, signal);\n    }\n    /**\n     * Use this method to send video messages. On success, the sent Message is returned.\n     * As of v.4.0, Telegram clients support rounded square mp4 videos of up to 1 minute long.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param video_note Video note to send. Pass a file_id as String to send a video note that exists on the Telegram servers (recommended) or upload a new video using multipart/form-data.. Sending video notes by a URL is currently unsupported\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendvideonote\n     */\n    sendVideoNote(chat_id, video_note, other, signal) {\n        return this.raw.sendVideoNote({ chat_id, video_note, ...other }, signal);\n    }\n    /**\n     * Use this method to send a group of photos, videos, documents or audios as an album. Documents and audio files can be only grouped in an album with messages of the same type. On success, an array of Messages that were sent is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param media An array describing messages to be sent, must include 2-10 items\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendmediagroup\n     */\n    sendMediaGroup(chat_id, media, other, signal) {\n        return this.raw.sendMediaGroup({ chat_id, media, ...other }, signal);\n    }\n    /**\n     * Use this method to send point on the map. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param latitude Latitude of the location\n     * @param longitude Longitude of the location\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendlocation\n     */\n    sendLocation(chat_id, latitude, longitude, other, signal) {\n        return this.raw.sendLocation({ chat_id, latitude, longitude, ...other }, signal);\n    }\n    /**\n     * Use this method to edit live location messages. A location can be edited until its live_period expires or editing is explicitly disabled by a call to stopMessageLiveLocation. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of the message to edit\n     * @param latitude Latitude of new location\n     * @param longitude Longitude of new location\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagelivelocation\n     */\n    editMessageLiveLocation(chat_id, message_id, latitude, longitude, other, signal) {\n        return this.raw.editMessageLiveLocation({ chat_id, message_id, latitude, longitude, ...other }, signal);\n    }\n    /**\n     * Use this method to edit live location inline messages. A location can be edited until its live_period expires or editing is explicitly disabled by a call to stopMessageLiveLocation. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned.\n     *\n     * @param inline_message_id Identifier of the inline message\n     * @param latitude Latitude of new location\n     * @param longitude Longitude of new location\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagelivelocation\n     */\n    editMessageLiveLocationInline(inline_message_id, latitude, longitude, other, signal) {\n        return this.raw.editMessageLiveLocation({ inline_message_id, latitude, longitude, ...other }, signal);\n    }\n    /**\n     * Use this method to stop updating a live location message before live_period expires. On success, if the message is not an inline message, the edited Message is returned, otherwise True is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of the message with live location to stop\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#stopmessagelivelocation\n     */\n    stopMessageLiveLocation(chat_id, message_id, other, signal) {\n        return this.raw.stopMessageLiveLocation({ chat_id, message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to stop updating a live location message before live_period expires. On success, if the message is not an inline message, the edited Message is returned, otherwise True is returned.\n     *\n     * @param inline_message_id Identifier of the inline message\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#stopmessagelivelocation\n     */\n    stopMessageLiveLocationInline(inline_message_id, other, signal) {\n        return this.raw.stopMessageLiveLocation({ inline_message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to send paid media. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param star_count The number of Telegram Stars that must be paid to buy access to the media\n     * @param media An array describing the media to be sent; up to 10 items\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendpaidmedia\n     */\n    sendPaidMedia(chat_id, star_count, media, other, signal) {\n        return this.raw.sendPaidMedia({ chat_id, star_count, media, ...other }, signal);\n    }\n    /**\n     * Use this method to send information about a venue. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param latitude Latitude of the venue\n     * @param longitude Longitude of the venue\n     * @param title Name of the venue\n     * @param address Address of the venue\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendvenue\n     */\n    sendVenue(chat_id, latitude, longitude, title, address, other, signal) {\n        return this.raw.sendVenue({ chat_id, latitude, longitude, title, address, ...other }, signal);\n    }\n    /**\n     * Use this method to send phone contacts. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param phone_number Contact's phone number\n     * @param first_name Contact's first name\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendcontact\n     */\n    sendContact(chat_id, phone_number, first_name, other, signal) {\n        return this.raw.sendContact({ chat_id, phone_number, first_name, ...other }, signal);\n    }\n    /**\n     * Use this method to send a native poll. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param question Poll question, 1-300 characters\n     * @param options A list of answer options, 2-12 strings 1-100 characters each\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendpoll\n     */\n    sendPoll(chat_id, question, options, other, signal) {\n        const opts = options.map((o) => typeof o === \"string\" ? { text: o } : o);\n        return this.raw.sendPoll({ chat_id, question, options: opts, ...other }, signal);\n    }\n    /**\n     * Use this method to send a checklist on behalf of a connected business account. On success, the sent Message is returned.\n     *\n     * @param business_connection_id Unique identifier of the business connection on behalf of which the message will be sent\n     * @param chat_id Unique identifier for the target chat\n     * @param checklist An object for the checklist to send\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendchecklist\n     */\n    sendChecklist(business_connection_id, chat_id, checklist, other, signal) {\n        return this.raw.sendChecklist({\n            business_connection_id,\n            chat_id,\n            checklist,\n            ...other,\n        }, signal);\n    }\n    /**\n     * Use this method to edit a checklist on behalf of a connected business account. On success, the edited Message is returned.\n     *\n     * @param business_connection_id Unique identifier of the business connection on behalf of which the message will be sent\n     * @param chat_id Unique identifier for the target chat\n     * @param message_id Unique identifier for the target message\n     * @param checklist An object for the new checklist\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagechecklist\n     */\n    editMessageChecklist(business_connection_id, chat_id, message_id, checklist, other, signal) {\n        return this.raw.editMessageChecklist({\n            business_connection_id,\n            chat_id,\n            message_id,\n            checklist,\n            ...other,\n        }, signal);\n    }\n    /**\n     * Use this method to send an animated emoji that will display a random value. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param emoji Emoji on which the dice throw animation is based. Currently, must be one of “🎲”, “🎯”, “🏀”, “⚽”, “🎳”, or “🎰”. Dice can have values 1-6 for “🎲”, “🎯” and “🎳”, values 1-5 for “🏀” and “⚽”, and values 1-64 for “🎰”. Defaults to “🎲”\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#senddice\n     */\n    sendDice(chat_id, emoji, other, signal) {\n        return this.raw.sendDice({ chat_id, emoji, ...other }, signal);\n    }\n    /**\n     * Use this method to change the chosen reactions on a message. Service messages of some types can't be reacted to. Automatically forwarded messages from a channel to its discussion group have the same available reactions as messages in the channel. Bots can't use paid reactions. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of the target message\n     * @param reaction A list of reaction types to set on the message. Currently, as non-premium users, bots can set up to one reaction per message. A custom emoji reaction can be used if it is either already present on the message or explicitly allowed by chat administrators. Paid reactions can't be used by bots.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setmessagereaction\n     */\n    setMessageReaction(chat_id, message_id, reaction, other, signal) {\n        return this.raw.setMessageReaction({\n            chat_id,\n            message_id,\n            reaction,\n            ...other,\n        }, signal);\n    }\n    /**\n     * Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). Returns True on success.\n     *\n     * Example: The ImageBot needs some time to process a request and upload the image. Instead of sending a text message along the lines of “Retrieving image, please wait…”, the bot may use sendChatAction with action = upload_photo. The user will see a “sending photo” status for the bot.\n     *\n     * We only recommend using this method when a response from the bot will take a noticeable amount of time to arrive.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param action Type of action to broadcast. Choose one, depending on what the user is about to receive: typing for text messages, upload_photo for photos, record_video or upload_video for videos, record_voice or upload_voice for voice notes, upload_document for general files, choose_sticker for stickers, find_location for location data, record_video_note or upload_video_note for video notes.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendchataction\n     */\n    sendChatAction(chat_id, action, other, signal) {\n        return this.raw.sendChatAction({ chat_id, action, ...other }, signal);\n    }\n    /**\n     * Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getuserprofilephotos\n     */\n    getUserProfilePhotos(user_id, other, signal) {\n        return this.raw.getUserProfilePhotos({ user_id, ...other }, signal);\n    }\n    /**\n     * Changes the emoji status for a given user that previously allowed the bot to manage their emoji status via the Mini App method requestEmojiStatusAccess. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setuseremojistatus\n     */\n    setUserEmojiStatus(user_id, other, signal) {\n        return this.raw.setUserEmojiStatus({ user_id, ...other }, signal);\n    }\n    /**\n     * Use this method to get the list of boosts added to a chat by a user. Requires administrator rights in the chat. Returns a UserChatBoosts object.\n     *\n     * @param chat_id Unique identifier for the chat or username of the channel (in the format @channelusername)\n     * @param user_id Unique identifier of the target user\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getuserchatboosts\n     */\n    getUserChatBoosts(chat_id, user_id, signal) {\n        return this.raw.getUserChatBoosts({ chat_id, user_id }, signal);\n    }\n    /**\n     * Use this method to get information about the connection of the bot with a business account. Returns a BusinessConnection object on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getbusinessconnection\n     */\n    getBusinessConnection(business_connection_id, signal) {\n        return this.raw.getBusinessConnection({ business_connection_id }, signal);\n    }\n    /**\n     * Use this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a File object is returned. The file can then be downloaded via the link `https://api.telegram.org/file/bot<token>/<file_path>`, where `<file_path>` is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile again.\n     *\n     * Note: This function may not preserve the original file name and MIME type. You should save the file's MIME type and name (if available) when the File object is received.\n     *\n     * @param file_id File identifier to get info about\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getfile\n     */\n    getFile(file_id, signal) {\n        return this.raw.getFile({ file_id }, signal);\n    }\n    /** @deprecated Use `banChatMember` instead. */\n    kickChatMember(...args) {\n        return this.banChatMember(...args);\n    }\n    /**\n     * Use this method to ban a user in a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the chat on their own using invite links, etc., unless unbanned first. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target group or username of the target supergroup or channel (in the format @channelusername)\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#banchatmember\n     */\n    banChatMember(chat_id, user_id, other, signal) {\n        return this.raw.banChatMember({ chat_id, user_id, ...other }, signal);\n    }\n    /**\n     * Use this method to unban a previously banned user in a supergroup or channel. The user will not return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. By default, this method guarantees that after the call the user is not a member of the chat, but will be able to join it. So if the user is a member of the chat they will also be removed from the chat. If you don't want this, use the parameter only_if_banned. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target group or username of the target supergroup or channel (in the format @username)\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unbanchatmember\n     */\n    unbanChatMember(chat_id, user_id, other, signal) {\n        return this.raw.unbanChatMember({ chat_id, user_id, ...other }, signal);\n    }\n    /**\n     * Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate administrator rights. Pass True for all permissions to lift restrictions from a user. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param user_id Unique identifier of the target user\n     * @param permissions An object for new user permissions\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#restrictchatmember\n     */\n    restrictChatMember(chat_id, user_id, permissions, other, signal) {\n        return this.raw.restrictChatMember({ chat_id, user_id, permissions, ...other }, signal);\n    }\n    /**\n     * Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Pass False for all boolean parameters to demote a user. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#promotechatmember\n     */\n    promoteChatMember(chat_id, user_id, other, signal) {\n        return this.raw.promoteChatMember({ chat_id, user_id, ...other }, signal);\n    }\n    /**\n     * Use this method to set a custom title for an administrator in a supergroup promoted by the bot. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param user_id Unique identifier of the target user\n     * @param custom_title New custom title for the administrator; 0-16 characters, emoji are not allowed\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatadministratorcustomtitle\n     */\n    setChatAdministratorCustomTitle(chat_id, user_id, custom_title, signal) {\n        return this.raw.setChatAdministratorCustomTitle({ chat_id, user_id, custom_title }, signal);\n    }\n    /**\n     * Use this method to ban a channel chat in a supergroup or a channel. Until the chat is unbanned, the owner of the banned chat won't be able to send messages on behalf of any of their channels. The bot must be an administrator in the supergroup or channel for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param sender_chat_id Unique identifier of the target sender chat\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#banchatsenderchat\n     */\n    banChatSenderChat(chat_id, sender_chat_id, signal) {\n        return this.raw.banChatSenderChat({ chat_id, sender_chat_id }, signal);\n    }\n    /**\n     * Use this method to unban a previously banned channel chat in a supergroup or channel. The bot must be an administrator for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param sender_chat_id Unique identifier of the target sender chat\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unbanchatsenderchat\n     */\n    unbanChatSenderChat(chat_id, sender_chat_id, signal) {\n        return this.raw.unbanChatSenderChat({ chat_id, sender_chat_id }, signal);\n    }\n    /**\n     * Use this method to set default chat permissions for all members. The bot must be an administrator in the group or a supergroup for this to work and must have the can_restrict_members administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param permissions New default chat permissions\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatpermissions\n     */\n    setChatPermissions(chat_id, permissions, other, signal) {\n        return this.raw.setChatPermissions({ chat_id, permissions, ...other }, signal);\n    }\n    /**\n     * Use this method to generate a new primary invite link for a chat; any previously generated primary link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the new invite link as String on success.\n     *\n     * Note: Each administrator in a chat generates their own invite links. Bots can't use invite links generated by other administrators. If you want your bot to work with invite links, it will need to generate its own link using exportChatInviteLink or by calling the getChat method. If your bot needs to generate a new primary invite link replacing its previous one, use exportChatInviteLink again.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#exportchatinvitelink\n     */\n    exportChatInviteLink(chat_id, signal) {\n        return this.raw.exportChatInviteLink({ chat_id }, signal);\n    }\n    /**\n     * Use this method to create an additional invite link for a chat. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. The link can be revoked using the method revokeChatInviteLink. Returns the new invite link as ChatInviteLink object.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#createchatinvitelink\n     */\n    createChatInviteLink(chat_id, other, signal) {\n        return this.raw.createChatInviteLink({ chat_id, ...other }, signal);\n    }\n    /**\n     * Use this method to edit a non-primary invite link created by the bot. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the edited invite link as a ChatInviteLink object.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param invite_link The invite link to edit\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editchatinvitelink\n     */\n    editChatInviteLink(chat_id, invite_link, other, signal) {\n        return this.raw.editChatInviteLink({ chat_id, invite_link, ...other }, signal);\n    }\n    /**\n     * Use this method to create a subscription invite link for a channel chat. The bot must have the can_invite_users administrator rights. The link can be edited using the method editChatSubscriptionInviteLink or revoked using the method revokeChatInviteLink. Returns the new invite link as a ChatInviteLink object.\n     *\n     * @param chat_id Unique identifier for the target channel chat or username of the target channel (in the format @channelusername)\n     * @param subscription_period The number of seconds the subscription will be active for before the next payment. Currently, it must always be 2592000 (30 days).\n     * @param subscription_price The amount of Telegram Stars a user must pay initially and after each subsequent subscription period to be a member of the chat; 1-2500\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#createchatsubscriptioninvitelink\n     */\n    createChatSubscriptionInviteLink(chat_id, subscription_period, subscription_price, other, signal) {\n        return this.raw.createChatSubscriptionInviteLink({ chat_id, subscription_period, subscription_price, ...other }, signal);\n    }\n    /**\n     * Use this method to edit a subscription invite link created by the bot. The bot must have the can_invite_users administrator rights. Returns the edited invite link as a ChatInviteLink object.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param invite_link The invite link to edit\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editchatsubscriptioninvitelink\n     */\n    editChatSubscriptionInviteLink(chat_id, invite_link, other, signal) {\n        return this.raw.editChatSubscriptionInviteLink({ chat_id, invite_link, ...other }, signal);\n    }\n    /**\n     * Use this method to revoke an invite link created by the bot. If the primary link is revoked, a new link is automatically generated. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the revoked invite link as ChatInviteLink object.\n     *\n     * @param chat_id Unique identifier of the target chat or username of the target channel (in the format @channelusername)\n     * @param invite_link The invite link to revoke\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#revokechatinvitelink\n     */\n    revokeChatInviteLink(chat_id, invite_link, signal) {\n        return this.raw.revokeChatInviteLink({ chat_id, invite_link }, signal);\n    }\n    /**\n     * Use this method to approve a chat join request. The bot must be an administrator in the chat for this to work and must have the can_invite_users administrator right. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param user_id Unique identifier of the target user\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#approvechatjoinrequest\n     */\n    approveChatJoinRequest(chat_id, user_id, signal) {\n        return this.raw.approveChatJoinRequest({ chat_id, user_id }, signal);\n    }\n    /**\n     * Use this method to decline a chat join request. The bot must be an administrator in the chat for this to work and must have the can_invite_users administrator right. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param user_id Unique identifier of the target user\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#declinechatjoinrequest\n     */\n    declineChatJoinRequest(chat_id, user_id, signal) {\n        return this.raw.declineChatJoinRequest({ chat_id, user_id }, signal);\n    }\n    /**\n     * Use this method to set a new profile photo for the chat. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param photo New chat photo, uploaded using multipart/form-data\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatphoto\n     */\n    setChatPhoto(chat_id, photo, signal) {\n        return this.raw.setChatPhoto({ chat_id, photo }, signal);\n    }\n    /**\n     * Use this method to delete a chat photo. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletechatphoto\n     */\n    deleteChatPhoto(chat_id, signal) {\n        return this.raw.deleteChatPhoto({ chat_id }, signal);\n    }\n    /**\n     * Use this method to change the title of a chat. Titles can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param title New chat title, 1-255 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchattitle\n     */\n    setChatTitle(chat_id, title, signal) {\n        return this.raw.setChatTitle({ chat_id, title }, signal);\n    }\n    /**\n     * Use this method to change the description of a group, a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param description New chat description, 0-255 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatdescription\n     */\n    setChatDescription(chat_id, description, signal) {\n        return this.raw.setChatDescription({ chat_id, description }, signal);\n    }\n    /**\n     * Use this method to add a message to the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can_pin_messages' administrator right in a supergroup or 'can_edit_messages' administrator right in a channel. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of a message to pin\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#pinchatmessage\n     */\n    pinChatMessage(chat_id, message_id, other, signal) {\n        return this.raw.pinChatMessage({ chat_id, message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to remove a message from the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can_pin_messages' administrator right in a supergroup or 'can_edit_messages' administrator right in a channel. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of a message to unpin. If not specified, the most recent pinned message (by sending date) will be unpinned.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unpinchatmessage\n     */\n    unpinChatMessage(chat_id, message_id, other, signal) {\n        return this.raw.unpinChatMessage({ chat_id, message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to clear the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can_pin_messages' administrator right in a supergroup or 'can_edit_messages' administrator right in a channel. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unpinallchatmessages\n     */\n    unpinAllChatMessages(chat_id, signal) {\n        return this.raw.unpinAllChatMessages({ chat_id }, signal);\n    }\n    /**\n     * Use this method for your bot to leave a group, supergroup or channel. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#leavechat\n     */\n    leaveChat(chat_id, signal) {\n        return this.raw.leaveChat({ chat_id }, signal);\n    }\n    /**\n     * Use this method to get up to date information about the chat (current name of the user for one-on-one conversations, current username of a user, group or channel, etc.). Returns a Chat object on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchat\n     */\n    getChat(chat_id, signal) {\n        return this.raw.getChat({ chat_id }, signal);\n    }\n    /**\n     * Use this method to get a list of administrators in a chat, which aren't bots. Returns an Array of ChatMember objects.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchatadministrators\n     */\n    getChatAdministrators(chat_id, signal) {\n        return this.raw.getChatAdministrators({ chat_id }, signal);\n    }\n    /** @deprecated Use `getChatMemberCount` instead. */\n    getChatMembersCount(...args) {\n        return this.getChatMemberCount(...args);\n    }\n    /**\n     * Use this method to get the number of members in a chat. Returns Int on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchatmembercount\n     */\n    getChatMemberCount(chat_id, signal) {\n        return this.raw.getChatMemberCount({ chat_id }, signal);\n    }\n    /**\n     * Use this method to get information about a member of a chat. The method is guaranteed to work only if the bot is an administrator in the chat. Returns a ChatMember object on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n     * @param user_id Unique identifier of the target user\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchatmember\n     */\n    getChatMember(chat_id, user_id, signal) {\n        return this.raw.getChatMember({ chat_id, user_id }, signal);\n    }\n    /**\n     * Use this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Use the field can_set_sticker_set ly returned in getChat requests to check if the bot can use this method. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param sticker_set_name Name of the sticker set to be set as the group sticker set\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatstickerset\n     */\n    setChatStickerSet(chat_id, sticker_set_name, signal) {\n        return this.raw.setChatStickerSet({ chat_id, sticker_set_name }, signal);\n    }\n    /**\n     * Use this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Use the field can_set_sticker_set ly returned in getChat requests to check if the bot can use this method. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletechatstickerset\n     */\n    deleteChatStickerSet(chat_id, signal) {\n        return this.raw.deleteChatStickerSet({ chat_id }, signal);\n    }\n    /**\n     * Use this method to get custom emoji stickers, which can be used as a forum topic icon by any user. Requires no parameters. Returns an Array of Sticker objects.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getforumtopiciconstickers\n     */\n    getForumTopicIconStickers(signal) {\n        return this.raw.getForumTopicIconStickers(signal);\n    }\n    /**\n     * Use this method to create a topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns information about the created topic as a ForumTopic object.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param name Topic name, 1-128 characters\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#createforumtopic\n     */\n    createForumTopic(chat_id, name, other, signal) {\n        return this.raw.createForumTopic({ chat_id, name, ...other }, signal);\n    }\n    /**\n     * Use this method to edit name and icon of a topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights, unless it is the creator of the topic. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param message_thread_id Unique identifier for the target message thread of the forum topic\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editforumtopic\n     */\n    editForumTopic(chat_id, message_thread_id, other, signal) {\n        return this.raw.editForumTopic({ chat_id, message_thread_id, ...other }, signal);\n    }\n    /**\n     * Use this method to close an open topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights, unless it is the creator of the topic. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param message_thread_id Unique identifier for the target message thread of the forum topic\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#closeforumtopic\n     */\n    closeForumTopic(chat_id, message_thread_id, signal) {\n        return this.raw.closeForumTopic({ chat_id, message_thread_id }, signal);\n    }\n    /**\n     * Use this method to reopen a closed topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights, unless it is the creator of the topic. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param message_thread_id Unique identifier for the target message thread of the forum topic\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#reopenforumtopic\n     */\n    reopenForumTopic(chat_id, message_thread_id, signal) {\n        return this.raw.reopenForumTopic({ chat_id, message_thread_id }, signal);\n    }\n    /**\n     * Use this method to delete a forum topic along with all its messages in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_delete_messages administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param message_thread_id Unique identifier for the target message thread of the forum topic\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deleteforumtopic\n     */\n    deleteForumTopic(chat_id, message_thread_id, signal) {\n        return this.raw.deleteForumTopic({ chat_id, message_thread_id }, signal);\n    }\n    /**\n     * Use this method to clear the list of pinned messages in a forum topic. The bot must be an administrator in the chat for this to work and must have the can_pin_messages administrator right in the supergroup. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param message_thread_id Unique identifier for the target message thread of the forum topic\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unpinallforumtopicmessages\n     */\n    unpinAllForumTopicMessages(chat_id, message_thread_id, signal) {\n        return this.raw.unpinAllForumTopicMessages({ chat_id, message_thread_id }, signal);\n    }\n    /**\n     * Use this method to edit the name of the 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param name New topic name, 1-128 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editgeneralforumtopic\n     */\n    editGeneralForumTopic(chat_id, name, signal) {\n        return this.raw.editGeneralForumTopic({ chat_id, name }, signal);\n    }\n    /**\n     * Use this method to close an open 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#closegeneralforumtopic\n     */\n    closeGeneralForumTopic(chat_id, signal) {\n        return this.raw.closeGeneralForumTopic({ chat_id }, signal);\n    }\n    /**\n     * Use this method to reopen a closed 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. The topic will be automatically unhidden if it was hidden. Returns True on success.     *\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#reopengeneralforumtopic\n     */\n    reopenGeneralForumTopic(chat_id, signal) {\n        return this.raw.reopenGeneralForumTopic({ chat_id }, signal);\n    }\n    /**\n     * Use this method to hide the 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. The topic will be automatically closed if it was open. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#hidegeneralforumtopic\n     */\n    hideGeneralForumTopic(chat_id, signal) {\n        return this.raw.hideGeneralForumTopic({ chat_id }, signal);\n    }\n    /**\n     * Use this method to unhide the 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unhidegeneralforumtopic\n     */\n    unhideGeneralForumTopic(chat_id, signal) {\n        return this.raw.unhideGeneralForumTopic({ chat_id }, signal);\n    }\n    /**\n     * Use this method to clear the list of pinned messages in a General forum topic. The bot must be an administrator in the chat for this to work and must have the can_pin_messages administrator right in the supergroup. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#unpinallgeneralforumtopicmessages\n     */\n    unpinAllGeneralForumTopicMessages(chat_id, signal) {\n        return this.raw.unpinAllGeneralForumTopicMessages({ chat_id }, signal);\n    }\n    /**\n     * Use this method to send answers to callback queries sent from inline keyboards. The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, True is returned.\n     *\n     * Alternatively, the user can be redirected to the specified Game URL. For this option to work, you must first create a game for your bot via @BotFather and accept the terms. Otherwise, you may use links like t.me/your_bot?start=XXXX that open your bot with a parameter.\n     *\n     * @param callback_query_id Unique identifier for the query to be answered\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#answercallbackquery\n     */\n    answerCallbackQuery(callback_query_id, other, signal) {\n        return this.raw.answerCallbackQuery({ callback_query_id, ...other }, signal);\n    }\n    /**\n     * Use this method to change the bot's name. Returns True on success.\n     *\n     * @param name New bot name; 0-64 characters. Pass an empty string to remove the dedicated name for the given language.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setmyname\n     */\n    setMyName(name, other, signal) {\n        return this.raw.setMyName({ name, ...other }, signal);\n    }\n    /**\n     * Use this method to get the current bot name for the given user language. Returns BotName on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getmyname\n     */\n    getMyName(other, signal) {\n        return this.raw.getMyName(other !== null && other !== void 0 ? other : {}, signal);\n    }\n    /**\n     * Use this method to change the list of the bot's commands. See https://core.telegram.org/bots/features#commands for more details about bot commands. Returns True on success.\n     *\n     * @param commands A list of bot commands to be set as the list of the bot's commands. At most 100 commands can be specified.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setmycommands\n     */\n    setMyCommands(commands, other, signal) {\n        return this.raw.setMyCommands({ commands, ...other }, signal);\n    }\n    /**\n     * Use this method to delete the list of the bot's commands for the given scope and user language. After deletion, higher level commands will be shown to affected users. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletemycommands\n     */\n    deleteMyCommands(other, signal) {\n        return this.raw.deleteMyCommands({ ...other }, signal);\n    }\n    /**\n     * Use this method to get the current list of the bot's commands for the given scope and user language. Returns an Array of BotCommand objects. If commands aren't set, an empty list is returned.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getmycommands\n     */\n    getMyCommands(other, signal) {\n        return this.raw.getMyCommands({ ...other }, signal);\n    }\n    /**\n     * Use this method to change the bot's description, which is shown in the chat with the bot if the chat is empty. Returns True on success.\n     *\n     * @param description New bot description; 0-512 characters. Pass an empty string to remove the dedicated description for the given language.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setmydescription\n     */\n    setMyDescription(description, other, signal) {\n        return this.raw.setMyDescription({ description, ...other }, signal);\n    }\n    /**\n     * Use this method to get the current bot description for the given user language. Returns BotDescription on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getmydescription\n     */\n    getMyDescription(other, signal) {\n        return this.raw.getMyDescription({ ...other }, signal);\n    }\n    /**\n     * Use this method to change the bot's short description, which is shown on the bot's profile page and is sent together with the link when users share the bot. Returns True on success.\n     *\n     * @param short_description New short description for the bot; 0-120 characters. Pass an empty string to remove the dedicated short description for the given language.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setmyshortdescription\n     */\n    setMyShortDescription(short_description, other, signal) {\n        return this.raw.setMyShortDescription({ short_description, ...other }, signal);\n    }\n    /**\n     * Use this method to get the current bot short description for the given user language. Returns BotShortDescription on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getmyshortdescription\n     */\n    getMyShortDescription(other, signal) {\n        return this.raw.getMyShortDescription({ ...other }, signal);\n    }\n    /**\n     * Use this method to change the bot's menu button in a private chat, or the default menu button. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setchatmenubutton\n     */\n    setChatMenuButton(other, signal) {\n        return this.raw.setChatMenuButton({ ...other }, signal);\n    }\n    /**\n     * Use this method to get the current value of the bot's menu button in a private chat, or the default menu button. Returns MenuButton on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getchatmenubutton\n     */\n    getChatMenuButton(other, signal) {\n        return this.raw.getChatMenuButton({ ...other }, signal);\n    }\n    /**\n     * Use this method to the change the default administrator rights requested by the bot when it's added as an administrator to groups or channels. These rights will be suggested to users, but they are are free to modify the list before adding the bot. Returns True on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setmydefaultadministratorrights\n     */\n    setMyDefaultAdministratorRights(other, signal) {\n        return this.raw.setMyDefaultAdministratorRights({ ...other }, signal);\n    }\n    /**\n     * Use this method to get the current default administrator rights of the bot. Returns ChatAdministratorRights on success.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getmydefaultadministratorrights\n     */\n    getMyDefaultAdministratorRights(other, signal) {\n        return this.raw.getMyDefaultAdministratorRights({ ...other }, signal);\n    }\n    /**\n     * A method to get the current Telegram Stars balance of the bot. Requires no parameters. On success, returns a StarAmount object.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getmystarbalance\n     */\n    getMyStarBalance(signal) {\n        return this.raw.getMyStarBalance(signal);\n    }\n    /**\n     * Use this method to edit text and game messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of the message to edit\n     * @param text New text of the message, 1-4096 characters after entities parsing\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagetext\n     */\n    editMessageText(chat_id, message_id, text, other, signal) {\n        return this.raw.editMessageText({ chat_id, message_id, text, ...other }, signal);\n    }\n    /**\n     * Use this method to edit text and game inline messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param inline_message_id Identifier of the inline message\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagetext\n     */\n    editMessageTextInline(inline_message_id, text, other, signal) {\n        return this.raw.editMessageText({ inline_message_id, text, ...other }, signal);\n    }\n    /**\n     * Use this method to edit captions of messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of the message to edit\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagecaption\n     */\n    editMessageCaption(chat_id, message_id, other, signal) {\n        return this.raw.editMessageCaption({ chat_id, message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to edit captions of inline messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param inline_message_id Identifier of the inline message\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagecaption\n     */\n    editMessageCaptionInline(inline_message_id, other, signal) {\n        return this.raw.editMessageCaption({ inline_message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to edit animation, audio, document, photo, or video messages, or to add media to text messages. If a message is part of a message album, then it can be edited only to an audio for audio albums, only to a document for document albums and to a photo or a video otherwise. When an inline message is edited, a new file can't be uploaded; use a previously uploaded file via its file_id or specify a URL. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of the message to edit\n     * @param media An object for a new media content of the message\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagemedia\n     */\n    editMessageMedia(chat_id, message_id, media, other, signal) {\n        return this.raw.editMessageMedia({ chat_id, message_id, media, ...other }, signal);\n    }\n    /**\n     * Use this method to edit animation, audio, document, photo, or video inline messages, or to add media to text inline messages. If a message is part of a message album, then it can be edited only to an audio for audio albums, only to a document for document albums and to a photo or a video otherwise. When an inline message is edited, a new file can't be uploaded; use a previously uploaded file via its file_id or specify a URL. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param inline_message_id Identifier of the inline message\n     * @param media An object for a new media content of the message\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagemedia\n     */\n    editMessageMediaInline(inline_message_id, media, other, signal) {\n        return this.raw.editMessageMedia({ inline_message_id, media, ...other }, signal);\n    }\n    /**\n     * Use this method to edit only the reply markup of messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of the message to edit\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagereplymarkup\n     */\n    editMessageReplyMarkup(chat_id, message_id, other, signal) {\n        return this.raw.editMessageReplyMarkup({ chat_id, message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to edit only the reply markup of inline messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n     *\n     * @param inline_message_id Identifier of the inline message\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editmessagereplymarkup\n     */\n    editMessageReplyMarkupInline(inline_message_id, other, signal) {\n        return this.raw.editMessageReplyMarkup({ inline_message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to stop a poll which was sent by the bot. On success, the stopped Poll is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of the original message with the poll\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#stoppoll\n     */\n    stopPoll(chat_id, message_id, other, signal) {\n        return this.raw.stopPoll({ chat_id, message_id, ...other }, signal);\n    }\n    /**\n     * Use this method to delete a message, including service messages, with the following limitations:\n     * - A message can only be deleted if it was sent less than 48 hours ago.\n     * - A dice message in a private chat can only be deleted if it was sent more than 24 hours ago.\n     * - Bots can delete outgoing messages in private chats, groups, and supergroups.\n     * - Bots can delete incoming messages in private chats.\n     * - Bots granted can_post_messages permissions can delete outgoing messages in channels.\n     * - If the bot is an administrator of a group, it can delete any message there.\n     * - If the bot has can_delete_messages permission in a supergroup or a channel, it can delete any message there.\n     * Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_id Identifier of the message to delete\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletemessage\n     */\n    deleteMessage(chat_id, message_id, signal) {\n        return this.raw.deleteMessage({ chat_id, message_id }, signal);\n    }\n    /**\n     * Use this method to delete multiple messages simultaneously. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param message_ids A list of 1-100 identifiers of messages to delete. See deleteMessage for limitations on which messages can be deleted\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletemessages\n     */\n    deleteMessages(chat_id, message_ids, signal) {\n        return this.raw.deleteMessages({ chat_id, message_ids }, signal);\n    }\n    /**\n     * Delete messages on behalf of a business account. Requires the can_delete_outgoing_messages business bot right to delete messages sent by the bot itself, or the can_delete_all_messages business bot right to delete any message. Returns True on success.\n     *\n     *     @param business_connection_id Unique identifier of the business connection on behalf of which to delete the messages\n     *     @param message_ids A list of 1-100 identifiers of messages to delete. All messages must be from the same chat. See deleteMessage for limitations on which messages can be deleted\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletebusinessmessages\n     */\n    deleteBusinessMessages(business_connection_id, message_ids, signal) {\n        return this.raw.deleteBusinessMessages({ business_connection_id, message_ids }, signal);\n    }\n    /**\n     * Changes the first and last name of a managed business account. Requires the can_change_name business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param first_name The new value of the first name for the business account; 1-64 characters\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountname\n     */\n    setBusinessAccountName(business_connection_id, first_name, other, signal) {\n        return this.raw.setBusinessAccountName({ business_connection_id, first_name, ...other }, signal);\n    }\n    /**\n     * Changes the username of a managed business account. Requires the can_change_username business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection *\n     * @param username The new value of the username for the business account; 0-32 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountusername\n     */\n    setBusinessAccountUsername(business_connection_id, username, signal) {\n        return this.raw.setBusinessAccountUsername({ business_connection_id, username }, signal);\n    }\n    /**\n     * Changes the bio of a managed business account. Requires the can_change_bio business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param bio The new value of the bio for the business account; 0-140 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountbio\n     */\n    setBusinessAccountBio(business_connection_id, bio, signal) {\n        return this.raw.setBusinessAccountBio({ business_connection_id, bio }, signal);\n    }\n    /**\n     * Changes the profile photo of a managed business account. Requires the can_edit_profile_photo business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param photo The new profile photo to set\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountprofilephoto\n     */\n    setBusinessAccountProfilePhoto(business_connection_id, photo, other, signal) {\n        return this.raw.setBusinessAccountProfilePhoto({ business_connection_id, photo, ...other }, signal);\n    }\n    /**\n     * Removes the current profile photo of a managed business account. Requires the can_edit_profile_photo business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#removebusinessaccountprofilephoto\n     */\n    removeBusinessAccountProfilePhoto(business_connection_id, other, signal) {\n        return this.raw.removeBusinessAccountProfilePhoto({ business_connection_id, ...other }, signal);\n    }\n    /**\n     * Changes the privacy settings pertaining to incoming gifts in a managed business account. Requires the can_change_gift_settings business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param show_gift_button Pass True, if a button for sending a gift to the user or by the business account must always be shown in the input field\n     * @param accepted_gift_types Types of gifts accepted by the business account\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setbusinessaccountgiftsettings\n     */\n    setBusinessAccountGiftSettings(business_connection_id, show_gift_button, accepted_gift_types, signal) {\n        return this.raw.setBusinessAccountGiftSettings({ business_connection_id, show_gift_button, accepted_gift_types }, signal);\n    }\n    /**\n     * Returns the amount of Telegram Stars owned by a managed business account. Requires the can_view_gifts_and_stars business bot right. Returns StarAmount on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getbusinessaccountstarbalance\n     */\n    getBusinessAccountStarBalance(business_connection_id, signal) {\n        return this.raw.getBusinessAccountStarBalance({ business_connection_id }, signal);\n    }\n    /**\n     * Transfers Telegram Stars from the business account balance to the bot's balance. Requires the can_transfer_stars business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param star_count Number of Telegram Stars to transfer; 1-10000\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#transferbusinessaccountstars\n     */\n    transferBusinessAccountStars(business_connection_id, star_count, signal) {\n        return this.raw.transferBusinessAccountStars({ business_connection_id, star_count }, signal);\n    }\n    /**\n     * Returns the gifts received and owned by a managed business account. Requires the can_view_gifts_and_stars business bot right. Returns OwnedGifts on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getbusinessaccountgifts\n     */\n    getBusinessAccountGifts(business_connection_id, other, signal) {\n        return this.raw.getBusinessAccountGifts({ business_connection_id, ...other }, signal);\n    }\n    /**\n     * Converts a given regular gift to Telegram Stars. Requires the can_convert_gifts_to_stars business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param owned_gift_id Unique identifier of the regular gift that should be converted to Telegram Stars\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#convertgifttostars\n     */\n    convertGiftToStars(business_connection_id, owned_gift_id, signal) {\n        return this.raw.convertGiftToStars({ business_connection_id, owned_gift_id }, signal);\n    }\n    /**\n     * Upgrades a given regular gift to a unique gift. Requires the can_transfer_and_upgrade_gifts business bot right. Additionally requires the can_transfer_stars business bot right if the upgrade is paid. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param owned_gift_id Unique identifier of the regular gift that should be upgraded to a unique one\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#upgradegift\n     */\n    upgradeGift(business_connection_id, owned_gift_id, other, signal) {\n        return this.raw.upgradeGift({ business_connection_id, owned_gift_id, ...other }, signal);\n    }\n    /**\n     * Transfers an owned unique gift to another user. Requires the can_transfer_and_upgrade_gifts business bot right. Requires can_transfer_stars business bot right if the transfer is paid. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param owned_gift_id Unique identifier of the regular gift that should be transferred\n     * @param new_owner_chat_id Unique identifier of the chat which will own the gift. The chat must be active in the last 24 hours.\n     * @param star_count The amount of Telegram Stars that will be paid for the transfer from the business account balance. If positive, then the can_transfer_stars business bot right is required.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#transfergift\n     */\n    transferGift(business_connection_id, owned_gift_id, new_owner_chat_id, star_count, signal) {\n        return this.raw.transferGift({\n            business_connection_id,\n            owned_gift_id,\n            new_owner_chat_id,\n            star_count,\n        }, signal);\n    }\n    /**\n     * Posts a story on behalf of a managed business account. Requires the can_manage_stories business bot right. Returns Story on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param content Content of the story\n     * @param active_period Period after which the story is moved to the archive, in seconds; must be one of 6 * 3600, 12 * 3600, 86400, or 2 * 86400\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#poststory\n     */\n    postStory(business_connection_id, content, active_period, other, signal) {\n        return this.raw.postStory({ business_connection_id, content, active_period, ...other }, signal);\n    }\n    /**\n     * Edits a story previously posted by the bot on behalf of a managed business account. Requires the can_manage_stories business bot right. Returns Story on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param story_id Unique identifier of the story to edit\n     * @param content Content of the story\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#editstory\n     */\n    editStory(business_connection_id, story_id, content, other, signal) {\n        return this.raw.editStory({ business_connection_id, story_id, content, ...other }, signal);\n    }\n    /**\n     * Deletes a story previously posted by the bot on behalf of a managed business account. Requires the can_manage_stories business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection\n     * @param story_id Unique identifier of the story to delete\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletestory\n     */\n    deleteStory(business_connection_id, story_id, signal) {\n        return this.raw.deleteStory({ business_connection_id, story_id }, signal);\n    }\n    /**\n     * Use this method to send static .WEBP, animated .TGS, or video .WEBM stickers. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param sticker Sticker to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a .WEBP sticker from the Internet, or upload a new .WEBP, .TGS, or .WEBM sticker using multipart/form-data. Video and animated stickers can't be sent via an HTTP URL.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendsticker\n     */\n    sendSticker(chat_id, sticker, other, signal) {\n        return this.raw.sendSticker({ chat_id, sticker, ...other }, signal);\n    }\n    /**\n     * Use this method to get a sticker set. On success, a StickerSet object is returned.\n     *\n     * @param name Name of the sticker set\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getstickerset\n     */\n    getStickerSet(name, signal) {\n        return this.raw.getStickerSet({ name }, signal);\n    }\n    /**\n     * Use this method to get information about custom emoji stickers by their identifiers. Returns an Array of Sticker objects.\n     *\n     * @param custom_emoji_ids A list of custom emoji identifiers\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getcustomemojistickers\n     */\n    getCustomEmojiStickers(custom_emoji_ids, signal) {\n        return this.raw.getCustomEmojiStickers({ custom_emoji_ids }, signal);\n    }\n    /**\n     * Use this method to upload a file with a sticker for later use in the createNewStickerSet, addStickerToSet, or replaceStickerInSet methods (the file can be used multiple times). Returns the uploaded File on success.\n     *\n     * @param user_id User identifier of sticker file owner\n     * @param sticker_format Format of the sticker, must be one of “static”, “animated”, “video”\n     * @param sticker A file with the sticker in .WEBP, .PNG, .TGS, or .WEBM format. See https://core.telegram.org/stickers for technical requirements.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#uploadstickerfile\n     */\n    uploadStickerFile(user_id, sticker_format, sticker, signal) {\n        return this.raw.uploadStickerFile({ user_id, sticker_format, sticker }, signal);\n    }\n    /**\n     * Use this method to create a new sticker set owned by a user. The bot will be able to edit the sticker set thus created. Returns True on success.\n     *\n     * @param user_id User identifier of created sticker set owner\n     * @param name Short name of sticker set, to be used in t.me/addstickers/ URLs (e.g., animals). Can contain only English letters, digits and underscores. Must begin with a letter, can't contain consecutive underscores and must end in `_by_<bot_username>`. `<bot_username>` is case insensitive. 1-64 characters.\n     * @param title Sticker set title, 1-64 characters\n     * @param stickers A list of 1-50 initial stickers to be added to the sticker set\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#createnewstickerset\n     */\n    createNewStickerSet(user_id, name, title, stickers, other, signal) {\n        return this.raw.createNewStickerSet({ user_id, name, title, stickers, ...other }, signal);\n    }\n    /**\n     * Use this method to add a new sticker to a set created by the bot. The format of the added sticker must match the format of the other stickers in the set. Emoji sticker sets can have up to 200 stickers. Animated and video sticker sets can have up to 50 stickers. Static sticker sets can have up to 120 stickers. Returns True on success.\n     *\n     * @param user_id User identifier of sticker set owner\n     * @param name Sticker set name\n     * @param sticker An object with information about the added sticker. If exactly the same sticker had already been added to the set, then the set isn't changed.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#addstickertoset\n     */\n    addStickerToSet(user_id, name, sticker, signal) {\n        return this.raw.addStickerToSet({ user_id, name, sticker }, signal);\n    }\n    /**\n     * Use this method to move a sticker in a set created by the bot to a specific position. Returns True on success.\n     *\n     * @param sticker File identifier of the sticker\n     * @param position New sticker position in the set, zero-based\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setstickerpositioninset\n     */\n    setStickerPositionInSet(sticker, position, signal) {\n        return this.raw.setStickerPositionInSet({ sticker, position }, signal);\n    }\n    /**\n     * Use this method to delete a sticker from a set created by the bot. Returns True on success.\n     *\n     * @param sticker File identifier of the sticker\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletestickerfromset\n     */\n    deleteStickerFromSet(sticker, signal) {\n        return this.raw.deleteStickerFromSet({ sticker }, signal);\n    }\n    /**\n     * Use this method to replace an existing sticker in a sticker set with a new one. The method is equivalent to calling deleteStickerFromSet, then addStickerToSet, then setStickerPositionInSet. Returns True on success.\n     *\n     * @param user_id User identifier of the sticker set owner\n     * @param name Sticker set name\n     * @param old_sticker File identifier of the replaced sticker\n     * @param sticker An object with information about the added sticker. If exactly the same sticker had already been added to the set, then the set remains unchanged.:x\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#replacestickerinset\n     */\n    replaceStickerInSet(user_id, name, old_sticker, sticker, signal) {\n        return this.raw.replaceStickerInSet({ user_id, name, old_sticker, sticker }, signal);\n    }\n    /**\n     * Use this method to change the list of emoji assigned to a regular or custom emoji sticker. The sticker must belong to a sticker set created by the bot. Returns True on success.\n     *\n     * @param sticker File identifier of the sticker\n     * @param emoji_list A list of 1-20 emoji associated with the sticker\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setstickeremojilist\n     */\n    setStickerEmojiList(sticker, emoji_list, signal) {\n        return this.raw.setStickerEmojiList({ sticker, emoji_list }, signal);\n    }\n    /**\n     * Use this method to change search keywords assigned to a regular or custom emoji sticker. The sticker must belong to a sticker set created by the bot. Returns True on success.\n     *\n     * @param sticker File identifier of the sticker\n     * @param keywords A list of 0-20 search keywords for the sticker with total length of up to 64 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setstickerkeywords\n     */\n    setStickerKeywords(sticker, keywords, signal) {\n        return this.raw.setStickerKeywords({ sticker, keywords }, signal);\n    }\n    /**\n     * Use this method to change the mask position of a mask sticker. The sticker must belong to a sticker set that was created by the bot. Returns True on success.\n     *\n     * @param sticker File identifier of the sticker\n     * @param mask_position An object with the position where the mask should be placed on faces. Omit the parameter to remove the mask position.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setstickermaskposition\n     */\n    setStickerMaskPosition(sticker, mask_position, signal) {\n        return this.raw.setStickerMaskPosition({ sticker, mask_position }, signal);\n    }\n    /**\n     * Use this method to set the title of a created sticker set. Returns True on success.\n     *\n     * @param name Sticker set name\n     * @param title Sticker set title, 1-64 characters\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setstickersettitle\n     */\n    setStickerSetTitle(name, title, signal) {\n        return this.raw.setStickerSetTitle({ name, title }, signal);\n    }\n    /**\n     * Use this method to delete a sticker set that was created by the bot. Returns True on success.\n     *\n     * @param name Sticker set name\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#deletestickerset\n     */\n    deleteStickerSet(name, signal) {\n        return this.raw.deleteStickerSet({ name }, signal);\n    }\n    /**\n     * Use this method to set the thumbnail of a regular or mask sticker set. The format of the thumbnail file must match the format of the stickers in the set. Returns True on success.\n     *\n     * @param name Sticker set name\n     * @param user_id User identifier of the sticker set owner\n     * @param thumbnail A .WEBP or .PNG image with the thumbnail, must be up to 128 kilobytes in size and have a width and height of exactly 100px, or a .TGS animation with a thumbnail up to 32 kilobytes in size (see https://core.telegram.org/stickers#animated-sticker-requirements for animated sticker technical requirements), or a WEBM video with the thumbnail up to 32 kilobytes in size; see https://core.telegram.org/stickers#video-sticker-requirements for video sticker technical requirements. Pass a file_id as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More information on Sending Files ». Animated and video sticker set thumbnails can't be uploaded via HTTP URL. If omitted, then the thumbnail is dropped and the first sticker is used as the thumbnail.\n     * @param format Format of the thumbnail, must be one of “static” for a .WEBP or .PNG image, “animated” for a .TGS animation, or “video” for a WEBM video\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setstickersetthumbnail\n     */\n    setStickerSetThumbnail(name, user_id, thumbnail, format, signal) {\n        return this.raw.setStickerSetThumbnail({ name, user_id, thumbnail, format }, signal);\n    }\n    /**\n     * Use this method to set the thumbnail of a custom emoji sticker set. Returns True on success.\n     *\n     * @param name Sticker set name\n     * @param custom_emoji_id Custom emoji identifier of a sticker from the sticker set; pass an empty string to drop the thumbnail and use the first sticker as the thumbnail.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setcustomemojistickersetthumbnail\n     */\n    setCustomEmojiStickerSetThumbnail(name, custom_emoji_id, signal) {\n        return this.raw.setCustomEmojiStickerSetThumbnail({\n            name,\n            custom_emoji_id,\n        }, signal);\n    }\n    /**\n     * Returns the list of gifts that can be sent by the bot to users and channel chats. Requires no parameters. Returns a Gifts object.\n     *\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getavailablegifts\n     */\n    getAvailableGifts(signal) {\n        return this.raw.getAvailableGifts(signal);\n    }\n    /**\n     * Sends a gift to the given user. The gift can't be converted to Telegram Stars by the receiver. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user who will receive the gift\n     * @param gift_id Identifier of the gift\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendgift\n     */\n    sendGift(user_id, gift_id, other, signal) {\n        return this.raw.sendGift({ user_id, gift_id, ...other }, signal);\n    }\n    /**\n     * Gifts a Telegram Premium subscription to the given user. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user who will receive a Telegram Premium subscription\n     * @param month_count Number of months the Telegram Premium subscription will be active for the user; must be one of 3, 6, or 12\n     * @param star_count Number of Telegram Stars to pay for the Telegram Premium subscription; must be 1000 for 3 months, 1500 for 6 months, and 2500 for 12 months\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#giftpremiumsubscription\n     */\n    giftPremiumSubscription(user_id, month_count, star_count, other, signal) {\n        return this.raw.giftPremiumSubscription({ user_id, month_count, star_count, ...other }, signal);\n    }\n    /**\n     * Sends a gift to the given channel chat. The gift can't be converted to Telegram Stars by the receiver. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the chat or username of the channel (in the format @channelusername) that will receive the gift\n     * @param gift_id Identifier of the gift\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendgift\n     */\n    sendGiftToChannel(chat_id, gift_id, other, signal) {\n        return this.raw.sendGift({ chat_id, gift_id, ...other }, signal);\n    }\n    /**\n     * Use this method to send answers to an inline query. On success, True is returned.\n     * No more than 50 results per query are allowed.\n     *\n     * Example: An inline bot that sends YouTube videos can ask the user to connect the bot to their YouTube account to adapt search results accordingly. To do this, it displays a 'Connect your YouTube account' button above the results, or even before showing any. The user presses the button, switches to a private chat with the bot and, in doing so, passes a start parameter that instructs the bot to return an OAuth link. Once done, the bot can offer a switch_inline button so that the user can easily return to the chat where they wanted to use the bot's inline capabilities.\n     *\n     * @param inline_query_id Unique identifier for the answered query\n     * @param results An array of results for the inline query\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#answerinlinequery\n     */\n    answerInlineQuery(inline_query_id, results, other, signal) {\n        return this.raw.answerInlineQuery({ inline_query_id, results, ...other }, signal);\n    }\n    /**\n     * Use this method to set the result of an interaction with a Web App and send a corresponding message on behalf of the user to the chat from which the query originated. On success, a SentWebAppMessage object is returned.\n     *\n     * @param web_app_query_id Unique identifier for the query to be answered\n     * @param result An object describing the message to be sent\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#answerwebappquery\n     */\n    answerWebAppQuery(web_app_query_id, result, signal) {\n        return this.raw.answerWebAppQuery({ web_app_query_id, result }, signal);\n    }\n    /**\n     * Stores a message that can be sent by a user of a Mini App. Returns a PreparedInlineMessage object.\n     *\n     * @param user_id Unique identifier of the target user that can use the prepared message\n     * @param result An object describing the message to be sent\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#savepreparedinlinemessage\n     */\n    savePreparedInlineMessage(user_id, result, other, signal) {\n        return this.raw.savePreparedInlineMessage({ user_id, result, ...other }, signal);\n    }\n    /**\n     * Use this method to send invoices. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param title Product name, 1-32 characters\n     * @param description Product description, 1-255 characters\n     * @param payload Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.\n     * @param currency Three-letter ISO 4217 currency code, see more on currencies\n     * @param prices Price breakdown, a list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendinvoice\n     */\n    sendInvoice(chat_id, title, description, payload, currency, prices, other, signal) {\n        return this.raw.sendInvoice({\n            chat_id,\n            title,\n            description,\n            payload,\n            currency,\n            prices,\n            ...other,\n        }, signal);\n    }\n    /**\n     * Use this method to create a link for an invoice. Returns the created invoice link as String on success.\n     *\n     * @param title Product name, 1-32 characters\n     * @param description Product description, 1-255 characters\n     * @param payload Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.\n     * @param provider_token Payment provider token, obtained via BotFather\n     * @param currency Three-letter ISO 4217 currency code, see more on currencies\n     * @param prices Price breakdown, a list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#createinvoicelink\n     */\n    createInvoiceLink(title, description, payload, provider_token, currency, prices, other, signal) {\n        return this.raw.createInvoiceLink({\n            title,\n            description,\n            payload,\n            provider_token,\n            currency,\n            prices,\n            ...other,\n        }, signal);\n    }\n    /**\n     * If you sent an invoice requesting a shipping address and the parameter is_flexible was specified, the Bot API will send an Update with a shipping_query field to the bot. Use this method to reply to shipping queries. On success, True is returned.\n     *\n     * @param shipping_query_id Unique identifier for the query to be answered\n     * @param ok Pass True if delivery to the specified address is possible and False if there are any problems (for example, if delivery to the specified address is not possible)\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#answershippingquery\n     */\n    answerShippingQuery(shipping_query_id, ok, other, signal) {\n        return this.raw.answerShippingQuery({ shipping_query_id, ok, ...other }, signal);\n    }\n    /**\n     * Once the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an Update with the field pre_checkout_query. Use this method to respond to such pre-checkout queries. On success, True is returned. Note: The Bot API must receive an answer within 10 seconds after the pre-checkout query was sent.\n     *\n     * @param pre_checkout_query_id Unique identifier for the query to be answered\n     * @param ok Specify True if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order. Use False if there are any problems.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#answerprecheckoutquery\n     */\n    answerPreCheckoutQuery(pre_checkout_query_id, ok, other, signal) {\n        return this.raw.answerPreCheckoutQuery({ pre_checkout_query_id, ok, ...other }, signal);\n    }\n    /**\n     * Returns the bot's Telegram Star transactions in chronological order. On success, returns a StarTransactions object.\n     *\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getstartransactions\n     */\n    getStarTransactions(other, signal) {\n        return this.raw.getStarTransactions({ ...other }, signal);\n    }\n    /**\n     * Refunds a successful payment in Telegram Stars.\n     *\n     * @param user_id Identifier of the user whose payment will be refunded\n     * @param telegram_payment_charge_id Telegram payment identifier\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#refundstarpayment\n     */\n    refundStarPayment(user_id, telegram_payment_charge_id, signal) {\n        return this.raw.refundStarPayment({ user_id, telegram_payment_charge_id }, signal);\n    }\n    /**\n     * Allows the bot to cancel or re-enable extension of a subscription paid in Telegram Stars. Returns True on success.\n     *\n     * @param user_id Identifier of the user whose subscription will be edited\n     * @param telegram_payment_charge_id Telegram payment identifier for the subscription\n     * @param is_canceled Pass True to cancel extension of the user subscription; the subscription must be active up to the end of the current subscription period. Pass False to allow the user to re-enable a subscription that was previously canceled by the bot.\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#edituserstarsubscription\n     */\n    editUserStarSubscription(user_id, telegram_payment_charge_id, is_canceled, signal) {\n        return this.raw.editUserStarSubscription({ user_id, telegram_payment_charge_id, is_canceled }, signal);\n    }\n    /**\n     * Verifies a user on behalf of the organization which is represented by the bot. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#verifyuser\n     */\n    verifyUser(user_id, other, signal) {\n        return this.raw.verifyUser({ user_id, ...other }, signal);\n    }\n    /**\n     * Verifies a chat on behalf of the organization which is represented by the bot. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#verifychat\n     */\n    verifyChat(chat_id, other, signal) {\n        return this.raw.verifyChat({ chat_id, ...other }, signal);\n    }\n    /**\n     * Removes verification from a user who is currently verified on behalf of the organization represented by the bot. Returns True on success.\n     *\n     * @param user_id Unique identifier of the target user\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#removeuserverification\n     */\n    removeUserVerification(user_id, signal) {\n        return this.raw.removeUserVerification({ user_id }, signal);\n    }\n    /**\n     * Removes verification from a chat that is currently verified on behalf of the organization represented by the bot. Returns True on success.\n     *\n     * @param chat_id Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#removechatverification\n     */\n    removeChatVerification(chat_id, signal) {\n        return this.raw.removeChatVerification({ chat_id }, signal);\n    }\n    /**\n     * Marks incoming message as read on behalf of a business account. Requires the can_read_messages business bot right. Returns True on success.\n     *\n     * @param business_connection_id Unique identifier of the business connection on behalf of which to read the message\n     * @param chat_id Unique identifier of the chat in which the message was received. The chat must have been active in the last 24 hours.\n     * @param message_id Unique identifier of the message to mark as read\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#readbusinessmessage\n     */\n    readBusinessMessage(business_connection_id, chat_id, message_id, signal) {\n        return this.raw.readBusinessMessage({ business_connection_id, chat_id, message_id }, signal);\n    }\n    /**\n     * Informs a user that some of the Telegram Passport elements they provided contains errors. The user will not be able to re-submit their Passport to you until the errors are fixed (the contents of the field for which you returned the error must change). Returns True on success.\n     *\n     * Use this if the data submitted by the user doesn't satisfy the standards your service requires for any reason. For example, if a birthday date seems invalid, a submitted document is blurry, a scan shows evidence of tampering, etc. Supply some details in the error message to make sure the user knows how to correct the issues.\n     *\n     * @param user_id User identifier\n     * @param errors An array describing the errors\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setpassportdataerrors\n     */\n    setPassportDataErrors(user_id, errors, signal) {\n        return this.raw.setPassportDataErrors({ user_id, errors }, signal);\n    }\n    /**\n     * Use this method to send a game. On success, the sent Message is returned.\n     *\n     * @param chat_id Unique identifier for the target chat\n     * @param game_short_name Short name of the game, serves as the unique identifier for the game. Set up your games via BotFather.\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#sendgame\n     */\n    sendGame(chat_id, game_short_name, other, signal) {\n        return this.raw.sendGame({ chat_id, game_short_name, ...other }, signal);\n    }\n    /**\n     * Use this method to set the score of the specified user in a game message. On success, if the message is not an inline message, the Message is returned, otherwise True is returned. Returns an error, if the new score is not greater than the user's current score in the chat and force is False.\n     *\n     * @param chat_id Unique identifier for the target chat\n     * @param message_id Identifier of the sent message\n     * @param user_id User identifier\n     * @param score New score, must be non-negative\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setgamescore\n     */\n    setGameScore(chat_id, message_id, user_id, score, other, signal) {\n        return this.raw.setGameScore({ chat_id, message_id, user_id, score, ...other }, signal);\n    }\n    /**\n     * Use this method to set the score of the specified user in a game message. On success, if the message is not an inline message, the Message is returned, otherwise True is returned. Returns an error, if the new score is not greater than the user's current score in the chat and force is False.\n     *\n     * @param inline_message_id Identifier of the inline message\n     * @param user_id User identifier\n     * @param score New score, must be non-negative\n     * @param other Optional remaining parameters, confer the official reference below\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#setgamescore\n     */\n    setGameScoreInline(inline_message_id, user_id, score, other, signal) {\n        return this.raw.setGameScore({ inline_message_id, user_id, score, ...other }, signal);\n    }\n    /**\n     * Use this method to get data for high score tables. Will return the score of the specified user and several of their neighbors in a game. Returns an Array of GameHighScore objects.\n     *\n     * This method will currently return scores for the target user, plus two of their closest neighbors on each side. Will also return the top three users if the user and his neighbors are not among them. Please note that this behavior is subject to change.\n     *\n     * @param chat_id Unique identifier for the target chat\n     * @param message_id Identifier of the sent message\n     * @param user_id Target user id\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getgamehighscores\n     */\n    getGameHighScores(chat_id, message_id, user_id, signal) {\n        return this.raw.getGameHighScores({ chat_id, message_id, user_id }, signal);\n    }\n    /**\n     * Use this method to get data for high score tables. Will return the score of the specified user and several of their neighbors in an inline game. On success, returns an Array of GameHighScore objects.\n     *\n     * This method will currently return scores for the target user, plus two of their closest neighbors on each side. Will also return the top three users if the user and his neighbors are not among them. Please note that this behavior is subject to change.\n     *\n     * @param inline_message_id Identifier of the inline message\n     * @param user_id Target user id\n     * @param signal Optional `AbortSignal` to cancel the request\n     *\n     * **Official reference:** https://core.telegram.org/bots/api#getgamehighscores\n     */\n    getGameHighScoresInline(inline_message_id, user_id, signal) {\n        return this.raw.getGameHighScores({ inline_message_id, user_id }, signal);\n    }\n}\nexports.Api = Api;\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bot = exports.BotError = exports.DEFAULT_UPDATE_TYPES = void 0;\n// deno-lint-ignore-file camelcase\nconst composer_js_1 = require(\"./composer.js\");\nObject.defineProperty(exports, \"BotError\", { enumerable: true, get: function () { return composer_js_1.BotError; } });\nconst context_js_1 = require(\"./context.js\");\nconst api_js_1 = require(\"./core/api.js\");\nconst error_js_1 = require(\"./core/error.js\");\nconst filter_js_1 = require(\"./filter.js\");\nconst platform_node_js_1 = require(\"./platform.node.js\");\nconst debug = (0, platform_node_js_1.debug)(\"grammy:bot\");\nconst debugWarn = (0, platform_node_js_1.debug)(\"grammy:warn\");\nconst debugErr = (0, platform_node_js_1.debug)(\"grammy:error\");\nexports.DEFAULT_UPDATE_TYPES = [\n    \"message\",\n    \"edited_message\",\n    \"channel_post\",\n    \"edited_channel_post\",\n    \"business_connection\",\n    \"business_message\",\n    \"edited_business_message\",\n    \"deleted_business_messages\",\n    \"inline_query\",\n    \"chosen_inline_result\",\n    \"callback_query\",\n    \"shipping_query\",\n    \"pre_checkout_query\",\n    \"poll\",\n    \"poll_answer\",\n    \"my_chat_member\",\n    \"chat_join_request\",\n    \"chat_boost\",\n    \"removed_chat_boost\",\n];\n/**\n * This is the single most important class of grammY. It represents your bot.\n *\n * First, you must create a bot by talking to @BotFather, check out\n * https://t.me/BotFather. Once it is ready, you obtain a secret token for your\n * bot. grammY will use that token to identify as your bot when talking to the\n * Telegram servers. Got the token? You are now ready to write some code and run\n * your bot!\n *\n * You should do three things to run your bot:\n * ```ts\n * // 1. Create a bot instance\n * const bot = new Bot('<secret-token>')\n * // 2. Listen for updates\n * bot.on('message:text', ctx => ctx.reply('You wrote: ' + ctx.message.text))\n * // 3. Launch it!\n * bot.start()\n * ```\n */\nclass Bot extends composer_js_1.Composer {\n    /**\n     * Creates a new Bot with the given token.\n     *\n     * Remember that you can listen for messages by calling\n     * ```ts\n     * bot.on('message', ctx => { ... })\n     * ```\n     * or similar methods.\n     *\n     * The simplest way to start your bot is via simple long polling:\n     * ```ts\n     * bot.start()\n     * ```\n     *\n     * @param token The bot's token as acquired from https://t.me/BotFather\n     * @param config Optional configuration properties for the bot\n     */\n    constructor(token, config) {\n        var _a;\n        super();\n        this.token = token;\n        this.pollingRunning = false;\n        this.lastTriedUpdateId = 0;\n        /** Used to log a warning if some update types are not in allowed_updates */\n        this.observedUpdateTypes = new Set();\n        /**\n         * Holds the bot's error handler that is invoked whenever middleware throws\n         * (rejects). If you set your own error handler via `bot.catch`, all that\n         * happens is that this variable is assigned.\n         */\n        this.errorHandler = async (err) => {\n            var _a, _b;\n            console.error(\"Error in middleware while handling update\", (_b = (_a = err.ctx) === null || _a === void 0 ? void 0 : _a.update) === null || _b === void 0 ? void 0 : _b.update_id, err.error);\n            console.error(\"No error handler was set!\");\n            console.error(\"Set your own error handler with `bot.catch = ...`\");\n            if (this.pollingRunning) {\n                console.error(\"Stopping bot\");\n                await this.stop();\n            }\n            throw err;\n        };\n        if (!token)\n            throw new Error(\"Empty token!\");\n        this.me = config === null || config === void 0 ? void 0 : config.botInfo;\n        this.clientConfig = config === null || config === void 0 ? void 0 : config.client;\n        this.ContextConstructor = (_a = config === null || config === void 0 ? void 0 : config.ContextConstructor) !== null && _a !== void 0 ? _a : context_js_1.Context;\n        this.api = new api_js_1.Api(token, this.clientConfig);\n    }\n    /**\n     * Information about the bot itself as retrieved from `api.getMe()`. Only\n     * available after the bot has been initialized via `await bot.init()`, or\n     * after the value has been set manually.\n     *\n     * Starting the bot will always perform the initialization automatically,\n     * unless a manual value is already set.\n     *\n     * Note that the recommended way to set a custom bot information object is\n     * to pass it to the configuration object of the `new Bot()` instantiation,\n     * rather than assigning this property.\n     */\n    set botInfo(botInfo) {\n        this.me = botInfo;\n    }\n    get botInfo() {\n        if (this.me === undefined) {\n            throw new Error(\"Bot information unavailable! Make sure to call `await bot.init()` before accessing `bot.botInfo`!\");\n        }\n        return this.me;\n    }\n    /**\n     * @inheritdoc\n     */\n    on(filter, ...middleware) {\n        for (const [u] of (0, filter_js_1.parse)(filter).flatMap(filter_js_1.preprocess)) {\n            this.observedUpdateTypes.add(u);\n        }\n        return super.on(filter, ...middleware);\n    }\n    /**\n     * @inheritdoc\n     */\n    reaction(reaction, ...middleware) {\n        this.observedUpdateTypes.add(\"message_reaction\");\n        return super.reaction(reaction, ...middleware);\n    }\n    /**\n     * Checks if the bot has been initialized. A bot is initialized if the bot\n     * information is set. The bot information can either be set automatically\n     * by calling `bot.init`, or manually through the bot constructor. Note that\n     * usually, initialization is done automatically and you do not have to care\n     * about this method.\n     *\n     * @returns true if the bot is initialized, and false otherwise\n     */\n    isInited() {\n        return this.me !== undefined;\n    }\n    /**\n     * Initializes the bot, i.e. fetches information about the bot itself. This\n     * method is called automatically, you usually don't have to call it\n     * manually.\n     *\n     * @param signal Optional `AbortSignal` to cancel the initialization\n     */\n    async init(signal) {\n        var _a;\n        if (!this.isInited()) {\n            debug(\"Initializing bot\");\n            (_a = this.mePromise) !== null && _a !== void 0 ? _a : (this.mePromise = withRetries(() => this.api.getMe(signal), signal));\n            let me;\n            try {\n                me = await this.mePromise;\n            }\n            finally {\n                this.mePromise = undefined;\n            }\n            if (this.me === undefined)\n                this.me = me;\n            else\n                debug(\"Bot info was set by now, will not overwrite\");\n        }\n        debug(`I am ${this.me.username}!`);\n    }\n    /**\n     * Internal. Do not call. Handles an update batch sequentially by supplying\n     * it one-by-one to the middleware. Handles middleware errors and stores the\n     * last update identifier that was being tried to handle.\n     *\n     * @param updates An array of updates to handle\n     */\n    async handleUpdates(updates) {\n        // handle updates sequentially (!)\n        for (const update of updates) {\n            this.lastTriedUpdateId = update.update_id;\n            try {\n                await this.handleUpdate(update);\n            }\n            catch (err) {\n                // should always be true\n                if (err instanceof composer_js_1.BotError) {\n                    await this.errorHandler(err);\n                }\n                else {\n                    console.error(\"FATAL: grammY unable to handle:\", err);\n                    throw err;\n                }\n            }\n        }\n    }\n    /**\n     * This is an internal method that you probably will not ever need to call.\n     * It is used whenever a new update arrives from the Telegram servers that\n     * your bot will handle.\n     *\n     * If you're writing a library on top of grammY, check out the\n     * [documentation](https://grammy.dev/plugins/runner) of the runner\n     * plugin for an example that uses this method.\n     *\n     * @param update An update from the Telegram Bot API\n     * @param webhookReplyEnvelope An optional webhook reply envelope\n     */\n    async handleUpdate(update, webhookReplyEnvelope) {\n        if (this.me === undefined) {\n            throw new Error(\"Bot not initialized! Either call `await bot.init()`, \\\nor directly set the `botInfo` option in the `Bot` constructor to specify \\\na known bot info object.\");\n        }\n        debug(`Processing update ${update.update_id}`);\n        // create API object\n        const api = new api_js_1.Api(this.token, this.clientConfig, webhookReplyEnvelope);\n        // configure it with the same transformers as bot.api\n        const t = this.api.config.installedTransformers();\n        if (t.length > 0)\n            api.config.use(...t);\n        // create context object\n        const ctx = new this.ContextConstructor(update, api, this.me);\n        try {\n            // run middleware stack\n            await (0, composer_js_1.run)(this.middleware(), ctx);\n        }\n        catch (err) {\n            debugErr(`Error in middleware for update ${update.update_id}`);\n            throw new composer_js_1.BotError(err, ctx);\n        }\n    }\n    /**\n     * Starts your bot using long polling.\n     *\n     * > This method returns a `Promise` that will never resolve except if your\n     * > bot is stopped. **You don't need to `await` the call to `bot.start`**,\n     * > but remember to catch potential errors by calling `bot.catch`.\n     * > Otherwise your bot will crash (and stop) if something goes wrong in\n     * > your code.\n     *\n     * This method effectively enters a loop that will repeatedly call\n     * `getUpdates` and run your middleware for every received update, allowing\n     * your bot to respond to messages.\n     *\n     * If your bot is already running, this method does nothing.\n     *\n     * **Note that this starts your bot using a very simple long polling\n     * implementation.** `bot.start` should only be used for small bots. While\n     * the rest of grammY was built to perform well even under extreme loads,\n     * simple long polling is not capable of scaling up in a similar fashion.\n     * You should switch over to using `@grammyjs/runner` if you are running a\n     * bot with high load.\n     *\n     * What exactly _high load_ means differs from bot to bot, but as a rule of\n     * thumb, simple long polling should not be processing more than ~5K\n     * messages every hour. Also, if your bot has long-running operations such\n     * as large file transfers that block the middleware from completing, this\n     * will impact the responsiveness negatively, so it makes sense to use the\n     * `@grammyjs/runner` package even if you receive much fewer messages. If\n     * you worry about how much load your bot can handle, check out the grammY\n     * [documentation](https://grammy.dev/advanced/scaling) about scaling\n     * up.\n     *\n     * @param options Options to use for simple long polling\n     */\n    async start(options) {\n        var _a, _b, _c;\n        // Perform setup\n        const setup = [];\n        if (!this.isInited()) {\n            setup.push(this.init((_a = this.pollingAbortController) === null || _a === void 0 ? void 0 : _a.signal));\n        }\n        if (this.pollingRunning) {\n            await Promise.all(setup);\n            debug(\"Simple long polling already running!\");\n            return;\n        }\n        this.pollingRunning = true;\n        this.pollingAbortController = new shim_node_js_1.AbortController();\n        try {\n            setup.push(withRetries(async () => {\n                var _a;\n                await this.api.deleteWebhook({\n                    drop_pending_updates: options === null || options === void 0 ? void 0 : options.drop_pending_updates,\n                }, (_a = this.pollingAbortController) === null || _a === void 0 ? void 0 : _a.signal);\n            }, (_b = this.pollingAbortController) === null || _b === void 0 ? void 0 : _b.signal));\n            await Promise.all(setup);\n            // All async ops of setup complete, run callback\n            await ((_c = options === null || options === void 0 ? void 0 : options.onStart) === null || _c === void 0 ? void 0 : _c.call(options, this.botInfo));\n        }\n        catch (err) {\n            this.pollingRunning = false;\n            this.pollingAbortController = undefined;\n            throw err;\n        }\n        // Bot was stopped during `onStart`\n        if (!this.pollingRunning)\n            return;\n        // Prevent common misuse that leads to missing updates\n        validateAllowedUpdates(this.observedUpdateTypes, options === null || options === void 0 ? void 0 : options.allowed_updates);\n        // Prevent common misuse that causes memory leak\n        this.use = noUseFunction;\n        // Start polling\n        debug(\"Starting simple long polling\");\n        await this.loop(options);\n        debug(\"Middleware is done running\");\n    }\n    /**\n     * Stops the bot from long polling.\n     *\n     * All middleware that is currently being executed may complete, but no\n     * further `getUpdates` calls will be performed. The current `getUpdates`\n     * request will be cancelled.\n     *\n     * In addition, this method will _confirm_ the last received update to the\n     * Telegram servers by calling `getUpdates` one last time with the latest\n     * offset value. If any updates are received in this call, they are\n     * discarded and will be fetched again when the bot starts up the next time.\n     * Confer the official documentation on confirming updates if you want to\n     * know more: https://core.telegram.org/bots/api#getupdates\n     *\n     * > Note that this method will not wait for the middleware stack to finish.\n     * > If you need to run code after all middleware is done, consider waiting\n     * > for the promise returned by `bot.start()` to resolve.\n     */\n    async stop() {\n        var _a;\n        if (this.pollingRunning) {\n            debug(\"Stopping bot, saving update offset\");\n            this.pollingRunning = false;\n            (_a = this.pollingAbortController) === null || _a === void 0 ? void 0 : _a.abort();\n            const offset = this.lastTriedUpdateId + 1;\n            await this.api.getUpdates({ offset, limit: 1 })\n                .finally(() => this.pollingAbortController = undefined);\n        }\n        else {\n            debug(\"Bot is not running!\");\n        }\n    }\n    /**\n     * Returns true if the bot is currently running via built-in long polling,\n     * and false otherwise.\n     *\n     * If this method returns true, it means that `bot.start()` has been called,\n     * and that the bot has neither crashed nor was it stopped via a call to\n     * `bot.stop()`. This also means that you cannot use this method to check if\n     * a webhook server is running, or if grammY runner was started.\n     *\n     * Note that this method will already begin to return true even before the\n     * call to `bot.start()` has completed its initialization phase (and hence\n     * before `bot.isInited()` returns true). By extension, this method\n     * returns true before `onStart` callback of `bot.start()` is invoked.\n     */\n    isRunning() {\n        return this.pollingRunning;\n    }\n    /**\n     * Sets the bots error handler that is used during long polling.\n     *\n     * You should call this method to set an error handler if you are using long\n     * polling, no matter whether you use `bot.start` or the `@grammyjs/runner`\n     * package to run your bot.\n     *\n     * Calling `bot.catch` when using other means of running your bot (or\n     * webhooks) has no effect.\n     *\n     * @param errorHandler A function that handles potential middleware errors\n     */\n    catch(errorHandler) {\n        this.errorHandler = errorHandler;\n    }\n    /**\n     * Internal. Do not call. Enters a loop that will perform long polling until\n     * the bot is stopped.\n     */\n    async loop(options) {\n        var _a, _b;\n        const limit = options === null || options === void 0 ? void 0 : options.limit;\n        const timeout = (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : 30; // seconds\n        let allowed_updates = (_b = options === null || options === void 0 ? void 0 : options.allowed_updates) !== null && _b !== void 0 ? _b : []; // reset to default if unspecified\n        try {\n            while (this.pollingRunning) {\n                // fetch updates\n                const updates = await this.fetchUpdates({ limit, timeout, allowed_updates });\n                // check if polling stopped\n                if (updates === undefined)\n                    break;\n                // handle updates\n                await this.handleUpdates(updates);\n                // Telegram uses the last setting if `allowed_updates` is omitted so\n                // we can save some traffic by only sending it in the first request\n                allowed_updates = undefined;\n            }\n        }\n        finally {\n            this.pollingRunning = false;\n        }\n    }\n    /**\n     * Internal. Do not call. Reliably fetches an update batch via `getUpdates`.\n     * Handles all known errors. Returns `undefined` if the bot is stopped and\n     * the call gets cancelled.\n     *\n     * @param options Polling options\n     * @returns An array of updates, or `undefined` if the bot is stopped.\n     */\n    async fetchUpdates({ limit, timeout, allowed_updates }) {\n        var _a;\n        const offset = this.lastTriedUpdateId + 1;\n        let updates = undefined;\n        do {\n            try {\n                updates = await this.api.getUpdates({ offset, limit, timeout, allowed_updates }, (_a = this.pollingAbortController) === null || _a === void 0 ? void 0 : _a.signal);\n            }\n            catch (error) {\n                await this.handlePollingError(error);\n            }\n        } while (updates === undefined && this.pollingRunning);\n        return updates;\n    }\n    /**\n     * Internal. Do not call. Handles an error that occurred during long\n     * polling.\n     */\n    async handlePollingError(error) {\n        var _a;\n        if (!this.pollingRunning) {\n            debug(\"Pending getUpdates request cancelled\");\n            return;\n        }\n        let sleepSeconds = 3;\n        if (error instanceof error_js_1.GrammyError) {\n            debugErr(error.message);\n            // rethrow upon unauthorized or conflict\n            if (error.error_code === 401 || error.error_code === 409) {\n                throw error;\n            }\n            else if (error.error_code === 429) {\n                debugErr(\"Bot API server is closing.\");\n                sleepSeconds = (_a = error.parameters.retry_after) !== null && _a !== void 0 ? _a : sleepSeconds;\n            }\n        }\n        else\n            debugErr(error);\n        debugErr(`Call to getUpdates failed, retrying in ${sleepSeconds} seconds ...`);\n        await sleep(sleepSeconds);\n    }\n}\nexports.Bot = Bot;\n/**\n * Performs a network call task, retrying upon known errors until success.\n *\n * If the task errors and a retry_after value can be used, a subsequent retry\n * will be delayed by the specified period of time.\n *\n * Otherwise, if the first attempt at running the task fails, the task is\n * retried immediately. If second attempt fails, too, waits for 100 ms, and then\n * doubles this delay for every subsequent attempt. Never waits longer than 1\n * hour before retrying.\n *\n * @param task Async task to perform\n * @param signal Optional `AbortSignal` to prevent further retries\n */\nasync function withRetries(task, signal) {\n    // Set up delays between retries\n    const INITIAL_DELAY = 50; // ms\n    let lastDelay = INITIAL_DELAY;\n    // Define error handler\n    /**\n     * Determines the error handling strategy based on various error types.\n     * Sleeps if necessary, and returns whether to retry or rethrow an error.\n     */\n    async function handleError(error) {\n        let delay = false;\n        let strategy = \"rethrow\";\n        if (error instanceof error_js_1.HttpError) {\n            delay = true;\n            strategy = \"retry\";\n        }\n        else if (error instanceof error_js_1.GrammyError) {\n            if (error.error_code >= 500) {\n                delay = true;\n                strategy = \"retry\";\n            }\n            else if (error.error_code === 429) {\n                const retryAfter = error.parameters.retry_after;\n                if (typeof retryAfter === \"number\") {\n                    // ignore the backoff for sleep, then reset it\n                    await sleep(retryAfter, signal);\n                    lastDelay = INITIAL_DELAY;\n                }\n                else {\n                    delay = true;\n                }\n                strategy = \"retry\";\n            }\n        }\n        if (delay) {\n            // Do not sleep for the first retry\n            if (lastDelay !== INITIAL_DELAY) {\n                await sleep(lastDelay, signal);\n            }\n            const TWENTY_MINUTES = 20 * 60 * 1000; // ms\n            lastDelay = Math.min(TWENTY_MINUTES, 2 * lastDelay);\n        }\n        return strategy;\n    }\n    // Perform the actual task with retries\n    let result = { ok: false };\n    while (!result.ok) {\n        try {\n            result = { ok: true, value: await task() };\n        }\n        catch (error) {\n            debugErr(error);\n            const strategy = await handleError(error);\n            switch (strategy) {\n                case \"retry\":\n                    continue;\n                case \"rethrow\":\n                    throw error;\n            }\n        }\n    }\n    return result.value;\n}\n/**\n * Returns a new promise that resolves after the specified number of seconds, or\n * rejects as soon as the given signal is aborted.\n */\nasync function sleep(seconds, signal) {\n    let handle;\n    let reject;\n    function abort() {\n        reject === null || reject === void 0 ? void 0 : reject(new Error(\"Aborted delay\"));\n        if (handle !== undefined)\n            clearTimeout(handle);\n    }\n    try {\n        await new Promise((res, rej) => {\n            reject = rej;\n            if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n                abort();\n                return;\n            }\n            signal === null || signal === void 0 ? void 0 : signal.addEventListener(\"abort\", abort);\n            handle = setTimeout(res, 1000 * seconds);\n        });\n    }\n    finally {\n        signal === null || signal === void 0 ? void 0 : signal.removeEventListener(\"abort\", abort);\n    }\n}\n/**\n * Takes a set of observed update types and a list of allowed updates and logs a\n * warning in debug mode if some update types were observed that have not been\n * allowed.\n */\nfunction validateAllowedUpdates(updates, allowed = exports.DEFAULT_UPDATE_TYPES) {\n    const impossible = Array.from(updates).filter((u) => !allowed.includes(u));\n    if (impossible.length > 0) {\n        debugWarn(`You registered listeners for the following update types, \\\nbut you did not specify them in \\`allowed_updates\\` \\\nso they may not be received: ${impossible.map((u) => `'${u}'`).join(\", \")}`);\n    }\n}\nfunction noUseFunction() {\n    throw new Error(`It looks like you are registering more listeners \\\non your bot from within other listeners! This means that every time your bot \\\nhandles a message like this one, new listeners will be added. This list grows until \\\nyour machine crashes, so grammY throws this error to tell you that you should \\\nprobably do things a bit differently. If you're unsure how to resolve this problem, \\\nyou can ask in the group chat: https://telegram.me/grammyjs\n\nOn the other hand, if you actually know what you're doing and you do need to install \\\nfurther middleware while your bot is running, consider installing a composer \\\ninstance on your bot, and in turn augment the composer after the fact. This way, \\\nyou can circumvent this protection against memory leaks.`);\n}\nconst shim_node_js_1 = require(\"./shim.node.js\");\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API_CONSTANTS = void 0;\nconst bot_js_1 = require(\"../bot.js\");\nconst ALL_UPDATE_TYPES = [\n    ...bot_js_1.DEFAULT_UPDATE_TYPES,\n    \"chat_member\",\n    \"message_reaction\",\n    \"message_reaction_count\",\n];\nconst ALL_CHAT_PERMISSIONS = {\n    is_anonymous: true,\n    can_manage_chat: true,\n    can_delete_messages: true,\n    can_manage_video_chats: true,\n    can_restrict_members: true,\n    can_promote_members: true,\n    can_change_info: true,\n    can_invite_users: true,\n    can_post_stories: true,\n    can_edit_stories: true,\n    can_delete_stories: true,\n    can_post_messages: true,\n    can_edit_messages: true,\n    can_pin_messages: true,\n    can_manage_topics: true,\n};\n/**\n * A container for constants used in the Telegram Bot API. Currently holds all\n * available update types as well as all chat permissions.\n */\nexports.API_CONSTANTS = {\n    DEFAULT_UPDATE_TYPES: bot_js_1.DEFAULT_UPDATE_TYPES,\n    ALL_UPDATE_TYPES,\n    ALL_CHAT_PERMISSIONS,\n};\nObject.freeze(exports.API_CONSTANTS);\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineQueryResultBuilder = void 0;\nfunction inputMessage(queryTemplate) {\n    return {\n        ...queryTemplate,\n        ...inputMessageMethods(queryTemplate),\n    };\n}\nfunction inputMessageMethods(queryTemplate) {\n    return {\n        text(message_text, options = {}) {\n            const content = {\n                message_text,\n                ...options,\n            };\n            return { ...queryTemplate, input_message_content: content };\n        },\n        location(latitude, longitude, options = {}) {\n            const content = {\n                latitude,\n                longitude,\n                ...options,\n            };\n            return { ...queryTemplate, input_message_content: content };\n        },\n        venue(title, latitude, longitude, address, options) {\n            const content = {\n                title,\n                latitude,\n                longitude,\n                address,\n                ...options,\n            };\n            return { ...queryTemplate, input_message_content: content };\n        },\n        contact(first_name, phone_number, options = {}) {\n            const content = {\n                first_name,\n                phone_number,\n                ...options,\n            };\n            return { ...queryTemplate, input_message_content: content };\n        },\n        invoice(title, description, payload, provider_token, currency, prices, options = {}) {\n            const content = {\n                title,\n                description,\n                payload,\n                provider_token,\n                currency,\n                prices,\n                ...options,\n            };\n            return { ...queryTemplate, input_message_content: content };\n        },\n    };\n}\n/**\n * Holds a number of helper methods for building `InlineQueryResult*` objects.\n *\n * For example, letting the user pick one out of three photos can be done like\n * this.\n *\n * ```ts\n * const results = [\n *     InlineQueryResultBuilder.photo('id0', 'https://grammy.dev/images/Y.png'),\n *     InlineQueryResultBuilder.photo('id1', 'https://grammy.dev/images/Y.png'),\n *     InlineQueryResultBuilder.photo('id2', 'https://grammy.dev/images/Y.png'),\n * ];\n * await ctx.answerInlineQuery(results)\n * ```\n *\n * If you want the message content to be different from the content in the\n * inline query result, you can perform another method call on the resulting\n * objects.\n *\n * ```ts\n * const results = [\n *     InlineQueryResultBuilder.photo(\"id0\", \"https://grammy.dev/images/Y.png\")\n *         .text(\"Picked photo 0!\"),\n *     InlineQueryResultBuilder.photo(\"id1\", \"https://grammy.dev/images/Y.png\")\n *         .text(\"Picked photo 1!\"),\n *     InlineQueryResultBuilder.photo(\"id2\", \"https://grammy.dev/images/Y.png\")\n *         .text(\"Picked photo 2!\"),\n * ];\n * await ctx.answerInlineQuery(results)\n * ```\n *\n * Be sure to check the\n * [documentation](https://core.telegram.org/bots/api#inline-mode) on inline\n * mode.\n */\nexports.InlineQueryResultBuilder = {\n    /**\n     * Builds an InlineQueryResultArticle object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultarticle. Requires you\n     * to specify the actual message content by calling another function on the\n     * object returned from this method.\n     *\n     * @param id Unique identifier for this result, 1-64 Bytes\n     * @param title Title of the result\n     * @param options Remaining options\n     */\n    article(id, title, options = {}) {\n        return inputMessageMethods({ type: \"article\", id, title, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultAudio object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultaudio.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param title Title\n     * @param audio_url A valid URL for the audio file\n     * @param options Remaining options\n     */\n    audio(id, title, audio_url, options = {}) {\n        return inputMessage({\n            type: \"audio\",\n            id,\n            title,\n            audio_url: typeof audio_url === \"string\"\n                ? audio_url\n                : audio_url.href,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultCachedAudio object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultcachedaudio.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param audio_file_id A valid file identifier for the audio file\n     * @param options Remaining options\n     */\n    audioCached(id, audio_file_id, options = {}) {\n        return inputMessage({ type: \"audio\", id, audio_file_id, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultContact object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultcontact.\n     *\n     * @param id Unique identifier for this result, 1-64 Bytes\n     * @param phone_number Contact's phone number\n     * @param first_name Contact's first name\n     * @param options Remaining options\n     */\n    contact(id, phone_number, first_name, options = {}) {\n        return inputMessage({ type: \"contact\", id, phone_number, first_name, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultDocument object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultdocument with\n     * mime_type set to \"application/pdf\".\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param title Title for the result\n     * @param document_url A valid URL for the file\n     * @param options Remaining options\n     */\n    documentPdf(id, title, document_url, options = {}) {\n        return inputMessage({\n            type: \"document\",\n            mime_type: \"application/pdf\",\n            id,\n            title,\n            document_url: typeof document_url === \"string\"\n                ? document_url\n                : document_url.href,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultDocument object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultdocument with\n     * mime_type set to \"application/zip\".\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param title Title for the result\n     * @param document_url A valid URL for the file\n     * @param options Remaining options\n     */\n    documentZip(id, title, document_url, options = {}) {\n        return inputMessage({\n            type: \"document\",\n            mime_type: \"application/zip\",\n            id,\n            title,\n            document_url: typeof document_url === \"string\"\n                ? document_url\n                : document_url.href,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultCachedDocument object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultcacheddocument.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param title Title for the result\n     * @param document_file_id A valid file identifier for the file\n     * @param options Remaining options\n     */\n    documentCached(id, title, document_file_id, options = {}) {\n        return inputMessage({ type: \"document\", id, title, document_file_id, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultGame object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultgame.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param game_short_name Short name of the game\n     * @param options Remaining options\n     */\n    game(id, game_short_name, options = {}) {\n        return { type: \"game\", id, game_short_name, ...options };\n    },\n    /**\n     * Builds an InlineQueryResultGif object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultgif.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param gif_url A valid URL for the GIF file. File size must not exceed 1MB\n     * @param thumbnail_url URL of the static (JPEG or GIF) or animated (MPEG4) thumbnail for the result\n     * @param options Remaining options\n     */\n    gif(id, gif_url, thumbnail_url, options = {}) {\n        return inputMessage({\n            type: \"gif\",\n            id,\n            gif_url: typeof gif_url === \"string\" ? gif_url : gif_url.href,\n            thumbnail_url: typeof thumbnail_url === \"string\"\n                ? thumbnail_url\n                : thumbnail_url.href,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultCachedGif object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultcachedgif.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param gif_file_id A valid file identifier for the GIF file\n     * @param options Remaining options\n     */\n    gifCached(id, gif_file_id, options = {}) {\n        return inputMessage({ type: \"gif\", id, gif_file_id, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultLocation object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultlocation.\n     *\n     * @param id Unique identifier for this result, 1-64 Bytes\n     * @param title Location title\n     * @param latitude Location latitude in degrees\n     * @param longitude Location longitude in degrees\n     * @param options Remaining options\n     */\n    location(id, title, latitude, longitude, options = {}) {\n        return inputMessage({ type: \"location\", id, title, latitude, longitude, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultMpeg4Gif object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultmpeg4gif.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param mpeg4_url A valid URL for the MPEG4 file. File size must not exceed 1MB\n     * @param thumbnail_url URL of the static (JPEG or GIF) or animated (MPEG4) thumbnail for the result\n     * @param options Remaining options\n     */\n    mpeg4gif(id, mpeg4_url, thumbnail_url, options = {}) {\n        return inputMessage({\n            type: \"mpeg4_gif\",\n            id,\n            mpeg4_url: typeof mpeg4_url === \"string\"\n                ? mpeg4_url\n                : mpeg4_url.href,\n            thumbnail_url: typeof thumbnail_url === \"string\"\n                ? thumbnail_url\n                : thumbnail_url.href,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultCachedMpeg4Gif object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultcachedmpeg4gif.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param mpeg4_file_id A valid file identifier for the MPEG4 file\n     * @param options Remaining options\n     */\n    mpeg4gifCached(id, mpeg4_file_id, options = {}) {\n        return inputMessage({ type: \"mpeg4_gif\", id, mpeg4_file_id, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultPhoto object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultphoto with the\n     * thumbnail defaulting to the photo itself.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param photo_url A valid URL of the photo. Photo must be in JPEG format. Photo size must not exceed 5MB\n     * @param options Remaining options\n     */\n    photo(id, photo_url, options = {\n        thumbnail_url: typeof photo_url === \"string\"\n            ? photo_url\n            : photo_url.href,\n    }) {\n        return inputMessage({\n            type: \"photo\",\n            id,\n            photo_url: typeof photo_url === \"string\"\n                ? photo_url\n                : photo_url.href,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultCachedPhoto object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultcachedphoto.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param photo_file_id A valid file identifier of the photo\n     * @param options Remaining options\n     */\n    photoCached(id, photo_file_id, options = {}) {\n        return inputMessage({ type: \"photo\", id, photo_file_id, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultCachedSticker object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultcachedsticker.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param sticker_file_id A valid file identifier of the sticker\n     * @param options Remaining options\n     */\n    stickerCached(id, sticker_file_id, options = {}) {\n        return inputMessage({ type: \"sticker\", id, sticker_file_id, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultVenue object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultvenue.\n     *\n     * @param id Unique identifier for this result, 1-64 Bytes\n     * @param title Title of the venue\n     * @param latitude Latitude of the venue location in degrees\n     * @param longitude Longitude of the venue location in degrees\n     * @param address Address of the venue\n     * @param options Remaining options\n     */\n    venue(id, title, latitude, longitude, address, options = {}) {\n        return inputMessage({\n            type: \"venue\",\n            id,\n            title,\n            latitude,\n            longitude,\n            address,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultVideo object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultvideo with mime_type\n     * set to \"text/html\". This will send an embedded video player. Requires you\n     * to specify the actual message content by calling another function on the\n     * object returned from this method.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param title Title for the result\n     * @param video_url A valid URL for the embedded video player\n     * @param thumbnail_url URL of the thumbnail (JPEG only) for the video\n     * @param options Remaining options\n     */\n    videoHtml(id, title, video_url, thumbnail_url, options = {}) {\n        // require input message content by only returning methods\n        return inputMessageMethods({\n            type: \"video\",\n            mime_type: \"text/html\",\n            id,\n            title,\n            video_url: typeof video_url === \"string\"\n                ? video_url\n                : video_url.href,\n            thumbnail_url: typeof thumbnail_url === \"string\"\n                ? thumbnail_url\n                : thumbnail_url.href,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultVideo object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultvideo with mime_type\n     * set to \"video/mp4\".\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param title Title for the result\n     * @param video_url A valid URL for the video file\n     * @param thumbnail_url URL of the thumbnail (JPEG only) for the video\n     * @param options Remaining options\n     */\n    videoMp4(id, title, video_url, thumbnail_url, options = {}) {\n        return inputMessage({\n            type: \"video\",\n            mime_type: \"video/mp4\",\n            id,\n            title,\n            video_url: typeof video_url === \"string\"\n                ? video_url\n                : video_url.href,\n            thumbnail_url: typeof thumbnail_url === \"string\"\n                ? thumbnail_url\n                : thumbnail_url.href,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultCachedVideo object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultcachedvideo.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param title Title for the result\n     * @param video_file_id A valid file identifier for the video file\n     * @param options Remaining options\n     */\n    videoCached(id, title, video_file_id, options = {}) {\n        return inputMessage({ type: \"video\", id, title, video_file_id, ...options });\n    },\n    /**\n     * Builds an InlineQueryResultVoice object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultvoice.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param title Voice message title\n     * @param voice_url A valid URL for the voice recording\n     * @param options Remaining options\n     */\n    voice(id, title, voice_url, options = {}) {\n        return inputMessage({\n            type: \"voice\",\n            id,\n            title,\n            voice_url: typeof voice_url === \"string\"\n                ? voice_url\n                : voice_url.href,\n            ...options,\n        });\n    },\n    /**\n     * Builds an InlineQueryResultCachedVoice object as specified by\n     * https://core.telegram.org/bots/api#inlinequeryresultcachedvoice.\n     *\n     * @param id Unique identifier for this result, 1-64 bytes\n     * @param title Voice message title\n     * @param voice_file_id A valid file identifier for the voice message\n     * @param options Remaining options\n     */\n    voiceCached(id, title, voice_file_id, options = {}) {\n        return inputMessage({ type: \"voice\", id, title, voice_file_id, ...options });\n    },\n};\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputMediaBuilder = void 0;\n/**\n * Holds a number of helper methods for building `InputMedia*` objects. They are\n * useful when sending media groups and when editing media messages.\n *\n * For example, media groups can be sent like this.\n *\n * ```ts\n * const paths = [\n *     '/tmp/pic0.jpg',\n *     '/tmp/pic1.jpg',\n *     '/tmp/pic2.jpg',\n * ]\n * const files = paths.map((path) => new InputFile(path))\n * const media = files.map((file) => InputMediaBuilder.photo(file))\n * await bot.api.sendMediaGroup(chatId, media)\n * ```\n *\n * Media can be edited like this.\n *\n * ```ts\n * const file = new InputFile('/tmp/pic0.jpg')\n * const media = InputMediaBuilder.photo(file, {\n *     caption: 'new caption'\n * })\n * await bot.api.editMessageMedia(chatId, messageId, media)\n * ```\n */\nexports.InputMediaBuilder = {\n    /**\n     * Creates a new `InputMediaPhoto` object as specified by\n     * https://core.telegram.org/bots/api#inputmediaphoto.\n     *\n     * @param media An `InputFile` instance or a file identifier\n     * @param options Remaining optional options\n     */\n    photo(media, options = {}) {\n        return { type: \"photo\", media, ...options };\n    },\n    /**\n     * Creates a new `InputMediaVideo` object as specified by\n     * https://core.telegram.org/bots/api#inputmediavideo.\n     *\n     * @param media An `InputFile` instance or a file identifier\n     * @param options Remaining optional options\n     */\n    video(media, options = {}) {\n        return { type: \"video\", media, ...options };\n    },\n    /**\n     * Creates a new `InputMediaAnimation` object as specified by\n     * https://core.telegram.org/bots/api#inputmediaanimation.\n     *\n     * @param media An `InputFile` instance or a file identifier\n     * @param options Remaining optional options\n     */\n    animation(media, options = {}) {\n        return { type: \"animation\", media, ...options };\n    },\n    /**\n     * Creates a new `InputMediaAudio` object as specified by\n     * https://core.telegram.org/bots/api#inputmediaaudio.\n     *\n     * @param media An `InputFile` instance or a file identifier\n     * @param options Remaining optional options\n     */\n    audio(media, options = {}) {\n        return { type: \"audio\", media, ...options };\n    },\n    /**\n     * Creates a new `InputMediaDocument` object as specified by\n     * https://core.telegram.org/bots/api#inputmediadocument.\n     *\n     * @param media An `InputFile` instance or a file identifier\n     * @param options Remaining optional options\n     */\n    document(media, options = {}) {\n        return { type: \"document\", media, ...options };\n    },\n};\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineKeyboard = exports.Keyboard = void 0;\n/**\n * Use this class to simplify building a custom keyboard (something like this:\n * https://core.telegram.org/bots/features#keyboards).\n *\n * ```ts\n * // Build a custom keyboard:\n * const keyboard = new Keyboard()\n *   .text('A').text('B').row()\n *   .text('C').text('D')\n *\n * // Now you can send it like so:\n * await ctx.reply('Here is your custom keyboard!', {\n *   reply_markup: keyboard\n * })\n * ```\n *\n * If you already have some source data which you would like to turn into a\n * keyboard button object, you can use the static equivalents which every button\n * has. You can use them to create a two-dimensional keyboard button array. The\n * resulting array can be turned into a keyboard instance.\n *\n * ```ts\n * const button = Keyboard.text('push my buttons')\n * const array = [[button]]\n * const keyboard = Keyboard.from(array)\n * ```\n *\n * If you want to create text buttons only, you can directly use a\n * two-dimensional string array and turn it into a keyboard.\n *\n * ```ts\n * const data = [['A', 'B'], ['C', 'D']]\n * const keyboard = Keyboard.from(data)\n * ```\n *\n * Be sure to check out the\n * [documentation](https://grammy.dev/plugins/keyboard#custom-keyboards) on\n * custom keyboards in grammY.\n */\nclass Keyboard {\n    /**\n     * Initialize a new `Keyboard` with an optional two-dimensional array of\n     * `KeyboardButton` objects. This is the nested array that holds the custom\n     * keyboard. It will be extended every time you call one of the provided\n     * methods.\n     *\n     * @param keyboard An optional initial two-dimensional button array\n     */\n    constructor(keyboard = [[]]) {\n        this.keyboard = keyboard;\n    }\n    /**\n     * Allows you to add your own `KeyboardButton` objects if you already have\n     * them for some reason. You most likely want to call one of the other\n     * methods.\n     *\n     * @param buttons The buttons to add\n     */\n    add(...buttons) {\n        var _a;\n        (_a = this.keyboard[this.keyboard.length - 1]) === null || _a === void 0 ? void 0 : _a.push(...buttons);\n        return this;\n    }\n    /**\n     * Adds a 'line break'. Call this method to make sure that the next added\n     * buttons will be on a new row.\n     *\n     * You may pass a number of `KeyboardButton` objects if you already have the\n     * instances for some reason. You most likely don't want to pass any\n     * arguments to `row`.\n     *\n     * @param buttons A number of buttons to add to the next row\n     */\n    row(...buttons) {\n        this.keyboard.push(buttons);\n        return this;\n    }\n    /**\n     * Adds a new text button. This button will simply send the given text as a\n     * text message back to your bot if a user clicks on it.\n     *\n     * @param text The text to display\n     */\n    text(text) {\n        return this.add(Keyboard.text(text));\n    }\n    /**\n     * Creates a new text button. This button will simply send the given text as\n     * a text message back to your bot if a user clicks on it.\n     *\n     * @param text The text to display\n     */\n    static text(text) {\n        return { text };\n    }\n    /**\n     * Adds a new request users button. When the user presses the button, a list\n     * of suitable users will be opened. Tapping on any number of users will\n     * send their identifiers to the bot in a “users_shared” service message.\n     * Available in private chats only.\n     *\n     * @param text The text to display\n     * @param requestId A signed 32-bit identifier of the request\n     * @param options Options object for further requirements\n     */\n    requestUsers(text, requestId, options = {}) {\n        return this.add(Keyboard.requestUsers(text, requestId, options));\n    }\n    /**\n     * Creates a new request users button. When the user presses the button, a\n     * list of suitable users will be opened. Tapping on any number of users\n     * will send their identifiers to the bot in a “users_shared” service\n     * message. Available in private chats only.\n     *\n     * @param text The text to display\n     * @param requestId A signed 32-bit identifier of the request\n     * @param options Options object for further requirements\n     */\n    static requestUsers(text, requestId, options = {}) {\n        return { text, request_users: { request_id: requestId, ...options } };\n    }\n    /**\n     * Adds a new request chat button. When the user presses the button, a list\n     * of suitable users will be opened. Tapping on a chat will send its\n     * identifier to the bot in a “chat_shared” service message. Available in\n     * private chats only.\n     *\n     * @param text The text to display\n     * @param requestId A signed 32-bit identifier of the request\n     * @param options Options object for further requirements\n     */\n    requestChat(text, requestId, options = {\n        chat_is_channel: false,\n    }) {\n        return this.add(Keyboard.requestChat(text, requestId, options));\n    }\n    /**\n     * Creates a new request chat button. When the user presses the button, a\n     * list of suitable users will be opened. Tapping on a chat will send its\n     * identifier to the bot in a “chat_shared” service message. Available in\n     * private chats only.\n     *\n     * @param text The text to display\n     * @param requestId A signed 32-bit identifier of the request\n     * @param options Options object for further requirements\n     */\n    static requestChat(text, requestId, options = {\n        chat_is_channel: false,\n    }) {\n        return { text, request_chat: { request_id: requestId, ...options } };\n    }\n    /**\n     * Adds a new contact request button. The user's phone number will be sent\n     * as a contact when the button is pressed. Available in private chats only.\n     *\n     * @param text The text to display\n     */\n    requestContact(text) {\n        return this.add(Keyboard.requestContact(text));\n    }\n    /**\n     * Creates a new contact request button. The user's phone number will be\n     * sent as a contact when the button is pressed. Available in private chats\n     * only.\n     *\n     * @param text The text to display\n     */\n    static requestContact(text) {\n        return { text, request_contact: true };\n    }\n    /**\n     * Adds a new location request button. The user's current location will be\n     * sent when the button is pressed. Available in private chats only.\n     *\n     * @param text The text to display\n     */\n    requestLocation(text) {\n        return this.add(Keyboard.requestLocation(text));\n    }\n    /**\n     * Creates a new location request button. The user's current location will\n     * be sent when the button is pressed. Available in private chats only.\n     *\n     * @param text The text to display\n     */\n    static requestLocation(text) {\n        return { text, request_location: true };\n    }\n    /**\n     * Adds a new poll request button. The user will be asked to create a poll\n     * and send it to the bot when the button is pressed. Available in private\n     * chats only.\n     *\n     * @param text The text to display\n     * @param type The type of permitted polls to create, omit if the user may\n     * send a poll of any type\n     */\n    requestPoll(text, type) {\n        return this.add(Keyboard.requestPoll(text, type));\n    }\n    /**\n     * Creates a new poll request button. The user will be asked to create a\n     * poll and send it to the bot when the button is pressed. Available in\n     * private chats only.\n     *\n     * @param text The text to display\n     * @param type The type of permitted polls to create, omit if the user may\n     * send a poll of any type\n     */\n    static requestPoll(text, type) {\n        return { text, request_poll: { type } };\n    }\n    /**\n     * Adds a new web app button. The Web App that will be launched when the\n     * user presses the button. The Web App will be able to send a\n     * “web_app_data” service message. Available in private chats only.\n     *\n     * @param text The text to display\n     * @param url An HTTPS URL of a Web App to be opened with additional data\n     */\n    webApp(text, url) {\n        return this.add(Keyboard.webApp(text, url));\n    }\n    /**\n     * Creates a new web app button. The Web App that will be launched when the\n     * user presses the button. The Web App will be able to send a\n     * “web_app_data” service message. Available in private chats only.\n     *\n     * @param text The text to display\n     * @param url An HTTPS URL of a Web App to be opened with additional data\n     */\n    static webApp(text, url) {\n        return { text, web_app: { url } };\n    }\n    /**\n     * Make the current keyboard persistent. See\n     * https://grammy.dev/plugins/keyboard#persistent-keyboards for more\n     * details.\n     *\n     * Keyboards are not persistent by default, use this function to enable it\n     * (without any parameters or pass `true`). Pass `false` to force the\n     * keyboard to not persist.\n     *\n     * @param isEnabled `true` if the keyboard should persist, and `false` otherwise\n     */\n    persistent(isEnabled = true) {\n        this.is_persistent = isEnabled;\n        return this;\n    }\n    /**\n     * Make the current keyboard selective. See\n     * https://grammy.dev/plugins/keyboard#selectively-send-custom-keyboards\n     * for more details.\n     *\n     * Keyboards are non-selective by default, use this function to enable it\n     * (without any parameters or pass `true`). Pass `false` to force the\n     * keyboard to be non-selective.\n     *\n     * @param isEnabled `true` if the keyboard should be selective, and `false` otherwise\n     */\n    selected(isEnabled = true) {\n        this.selective = isEnabled;\n        return this;\n    }\n    /**\n     * Make the current keyboard one-time. See\n     * https://grammy.dev/plugins/keyboard#one-time-custom-keyboards for\n     * more details.\n     *\n     * Keyboards are non-one-time by default, use this function to enable it\n     * (without any parameters or pass `true`). Pass `false` to force the\n     * keyboard to be non-one-time.\n     *\n     * @param isEnabled `true` if the keyboard should be one-time, and `false` otherwise\n     */\n    oneTime(isEnabled = true) {\n        this.one_time_keyboard = isEnabled;\n        return this;\n    }\n    /**\n     * Make the current keyboard resized. See\n     * https://grammy.dev/plugins/keyboard#resize-custom-keyboard for more\n     * details.\n     *\n     * Keyboards are non-resized by default, use this function to enable it\n     * (without any parameters or pass `true`). Pass `false` to force the\n     * keyboard to be non-resized.\n     *\n     * @param isEnabled `true` if the keyboard should be resized, and `false` otherwise\n     */\n    resized(isEnabled = true) {\n        this.resize_keyboard = isEnabled;\n        return this;\n    }\n    /**\n     * Set the current keyboard's input field placeholder. See\n     * https://grammy.dev/plugins/keyboard#input-field-placeholder for more\n     * details.\n     *\n     * @param value The placeholder text\n     */\n    placeholder(value) {\n        this.input_field_placeholder = value;\n        return this;\n    }\n    /**\n     * Creates a new keyboard that contains the transposed grid of buttons of\n     * this keyboard. This means that the resulting keyboard has the rows and\n     * columns flipped.\n     *\n     * Note that buttons can only span multiple columns, but never multiple\n     * rows. This means that if the given arrays have different lengths, some\n     * buttons might flow up in the layout. In these cases, transposing a\n     * keyboard a second time will not undo the first transposition.\n     *\n     * Here are some examples.\n     *\n     * ```\n     * original    transposed\n     * [  a  ]  ~> [  a  ]\n     *\n     *             [  a  ]\n     * [a b c]  ~> [  b  ]\n     *             [  c  ]\n     *\n     * [ a b ]     [a c e]\n     * [ c d ]  ~> [ b d ]\n     * [  e  ]\n     *\n     * [ a b ]     [a c d]\n     * [  c  ]  ~> [ b e ]\n     * [d e f]     [  f  ]\n     * ```\n     */\n    toTransposed() {\n        const original = this.keyboard;\n        const transposed = transpose(original);\n        return this.clone(transposed);\n    }\n    /**\n     * Creates a new keyboard with the same buttons but reflowed into a given\n     * number of columns as if the buttons were text elements. Optionally, you\n     * can specify if the flow should make sure to fill up the last row.\n     *\n     * This method is idempotent, so calling it a second time will effectively\n     * clone this keyboard without reordering the buttons.\n     *\n     * Here are some examples.\n     *\n     * ```\n     * original    flowed\n     * [  a  ]  ~> [  a  ]    (4 columns)\n     *\n     *             [  a  ]\n     * [a b c]  ~> [  b  ]    (1 column)\n     *             [  c  ]\n     *\n     * [ a b ]     [a b c]\n     * [ c d ]  ~> [ d e ]    (3 columns)\n     * [  e  ]\n     *\n     * [ a b ]     [abcde]\n     * [  c  ]  ~> [  f  ]    (5 columns)\n     * [d e f]\n     *\n     * [a b c]     [  a  ]\n     * [d e f]  ~> [b c d]    (3 columns, { fillLastRow: true })\n     * [g h i]     [e f g]\n     * [  j  ]     [h i j]\n     * ```\n     *\n     * @param columns Maximum number of buttons per row\n     * @param options Optional flowing behavior\n     */\n    toFlowed(columns, options = {}) {\n        const original = this.keyboard;\n        const flowed = reflow(original, columns, options);\n        return this.clone(flowed);\n    }\n    /**\n     * Creates and returns a deep copy of this keyboard.\n     *\n     * Optionally takes a new grid of buttons to replace the current buttons. If\n     * specified, only the options will be cloned, and the given buttons will be\n     * used instead.\n     */\n    clone(keyboard = this.keyboard) {\n        const clone = new Keyboard(keyboard.map((row) => row.slice()));\n        clone.is_persistent = this.is_persistent;\n        clone.selective = this.selective;\n        clone.one_time_keyboard = this.one_time_keyboard;\n        clone.resize_keyboard = this.resize_keyboard;\n        clone.input_field_placeholder = this.input_field_placeholder;\n        return clone;\n    }\n    /**\n     * Appends the buttons of the given keyboards to this keyboard. If other\n     * options are specified in these keyboards, they will be ignored.\n     *\n     * @param sources A number of keyboards to append\n     */\n    append(...sources) {\n        for (const source of sources) {\n            const keyboard = Keyboard.from(source);\n            this.keyboard.push(...keyboard.keyboard.map((row) => row.slice()));\n        }\n        return this;\n    }\n    /**\n     * Returns the keyboard that was build. Note that it doesn't return\n     * `resize_keyboard` or other options that may be set. You don't usually\n     * need to call this method. It is no longer useful.\n     */\n    build() {\n        return this.keyboard;\n    }\n    /**\n     * Turns a two-dimensional keyboard button array into a keyboard instance.\n     * You can use the static button builder methods to create keyboard button\n     * objects.\n     *\n     * @param source A two-dimensional button array\n     */\n    static from(source) {\n        if (source instanceof Keyboard)\n            return source.clone();\n        function toButton(btn) {\n            return typeof btn === \"string\" ? Keyboard.text(btn) : btn;\n        }\n        return new Keyboard(source.map((row) => row.map(toButton)));\n    }\n}\nexports.Keyboard = Keyboard;\n/**\n * Use this class to simplify building an inline keyboard (something like this:\n * https://core.telegram.org/bots/features#inline-keyboards).\n *\n * ```ts\n * // Build an inline keyboard:\n * const keyboard = new InlineKeyboard()\n *   .text('A').text('B', 'callback-data').row()\n *   .text('C').text('D').row()\n *   .url('Telegram', 'telegram.org')\n *\n * // Send the keyboard:\n * await ctx.reply('Here is your inline keyboard!', {\n *   reply_markup: keyboard\n * })\n * ```\n *\n * If you already have some source data which you would like to turn into an\n * inline button object, you can use the static equivalents which every inline\n * button has. You can use them to create a two-dimensional inline button array.\n * The resulting array can be turned into a keyboard instance.\n *\n * ```ts\n * const button = InlineKeyboard.text('GO', 'go')\n * const array = [[button]]\n * const keyboard = InlineKeyboard.from(array)\n * ```\n *\n * Be sure to to check the\n * [documentation](https://grammy.dev/plugins/keyboard#inline-keyboards) on\n * inline keyboards in grammY.\n */\nclass InlineKeyboard {\n    /**\n     * Initialize a new `InlineKeyboard` with an optional two-dimensional array\n     * of `InlineKeyboardButton` objects. This is the nested array that holds\n     * the inline keyboard. It will be extended every time you call one of the\n     * provided methods.\n     *\n     * @param inline_keyboard An optional initial two-dimensional button array\n     */\n    constructor(inline_keyboard = [[]]) {\n        this.inline_keyboard = inline_keyboard;\n    }\n    /**\n     * Allows you to add your own `InlineKeyboardButton` objects if you already\n     * have them for some reason. You most likely want to call one of the other\n     * methods.\n     *\n     * @param buttons The buttons to add\n     */\n    add(...buttons) {\n        var _a;\n        (_a = this.inline_keyboard[this.inline_keyboard.length - 1]) === null || _a === void 0 ? void 0 : _a.push(...buttons);\n        return this;\n    }\n    /**\n     * Adds a 'line break'. Call this method to make sure that the next added\n     * buttons will be on a new row.\n     *\n     * You may pass a number of `InlineKeyboardButton` objects if you already\n     * have the instances for some reason. You most likely don't want to pass\n     * any arguments to `row`.\n     *\n     * @param buttons A number of buttons to add to the next row\n     */\n    row(...buttons) {\n        this.inline_keyboard.push(buttons);\n        return this;\n    }\n    /**\n     * Adds a new URL button. Telegram clients will open the provided URL when\n     * the button is pressed.\n     *\n     * @param text The text to display\n     * @param url HTTP or tg:// url to be opened when the button is pressed. Links tg://user?id=<user_id> can be used to mention a user by their ID without using a username, if this is allowed by their privacy settings.\n     */\n    url(text, url) {\n        return this.add(InlineKeyboard.url(text, url));\n    }\n    /**\n     * Creates a new URL button. Telegram clients will open the provided URL\n     * when the button is pressed.\n     *\n     * @param text The text to display\n     * @param url HTTP or tg:// url to be opened when the button is pressed. Links tg://user?id=<user_id> can be used to mention a user by their ID without using a username, if this is allowed by their privacy settings.\n     */\n    static url(text, url) {\n        return { text, url };\n    }\n    /**\n     * Adds a new callback query button. The button contains a text and a custom\n     * payload. This payload will be sent back to your bot when the button is\n     * pressed. If you omit the payload, the display text will be sent back to\n     * your bot.\n     *\n     * Your bot will receive an update every time a user presses any of the text\n     * buttons. You can listen to these updates like this:\n     * ```ts\n     * // Specific buttons:\n     * bot.callbackQuery('button-data', ctx => { ... })\n     * // Any button of any inline keyboard:\n     * bot.on('callback_query:data',    ctx => { ... })\n     * ```\n     *\n     * @param text The text to display\n     * @param data The callback data to send back to your bot (default = text)\n     */\n    text(text, data = text) {\n        return this.add(InlineKeyboard.text(text, data));\n    }\n    /**\n     * Creates a new callback query button. The button contains a text and a\n     * custom payload. This payload will be sent back to your bot when the\n     * button is pressed. If you omit the payload, the display text will be sent\n     * back to your bot.\n     *\n     * Your bot will receive an update every time a user presses any of the text\n     * buttons. You can listen to these updates like this:\n     * ```ts\n     * // Specific buttons:\n     * bot.callbackQuery('button-data', ctx => { ... })\n     * // Any button of any inline keyboard:\n     * bot.on('callback_query:data',    ctx => { ... })\n     * ```\n     *\n     * @param text The text to display\n     * @param data The callback data to send back to your bot (default = text)\n     */\n    static text(text, data = text) {\n        return { text, callback_data: data };\n    }\n    /**\n     * Adds a new web app button, confer https://core.telegram.org/bots/webapps\n     *\n     * @param text The text to display\n     * @param url An HTTPS URL of a Web App to be opened with additional data\n     */\n    webApp(text, url) {\n        return this.add(InlineKeyboard.webApp(text, url));\n    }\n    /**\n     * Creates a new web app button, confer https://core.telegram.org/bots/webapps\n     *\n     * @param text The text to display\n     * @param url An HTTPS URL of a Web App to be opened with additional data\n     */\n    static webApp(text, url) {\n        return { text, web_app: typeof url === \"string\" ? { url } : url };\n    }\n    /**\n     * Adds a new login button. This can be used as a replacement for the\n     * Telegram Login Widget. You must specify an HTTPS URL used to\n     * automatically authorize the user.\n     *\n     * @param text The text to display\n     * @param loginUrl The login URL as string or `LoginUrl` object\n     */\n    login(text, loginUrl) {\n        return this.add(InlineKeyboard.login(text, loginUrl));\n    }\n    /**\n     * Creates a new login button. This can be used as a replacement for the\n     * Telegram Login Widget. You must specify an HTTPS URL used to\n     * automatically authorize the user.\n     *\n     * @param text The text to display\n     * @param loginUrl The login URL as string or `LoginUrl` object\n     */\n    static login(text, loginUrl) {\n        return {\n            text,\n            login_url: typeof loginUrl === \"string\"\n                ? { url: loginUrl }\n                : loginUrl,\n        };\n    }\n    /**\n     * Adds a new inline query button. Telegram clients will let the user pick a\n     * chat when this button is pressed. This will start an inline query. The\n     * selected chat will be prefilled with the name of your bot. You may\n     * provide a text that is specified along with it.\n     *\n     * Your bot will in turn receive updates for inline queries. You can listen\n     * to inline query updates like this:\n     * ```ts\n     * bot.on('inline_query', ctx => { ... })\n     * ```\n     *\n     * @param text The text to display\n     * @param query The (optional) inline query string to prefill\n     */\n    switchInline(text, query = \"\") {\n        return this.add(InlineKeyboard.switchInline(text, query));\n    }\n    /**\n     * Creates a new inline query button. Telegram clients will let the user pick a\n     * chat when this button is pressed. This will start an inline query. The\n     * selected chat will be prefilled with the name of your bot. You may\n     * provide a text that is specified along with it.\n     *\n     * Your bot will in turn receive updates for inline queries. You can listen\n     * to inline query updates like this:\n     * ```ts\n     * bot.on('inline_query', ctx => { ... })\n     * ```\n     *\n     * @param text The text to display\n     * @param query The (optional) inline query string to prefill\n     */\n    static switchInline(text, query = \"\") {\n        return { text, switch_inline_query: query };\n    }\n    /**\n     * Adds a new inline query button that acts on the current chat. The\n     * selected chat will be prefilled with the name of your bot. You may\n     * provide a text that is specified along with it. This will start an inline\n     * query.\n     *\n     * Your bot will in turn receive updates for inline queries. You can listen\n     * to inline query updates like this:\n     * ```ts\n     * bot.on('inline_query', ctx => { ... })\n     * ```\n     *\n     * @param text The text to display\n     * @param query The (optional) inline query string to prefill\n     */\n    switchInlineCurrent(text, query = \"\") {\n        return this.add(InlineKeyboard.switchInlineCurrent(text, query));\n    }\n    /**\n     * Creates a new inline query button that acts on the current chat. The\n     * selected chat will be prefilled with the name of your bot. You may\n     * provide a text that is specified along with it. This will start an inline\n     * query.\n     *\n     * Your bot will in turn receive updates for inline queries. You can listen\n     * to inline query updates like this:\n     * ```ts\n     * bot.on('inline_query', ctx => { ... })\n     * ```\n     *\n     * @param text The text to display\n     * @param query The (optional) inline query string to prefill\n     */\n    static switchInlineCurrent(text, query = \"\") {\n        return { text, switch_inline_query_current_chat: query };\n    }\n    /**\n     * Adds a new inline query button. Telegram clients will let the user pick a\n     * chat when this button is pressed. This will start an inline query. The\n     * selected chat will be prefilled with the name of your bot. You may\n     * provide a text that is specified along with it.\n     *\n     * Your bot will in turn receive updates for inline queries. You can listen\n     * to inline query updates like this:\n     * ```ts\n     * bot.on('inline_query', ctx => { ... })\n     * ```\n     *\n     * @param text The text to display\n     * @param query The query object describing which chats can be picked\n     */\n    switchInlineChosen(text, query = {}) {\n        return this.add(InlineKeyboard.switchInlineChosen(text, query));\n    }\n    /**\n     * Creates a new inline query button. Telegram clients will let the user pick a\n     * chat when this button is pressed. This will start an inline query. The\n     * selected chat will be prefilled with the name of your bot. You may\n     * provide a text that is specified along with it.\n     *\n     * Your bot will in turn receive updates for inline queries. You can listen\n     * to inline query updates like this:\n     * ```ts\n     * bot.on('inline_query', ctx => { ... })\n     * ```\n     *\n     * @param text The text to display\n     * @param query The query object describing which chats can be picked\n     */\n    static switchInlineChosen(text, query = {}) {\n        return { text, switch_inline_query_chosen_chat: query };\n    }\n    /**\n     * Adds a new copy text button. When clicked, the specified text will be\n     * copied to the clipboard.\n     *\n     * @param text The text to display\n     * @param copyText The text to be copied to the clipboard\n     */\n    copyText(text, copyText) {\n        return this.add(InlineKeyboard.copyText(text, copyText));\n    }\n    /**\n     * Creates a new copy text button. When clicked, the specified text will be\n     * copied to the clipboard.\n     *\n     * @param text The text to display\n     * @param copyText The text to be copied to the clipboard\n     */\n    static copyText(text, copyText) {\n        return {\n            text,\n            copy_text: typeof copyText === \"string\"\n                ? { text: copyText }\n                : copyText,\n        };\n    }\n    /**\n     * Adds a new game query button, confer\n     * https://core.telegram.org/bots/api#games\n     *\n     * This type of button must always be the first button in the first row.\n     *\n     * @param text The text to display\n     */\n    game(text) {\n        return this.add(InlineKeyboard.game(text));\n    }\n    /**\n     * Creates a new game query button, confer\n     * https://core.telegram.org/bots/api#games\n     *\n     * This type of button must always be the first button in the first row.\n     *\n     * @param text The text to display\n     */\n    static game(text) {\n        return { text, callback_game: {} };\n    }\n    /**\n     * Adds a new payment button, confer\n     * https://core.telegram.org/bots/api#payments\n     *\n     * This type of button must always be the first button in the first row and\n     * can only be used in invoice messages.\n     *\n     * @param text The text to display. Substrings “⭐” and “XTR” in the buttons's text will be replaced with a Telegram Star icon.\n     */\n    pay(text) {\n        return this.add(InlineKeyboard.pay(text));\n    }\n    /**\n     * Create a new payment button, confer\n     * https://core.telegram.org/bots/api#payments\n     *\n     * This type of button must always be the first button in the first row and\n     * can only be used in invoice messages.\n     *\n     * @param text The text to display. Substrings “⭐” and “XTR” in the buttons's text will be replaced with a Telegram Star icon.\n     */\n    static pay(text) {\n        return { text, pay: true };\n    }\n    /**\n     * Creates a new inline keyboard that contains the transposed grid of\n     * buttons of this inline keyboard. This means that the resulting inline\n     * keyboard has the rows and columns flipped.\n     *\n     * Note that inline buttons can only span multiple columns, but never\n     * multiple rows. This means that if the given arrays have different\n     * lengths, some buttons might flow up in the layout. In these cases,\n     * transposing an inline keyboard a second time will not undo the first\n     * transposition.\n     *\n     * Here are some examples.\n     *\n     * ```\n     * original    transposed\n     * [  a  ]  ~> [  a  ]\n     *\n     *             [  a  ]\n     * [a b c]  ~> [  b  ]\n     *             [  c  ]\n     *\n     * [ a b ]     [a c e]\n     * [ c d ]  ~> [ b d ]\n     * [  e  ]\n     *\n     * [ a b ]     [a c d]\n     * [  c  ]  ~> [ b e ]\n     * [d e f]     [  f  ]\n     * ```\n     */\n    toTransposed() {\n        const original = this.inline_keyboard;\n        const transposed = transpose(original);\n        return new InlineKeyboard(transposed);\n    }\n    /**\n     * Creates a new inline keyboard with the same buttons but reflowed into a\n     * given number of columns as if the buttons were text elements. Optionally,\n     * you can specify if the flow should make sure to fill up the last row.\n     *\n     * This method is idempotent, so calling it a second time will effectively\n     * clone this inline keyboard without reordering the buttons.\n     *\n     * Here are some examples.\n     *\n     * ```\n     * original    flowed\n     * [  a  ]  ~> [  a  ]    (4 columns)\n     *\n     *             [  a  ]\n     * [a b c]  ~> [  b  ]    (1 column)\n     *             [  c  ]\n     *\n     * [ a b ]     [a b c]\n     * [ c d ]  ~> [ d e ]    (3 columns)\n     * [  e  ]\n     *\n     * [ a b ]     [abcde]\n     * [  c  ]  ~> [  f  ]    (5 columns)\n     * [d e f]\n     *\n     * [a b c]     [  a  ]\n     * [d e f]  ~> [b c d]    (3 columns, { fillLastRow: true })\n     * [g h i]     [e f g]\n     * [  j  ]     [h i j]\n     * ```\n     *\n     * @param columns Maximum number of buttons per row\n     * @param options Optional flowing behavior\n     */\n    toFlowed(columns, options = {}) {\n        const original = this.inline_keyboard;\n        const flowed = reflow(original, columns, options);\n        return new InlineKeyboard(flowed);\n    }\n    /**\n     * Creates and returns a deep copy of this inline keyboard.\n     */\n    clone() {\n        return new InlineKeyboard(this.inline_keyboard.map((row) => row.slice()));\n    }\n    /**\n     * Appends the buttons of the given inline keyboards to this keyboard.\n     *\n     * @param sources A number of inline keyboards to append\n     */\n    append(...sources) {\n        for (const source of sources) {\n            const keyboard = InlineKeyboard.from(source);\n            this.inline_keyboard.push(...keyboard.inline_keyboard.map((row) => row.slice()));\n        }\n        return this;\n    }\n    /**\n     * Turns a two-dimensional inline button array into an inline keyboard\n     * instance. You can use the static button builder methods to create inline\n     * button objects.\n     *\n     * @param source A two-dimensional inline button array\n     */\n    static from(source) {\n        if (source instanceof InlineKeyboard)\n            return source.clone();\n        return new InlineKeyboard(source.map((row) => row.slice()));\n    }\n}\nexports.InlineKeyboard = InlineKeyboard;\nfunction transpose(grid) {\n    var _a;\n    const transposed = [];\n    for (let i = 0; i < grid.length; i++) {\n        const row = grid[i];\n        for (let j = 0; j < row.length; j++) {\n            const button = row[j];\n            ((_a = transposed[j]) !== null && _a !== void 0 ? _a : (transposed[j] = [])).push(button);\n        }\n    }\n    return transposed;\n}\nfunction reflow(grid, columns, { fillLastRow = false }) {\n    var _a;\n    let first = columns;\n    if (fillLastRow) {\n        const buttonCount = grid\n            .map((row) => row.length)\n            .reduce((a, b) => a + b, 0);\n        first = buttonCount % columns;\n    }\n    const reflowed = [];\n    for (const row of grid) {\n        for (const button of row) {\n            const at = Math.max(0, reflowed.length - 1);\n            const max = at === 0 ? first : columns;\n            let next = ((_a = reflowed[at]) !== null && _a !== void 0 ? _a : (reflowed[at] = []));\n            if (next.length === max) {\n                next = [];\n                reflowed.push(next);\n            }\n            next.push(button);\n        }\n    }\n    return reflowed;\n}\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MemorySessionStorage = void 0;\nexports.session = session;\nexports.lazySession = lazySession;\nexports.enhanceStorage = enhanceStorage;\nconst platform_node_js_1 = require(\"../platform.node.js\");\nconst debug = (0, platform_node_js_1.debug)(\"grammy:session\");\n/**\n * Session middleware provides a persistent data storage for your bot. You can\n * use it to let your bot remember any data you want, for example the messages\n * it sent or received in the past. This is done by attaching _session data_ to\n * every chat. The stored data is then provided on the context object under\n * `ctx.session`.\n *\n * > **What is a session?** Simply put, the session of a chat is a little\n * > persistent storage that is attached to it. As an example, your bot can send\n * > a message to a chat and store the identifier of that message in the\n * > corresponding session. The next time your bot receives an update from that\n * > chat, the session will still contain that ID.\n * >\n * > Session data can be stored in a database, in a file, or simply in memory.\n * > grammY only supports memory sessions out of the box, but you can use\n * > third-party session middleware to connect to other storage solutions. Note\n * > that memory sessions will be lost when you stop your bot and the process\n * > exits, so they are usually not useful in production.\n *\n * Whenever your bot receives an update, the first thing the session middleware\n * will do is to load the correct session from your storage solution. This\n * object is then provided on `ctx.session` while your other middleware is\n * running. As soon as your bot is done handling the update, the middleware\n * takes over again and writes back the session object to your storage. This\n * allows you to modify the session object arbitrarily in your middleware, and\n * to stop worrying about the database.\n *\n * ```ts\n * bot.use(session())\n *\n * bot.on('message', ctx => {\n *   // The session object is persisted across updates!\n *   const session = ctx.session\n * })\n * ```\n *\n * It is recommended to make use of the `initial` option in the configuration\n * object, which correctly initializes session objects for new chats.\n *\n * You can delete the session data by setting `ctx.session` to `null` or\n * `undefined`.\n *\n * Check out the [documentation](https://grammy.dev/plugins/session) on the\n * website to know more about how sessions work in grammY.\n *\n * @param options Optional configuration to pass to the session middleware\n */\nfunction session(options = {}) {\n    return options.type === \"multi\"\n        ? strictMultiSession(options)\n        : strictSingleSession(options);\n}\nfunction strictSingleSession(options) {\n    const { initial, storage, getSessionKey, custom } = fillDefaults(options);\n    return async (ctx, next) => {\n        const propSession = new PropertySession(storage, ctx, \"session\", initial);\n        const key = await getSessionKey(ctx);\n        await propSession.init(key, { custom, lazy: false });\n        await next(); // no catch: do not write back if middleware throws\n        await propSession.finish();\n    };\n}\nfunction strictMultiSession(options) {\n    const props = Object.keys(options).filter((k) => k !== \"type\");\n    const defaults = Object.fromEntries(props.map((prop) => [prop, fillDefaults(options[prop])]));\n    return async (ctx, next) => {\n        ctx.session = {};\n        const propSessions = await Promise.all(props.map(async (prop) => {\n            const { initial, storage, getSessionKey, custom } = defaults[prop];\n            const s = new PropertySession(\n            // @ts-expect-error cannot express that the storage works for a concrete prop\n            storage, ctx.session, prop, initial);\n            const key = await getSessionKey(ctx);\n            await s.init(key, { custom, lazy: false });\n            return s;\n        }));\n        await next(); // no catch: do not write back if middleware throws\n        if (ctx.session == null)\n            propSessions.forEach((s) => s.delete());\n        await Promise.all(propSessions.map((s) => s.finish()));\n    };\n}\n/**\n * > This is an advanced function of grammY.\n *\n * Generally speaking, lazy sessions work just like normal sessions—just they\n * are loaded on demand. Except for a few `async`s and `await`s here and there,\n * their usage looks 100 % identical.\n *\n * Instead of directly querying the storage every time an update arrives, lazy\n * sessions quickly do this _once you access_ `ctx.session`. This can\n * significantly reduce the database traffic (especially when your bot is added\n * to group chats), because it skips a read and a wrote operation for all\n * updates that the bot does not react to.\n *\n * ```ts\n * // The options are identical\n * bot.use(lazySession({ storage: ... }))\n *\n * bot.on('message', async ctx => {\n *   // The session object is persisted across updates!\n *   const session = await ctx.session\n *   //                        ^\n *   //                        |\n *   //                       This plain property access (no function call) will trigger the database query!\n * })\n * ```\n *\n * Check out the\n * [documentation](https://grammy.dev/plugins/session#lazy-sessions) on the\n * website to know more about how lazy sessions work in grammY.\n *\n * @param options Optional configuration to pass to the session middleware\n */\nfunction lazySession(options = {}) {\n    if (options.type !== undefined && options.type !== \"single\") {\n        throw new Error(\"Cannot use lazy multi sessions!\");\n    }\n    const { initial, storage, getSessionKey, custom } = fillDefaults(options);\n    return async (ctx, next) => {\n        const propSession = new PropertySession(\n        // @ts-expect-error suppress promise nature of values\n        storage, ctx, \"session\", initial);\n        const key = await getSessionKey(ctx);\n        await propSession.init(key, { custom, lazy: true });\n        await next(); // no catch: do not write back if middleware throws\n        await propSession.finish();\n    };\n}\n/**\n * Internal class that manages a single property on the session. Can be used\n * both in a strict and a lazy way. Works by using `Object.defineProperty` to\n * install `O[P]`.\n */\n// deno-lint-ignore ban-types\nclass PropertySession {\n    constructor(storage, obj, prop, initial) {\n        this.storage = storage;\n        this.obj = obj;\n        this.prop = prop;\n        this.initial = initial;\n        this.fetching = false;\n        this.read = false;\n        this.wrote = false;\n    }\n    /** Performs a read op and stores the result in `this.value` */\n    load() {\n        if (this.key === undefined) {\n            // No session key provided, cannot load\n            return;\n        }\n        if (this.wrote) {\n            // Value was set, no need to load\n            return;\n        }\n        // Perform read op if not cached\n        if (this.promise === undefined) {\n            this.fetching = true;\n            this.promise = Promise.resolve(this.storage.read(this.key))\n                .then((val) => {\n                var _a;\n                this.fetching = false;\n                // Check for write op in the meantime\n                if (this.wrote) {\n                    // Discard read op\n                    return this.value;\n                }\n                // Store received value in `this.value`\n                if (val !== undefined) {\n                    this.value = val;\n                    return val;\n                }\n                // No value, need to initialize\n                val = (_a = this.initial) === null || _a === void 0 ? void 0 : _a.call(this);\n                if (val !== undefined) {\n                    // Wrote initial value\n                    this.wrote = true;\n                    this.value = val;\n                }\n                return val;\n            });\n        }\n        return this.promise;\n    }\n    async init(key, opts) {\n        this.key = key;\n        if (!opts.lazy)\n            await this.load();\n        Object.defineProperty(this.obj, this.prop, {\n            enumerable: true,\n            get: () => {\n                if (key === undefined) {\n                    const msg = undef(\"access\", opts);\n                    throw new Error(msg);\n                }\n                this.read = true;\n                if (!opts.lazy || this.wrote)\n                    return this.value;\n                this.load();\n                return this.fetching ? this.promise : this.value;\n            },\n            set: (v) => {\n                if (key === undefined) {\n                    const msg = undef(\"assign\", opts);\n                    throw new Error(msg);\n                }\n                this.wrote = true;\n                this.fetching = false;\n                this.value = v;\n            },\n        });\n    }\n    delete() {\n        Object.assign(this.obj, { [this.prop]: undefined });\n    }\n    async finish() {\n        if (this.key !== undefined) {\n            if (this.read)\n                await this.load();\n            if (this.read || this.wrote) {\n                const value = await this.value;\n                if (value == null)\n                    await this.storage.delete(this.key);\n                else\n                    await this.storage.write(this.key, value);\n            }\n        }\n    }\n}\nfunction fillDefaults(opts = {}) {\n    let { prefix = \"\", getSessionKey = defaultGetSessionKey, initial, storage, } = opts;\n    if (storage == null) {\n        debug(\"Storing session data in memory, all data will be lost when the bot restarts.\");\n        storage = new MemorySessionStorage();\n    }\n    const custom = getSessionKey !== defaultGetSessionKey;\n    return {\n        initial,\n        storage,\n        getSessionKey: async (ctx) => {\n            const key = await getSessionKey(ctx);\n            return key === undefined ? undefined : prefix + key;\n        },\n        custom,\n    };\n}\n/** Stores session data per chat by default */\nfunction defaultGetSessionKey(ctx) {\n    var _a;\n    return (_a = ctx.chatId) === null || _a === void 0 ? void 0 : _a.toString();\n}\n/** Returns a useful error message for when the session key is undefined */\nfunction undef(op, opts) {\n    const { lazy = false, custom } = opts;\n    const reason = custom\n        ? \"the custom `getSessionKey` function returned undefined for this update\"\n        : \"this update does not belong to a chat, so the session key is undefined\";\n    return `Cannot ${op} ${lazy ? \"lazy \" : \"\"}session data because ${reason}!`;\n}\nfunction isEnhance(value) {\n    return value === undefined ||\n        typeof value === \"object\" && value !== null && \"__d\" in value;\n}\n/**\n * You can use this function to transform an existing storage adapter, and add\n * more features to it. Currently, you can add session migrations and expiry\n * dates.\n *\n * You can use this function like so:\n * ```ts\n * const storage = ... // define your storage adapter\n * const enhanced = enhanceStorage({ storage, millisecondsToLive: 500 })\n * bot.use(session({ storage: enhanced }))\n * ```\n *\n * @param options Session enhancing options\n * @returns The enhanced storage adapter\n */\nfunction enhanceStorage(options) {\n    let { storage, millisecondsToLive, migrations } = options;\n    storage = compatStorage(storage);\n    if (millisecondsToLive !== undefined) {\n        storage = timeoutStorage(storage, millisecondsToLive);\n    }\n    if (migrations !== undefined) {\n        storage = migrationStorage(storage, migrations);\n    }\n    return wrapStorage(storage);\n}\nfunction compatStorage(storage) {\n    return {\n        read: async (k) => {\n            const v = await storage.read(k);\n            return isEnhance(v) ? v : { __d: v };\n        },\n        write: (k, v) => storage.write(k, v),\n        delete: (k) => storage.delete(k),\n    };\n}\nfunction timeoutStorage(storage, millisecondsToLive) {\n    const ttlStorage = {\n        read: async (k) => {\n            const value = await storage.read(k);\n            if (value === undefined)\n                return undefined;\n            if (value.e === undefined) {\n                await ttlStorage.write(k, value);\n                return value;\n            }\n            if (value.e < Date.now()) {\n                await ttlStorage.delete(k);\n                return undefined;\n            }\n            return value;\n        },\n        write: async (k, v) => {\n            v.e = addExpiryDate(v, millisecondsToLive).expires;\n            await storage.write(k, v);\n        },\n        delete: (k) => storage.delete(k),\n    };\n    return ttlStorage;\n}\nfunction migrationStorage(storage, migrations) {\n    const versions = Object.keys(migrations)\n        .map((v) => parseInt(v))\n        .sort((a, b) => a - b);\n    const count = versions.length;\n    if (count === 0)\n        throw new Error(\"No migrations given!\");\n    const earliest = versions[0];\n    const last = count - 1;\n    const latest = versions[last];\n    const index = new Map();\n    versions.forEach((v, i) => index.set(v, i)); // inverse array lookup\n    function nextAfter(current) {\n        // TODO: use `findLastIndex` with Node 18\n        let i = last;\n        while (current <= versions[i])\n            i--;\n        return i;\n        // return versions.findLastIndex((v) => v < current)\n    }\n    return {\n        read: async (k) => {\n            var _a;\n            const val = await storage.read(k);\n            if (val === undefined)\n                return val;\n            let { __d: value, v: current = earliest - 1 } = val;\n            let i = 1 + ((_a = index.get(current)) !== null && _a !== void 0 ? _a : nextAfter(current));\n            for (; i < count; i++)\n                value = migrations[versions[i]](value);\n            return { ...val, v: latest, __d: value };\n        },\n        write: (k, v) => storage.write(k, { v: latest, ...v }),\n        delete: (k) => storage.delete(k),\n    };\n}\nfunction wrapStorage(storage) {\n    return {\n        read: (k) => Promise.resolve(storage.read(k)).then((v) => v === null || v === void 0 ? void 0 : v.__d),\n        write: (k, v) => storage.write(k, { __d: v }),\n        delete: (k) => storage.delete(k),\n    };\n}\n// === Memory storage adapter\n/**\n * The memory session storage is a built-in storage adapter that saves your\n * session data in RAM using a regular JavaScript `Map` object. If you use this\n * storage adapter, all sessions will be lost when your process terminates or\n * restarts. Hence, you should only use it for short-lived data that is not\n * important to persist.\n *\n * This class is used as default if you do not provide a storage adapter, e.g.\n * to your database.\n *\n * This storage adapter features expiring sessions. When instantiating this\n * class yourself, you can pass a time to live in milliseconds that will be used\n * for each session object. If a session for a user expired, the session data\n * will be discarded on its first read, and a fresh session object as returned\n * by the `initial` option (or undefined) will be put into place.\n */\nclass MemorySessionStorage {\n    /**\n     * Constructs a new memory session storage with the given time to live. Note\n     * that this storage adapter will not store your data permanently.\n     *\n     * @param timeToLive TTL in milliseconds, default is `Infinity`\n     */\n    constructor(timeToLive) {\n        this.timeToLive = timeToLive;\n        /**\n         * Internally used `Map` instance that stores the session data\n         */\n        this.storage = new Map();\n    }\n    read(key) {\n        const value = this.storage.get(key);\n        if (value === undefined)\n            return undefined;\n        if (value.expires !== undefined && value.expires < Date.now()) {\n            this.delete(key);\n            return undefined;\n        }\n        return value.session;\n    }\n    /**\n     * @deprecated Use {@link readAllValues} instead\n     */\n    readAll() {\n        return this.readAllValues();\n    }\n    readAllKeys() {\n        return Array.from(this.storage.keys());\n    }\n    readAllValues() {\n        return Array\n            .from(this.storage.keys())\n            .map((key) => this.read(key))\n            .filter((value) => value !== undefined);\n    }\n    readAllEntries() {\n        return Array.from(this.storage.keys())\n            .map((key) => [key, this.read(key)])\n            .filter((pair) => pair[1] !== undefined);\n    }\n    has(key) {\n        return this.storage.has(key);\n    }\n    write(key, value) {\n        this.storage.set(key, addExpiryDate(value, this.timeToLive));\n    }\n    delete(key) {\n        this.storage.delete(key);\n    }\n}\nexports.MemorySessionStorage = MemorySessionStorage;\nfunction addExpiryDate(value, ttl) {\n    if (ttl !== undefined && ttl < Infinity) {\n        const now = Date.now();\n        return { session: value, expires: now + ttl };\n    }\n    else {\n        return { session: value };\n    }\n}\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adapters = void 0;\nconst SECRET_HEADER = \"X-Telegram-Bot-Api-Secret-Token\";\nconst SECRET_HEADER_LOWERCASE = SECRET_HEADER.toLowerCase();\nconst WRONG_TOKEN_ERROR = \"secret token is wrong\";\nconst ok = () => new Response(null, { status: 200 });\nconst okJson = (json) => new Response(json, {\n    status: 200,\n    headers: { \"Content-Type\": \"application/json\" },\n});\nconst unauthorized = () => new Response('\"unauthorized\"', {\n    status: 401,\n    statusText: WRONG_TOKEN_ERROR,\n});\n/** AWS lambda serverless functions */\nconst awsLambda = (event, _context, callback) => {\n    var _a;\n    return ({\n        update: JSON.parse((_a = event.body) !== null && _a !== void 0 ? _a : \"{}\"),\n        header: event.headers[SECRET_HEADER],\n        end: () => callback(null, { statusCode: 200 }),\n        respond: (json) => callback(null, {\n            statusCode: 200,\n            headers: { \"Content-Type\": \"application/json\" },\n            body: json,\n        }),\n        unauthorized: () => callback(null, { statusCode: 401 }),\n    });\n};\n/** AWS lambda async/await serverless functions */\nconst awsLambdaAsync = (event, _context) => {\n    var _a;\n    // deno-lint-ignore no-explicit-any\n    let resolveResponse;\n    return {\n        update: JSON.parse((_a = event.body) !== null && _a !== void 0 ? _a : \"{}\"),\n        header: event.headers[SECRET_HEADER],\n        end: () => resolveResponse({ statusCode: 200 }),\n        respond: (json) => resolveResponse({\n            statusCode: 200,\n            headers: { \"Content-Type\": \"application/json\" },\n            body: json,\n        }),\n        unauthorized: () => resolveResponse({ statusCode: 401 }),\n        handlerReturn: new Promise((resolve) => {\n            resolveResponse = resolve;\n        }),\n    };\n};\n/** Azure Functions v3 and v4 */\nconst azure = (context, request) => {\n    var _a, _b;\n    return ({\n        update: Promise.resolve(request.body),\n        header: (_b = (_a = context.res) === null || _a === void 0 ? void 0 : _a.headers) === null || _b === void 0 ? void 0 : _b[SECRET_HEADER],\n        end: () => (context.res = {\n            status: 200,\n            body: \"\",\n        }),\n        respond: (json) => {\n            var _a, _b, _c, _d;\n            (_b = (_a = context.res) === null || _a === void 0 ? void 0 : _a.set) === null || _b === void 0 ? void 0 : _b.call(_a, \"Content-Type\", \"application/json\");\n            (_d = (_c = context.res) === null || _c === void 0 ? void 0 : _c.send) === null || _d === void 0 ? void 0 : _d.call(_c, json);\n        },\n        unauthorized: () => {\n            var _a, _b;\n            (_b = (_a = context.res) === null || _a === void 0 ? void 0 : _a.send) === null || _b === void 0 ? void 0 : _b.call(_a, 401, WRONG_TOKEN_ERROR);\n        },\n    });\n};\nconst azureV4 = (request) => {\n    let resolveResponse;\n    return {\n        update: Promise.resolve(request.json()),\n        header: request.headers.get(SECRET_HEADER) || undefined,\n        end: () => resolveResponse({ status: 204 }),\n        respond: (json) => resolveResponse({ jsonBody: json }),\n        unauthorized: () => resolveResponse({ status: 401, body: WRONG_TOKEN_ERROR }),\n        handlerReturn: new Promise((resolve) => {\n            resolveResponse = resolve;\n        }),\n    };\n};\n/** Bun.serve */\nconst bun = (request) => {\n    let resolveResponse;\n    return {\n        update: request.json(),\n        header: request.headers.get(SECRET_HEADER) || undefined,\n        end: () => {\n            resolveResponse(ok());\n        },\n        respond: (json) => {\n            resolveResponse(okJson(json));\n        },\n        unauthorized: () => {\n            resolveResponse(unauthorized());\n        },\n        handlerReturn: new Promise((resolve) => {\n            resolveResponse = resolve;\n        }),\n    };\n};\n/** Native CloudFlare workers (service worker) */\nconst cloudflare = (event) => {\n    let resolveResponse;\n    event.respondWith(new Promise((resolve) => {\n        resolveResponse = resolve;\n    }));\n    return {\n        update: event.request.json(),\n        header: event.request.headers.get(SECRET_HEADER) || undefined,\n        end: () => {\n            resolveResponse(ok());\n        },\n        respond: (json) => {\n            resolveResponse(okJson(json));\n        },\n        unauthorized: () => {\n            resolveResponse(unauthorized());\n        },\n    };\n};\n/** Native CloudFlare workers (module worker) */\nconst cloudflareModule = (request) => {\n    let resolveResponse;\n    return {\n        update: request.json(),\n        header: request.headers.get(SECRET_HEADER) || undefined,\n        end: () => {\n            resolveResponse(ok());\n        },\n        respond: (json) => {\n            resolveResponse(okJson(json));\n        },\n        unauthorized: () => {\n            resolveResponse(unauthorized());\n        },\n        handlerReturn: new Promise((resolve) => {\n            resolveResponse = resolve;\n        }),\n    };\n};\n/** express web framework */\nconst express = (req, res) => ({\n    update: Promise.resolve(req.body),\n    header: req.header(SECRET_HEADER),\n    end: () => res.end(),\n    respond: (json) => {\n        res.set(\"Content-Type\", \"application/json\");\n        res.send(json);\n    },\n    unauthorized: () => {\n        res.status(401).send(WRONG_TOKEN_ERROR);\n    },\n});\n/** fastify web framework */\nconst fastify = (request, reply) => ({\n    update: Promise.resolve(request.body),\n    header: request.headers[SECRET_HEADER_LOWERCASE],\n    end: () => reply.status(200).send(),\n    respond: (json) => reply.headers({ \"Content-Type\": \"application/json\" }).send(json),\n    unauthorized: () => reply.code(401).send(WRONG_TOKEN_ERROR),\n});\n/** hono web framework */\nconst hono = (c) => {\n    let resolveResponse;\n    return {\n        update: c.req.json(),\n        header: c.req.header(SECRET_HEADER),\n        end: () => {\n            resolveResponse(c.body(\"\"));\n        },\n        respond: (json) => {\n            resolveResponse(c.json(json));\n        },\n        unauthorized: () => {\n            c.status(401);\n            resolveResponse(c.body(\"\"));\n        },\n        handlerReturn: new Promise((resolve) => {\n            resolveResponse = resolve;\n        }),\n    };\n};\n/** Node.js native 'http' and 'https' modules */\nconst http = (req, res) => {\n    const secretHeaderFromRequest = req.headers[SECRET_HEADER_LOWERCASE];\n    return {\n        update: new Promise((resolve, reject) => {\n            const chunks = [];\n            req.on(\"data\", (chunk) => chunks.push(chunk))\n                .once(\"end\", () => {\n                // @ts-ignore `Buffer` is Node-only\n                // deno-lint-ignore no-node-globals\n                const raw = Buffer.concat(chunks).toString(\"utf-8\");\n                resolve(JSON.parse(raw));\n            })\n                .once(\"error\", reject);\n        }),\n        header: Array.isArray(secretHeaderFromRequest)\n            ? secretHeaderFromRequest[0]\n            : secretHeaderFromRequest,\n        end: () => res.end(),\n        respond: (json) => res\n            .writeHead(200, { \"Content-Type\": \"application/json\" })\n            .end(json),\n        unauthorized: () => res.writeHead(401).end(WRONG_TOKEN_ERROR),\n    };\n};\n/** koa web framework */\nconst koa = (ctx) => ({\n    update: Promise.resolve(ctx.request.body),\n    header: ctx.get(SECRET_HEADER) || undefined,\n    end: () => {\n        ctx.body = \"\";\n    },\n    respond: (json) => {\n        ctx.set(\"Content-Type\", \"application/json\");\n        ctx.response.body = json;\n    },\n    unauthorized: () => {\n        ctx.status = 401;\n    },\n});\n/** Next.js Serverless Functions */\nconst nextJs = (request, response) => ({\n    update: Promise.resolve(request.body),\n    header: request.headers[SECRET_HEADER_LOWERCASE],\n    end: () => response.end(),\n    respond: (json) => response.status(200).json(json),\n    unauthorized: () => response.status(401).send(WRONG_TOKEN_ERROR),\n});\n/** nhttp web framework */\nconst nhttp = (rev) => ({\n    update: Promise.resolve(rev.body),\n    header: rev.headers.get(SECRET_HEADER) || undefined,\n    end: () => rev.response.sendStatus(200),\n    respond: (json) => rev.response.status(200).send(json),\n    unauthorized: () => rev.response.status(401).send(WRONG_TOKEN_ERROR),\n});\n/** oak web framework */\nconst oak = (ctx) => ({\n    update: ctx.request.body.json(),\n    header: ctx.request.headers.get(SECRET_HEADER) || undefined,\n    end: () => {\n        ctx.response.status = 200;\n    },\n    respond: (json) => {\n        ctx.response.type = \"json\";\n        ctx.response.body = json;\n    },\n    unauthorized: () => {\n        ctx.response.status = 401;\n    },\n});\n/** Deno.serve */\nconst serveHttp = (requestEvent) => ({\n    update: requestEvent.request.json(),\n    header: requestEvent.request.headers.get(SECRET_HEADER) || undefined,\n    end: () => requestEvent.respondWith(ok()),\n    respond: (json) => requestEvent.respondWith(okJson(json)),\n    unauthorized: () => requestEvent.respondWith(unauthorized()),\n});\n/** std/http web server */\nconst stdHttp = (req) => {\n    let resolveResponse;\n    return {\n        update: req.json(),\n        header: req.headers.get(SECRET_HEADER) || undefined,\n        end: () => {\n            if (resolveResponse)\n                resolveResponse(ok());\n        },\n        respond: (json) => {\n            if (resolveResponse)\n                resolveResponse(okJson(json));\n        },\n        unauthorized: () => {\n            if (resolveResponse)\n                resolveResponse(unauthorized());\n        },\n        handlerReturn: new Promise((resolve) => {\n            resolveResponse = resolve;\n        }),\n    };\n};\n/** Sveltekit Serverless Functions */\nconst sveltekit = ({ request }) => {\n    let resolveResponse;\n    return {\n        update: Promise.resolve(request.json()),\n        header: request.headers.get(SECRET_HEADER) || undefined,\n        end: () => {\n            if (resolveResponse)\n                resolveResponse(ok());\n        },\n        respond: (json) => {\n            if (resolveResponse)\n                resolveResponse(okJson(json));\n        },\n        unauthorized: () => {\n            if (resolveResponse)\n                resolveResponse(unauthorized());\n        },\n        handlerReturn: new Promise((resolve) => {\n            resolveResponse = resolve;\n        }),\n    };\n};\n/** worktop Cloudflare workers framework */\nconst worktop = (req, res) => {\n    var _a;\n    return ({\n        update: Promise.resolve(req.json()),\n        header: (_a = req.headers.get(SECRET_HEADER)) !== null && _a !== void 0 ? _a : undefined,\n        end: () => res.end(null),\n        respond: (json) => res.send(200, json),\n        unauthorized: () => res.send(401, WRONG_TOKEN_ERROR),\n    });\n};\nconst elysia = (ctx) => {\n    // @note upgrade target to use modern code?\n    // const { promise, resolve } = Promise.withResolvers<string>();\n    let resolve;\n    const handlerReturn = new Promise((res) => resolve = res);\n    return {\n        // @note technically the type shouldn't be limited to Promise, because it's fine to await plain values as well\n        update: Promise.resolve(ctx.body),\n        header: ctx.headers[SECRET_HEADER_LOWERCASE],\n        end() {\n            resolve(\"\");\n        },\n        respond(json) {\n            // @note since json is passed as string here, we gotta define proper content-type\n            ctx.set.headers[\"content-type\"] = \"application/json\";\n            resolve(json);\n        },\n        unauthorized() {\n            ctx.set.status = 401;\n            resolve(\"\");\n        },\n        handlerReturn,\n    };\n};\n// Please open a pull request if you want to add another adapter\nexports.adapters = {\n    \"aws-lambda\": awsLambda,\n    \"aws-lambda-async\": awsLambdaAsync,\n    azure,\n    \"azure-v4\": azureV4,\n    bun,\n    cloudflare,\n    \"cloudflare-mod\": cloudflareModule,\n    elysia,\n    express,\n    fastify,\n    hono,\n    http,\n    https: http,\n    koa,\n    \"next-js\": nextJs,\n    nhttp,\n    oak,\n    serveHttp,\n    \"std/http\": stdHttp,\n    sveltekit,\n    worktop,\n};\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.webhookCallback = webhookCallback;\nconst platform_node_js_1 = require(\"../platform.node.js\");\nconst frameworks_js_1 = require(\"./frameworks.js\");\nconst debugErr = (0, platform_node_js_1.debug)(\"grammy:error\");\nconst callbackAdapter = (update, callback, header, unauthorized = () => callback('\"unauthorized\"')) => ({\n    update: Promise.resolve(update),\n    respond: callback,\n    header,\n    unauthorized,\n});\nconst adapters = { ...frameworks_js_1.adapters, callback: callbackAdapter };\nfunction webhookCallback(bot, adapter = platform_node_js_1.defaultAdapter, onTimeout, timeoutMilliseconds, secretToken) {\n    if (bot.isRunning()) {\n        throw new Error(\"Bot is already running via long polling, the webhook setup won't receive any updates!\");\n    }\n    else {\n        bot.start = () => {\n            throw new Error(\"You already started the bot via webhooks, calling `bot.start()` starts the bot with long polling and this will prevent your webhook setup from receiving any updates!\");\n        };\n    }\n    const { onTimeout: timeout = \"throw\", timeoutMilliseconds: ms = 10000, secretToken: token, } = typeof onTimeout === \"object\"\n        ? onTimeout\n        : { onTimeout, timeoutMilliseconds, secretToken };\n    let initialized = false;\n    const server = typeof adapter === \"string\"\n        ? adapters[adapter]\n        : adapter;\n    return async (...args) => {\n        const { update, respond, unauthorized, end, handlerReturn, header } = server(...args);\n        if (!initialized) {\n            // Will dedupe concurrently incoming calls from several updates\n            await bot.init();\n            initialized = true;\n        }\n        if (header !== token) {\n            await unauthorized();\n            // TODO: investigate deno bug that happens when this console logging is removed\n            console.log(handlerReturn);\n            return handlerReturn;\n        }\n        let usedWebhookReply = false;\n        const webhookReplyEnvelope = {\n            async send(json) {\n                usedWebhookReply = true;\n                await respond(json);\n            },\n        };\n        await timeoutIfNecessary(bot.handleUpdate(await update, webhookReplyEnvelope), typeof timeout === \"function\" ? () => timeout(...args) : timeout, ms);\n        if (!usedWebhookReply)\n            end === null || end === void 0 ? void 0 : end();\n        return handlerReturn;\n    };\n}\nfunction timeoutIfNecessary(task, onTimeout, timeout) {\n    if (timeout === Infinity)\n        return task;\n    return new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            debugErr(`Request timed out after ${timeout} ms`);\n            if (onTimeout === \"throw\") {\n                reject(new Error(`Request timed out after ${timeout} ms`));\n            }\n            else {\n                if (typeof onTimeout === \"function\")\n                    onTimeout();\n                resolve();\n            }\n            const now = Date.now();\n            task.finally(() => {\n                const diff = Date.now() - now;\n                debugErr(`Request completed ${diff} ms after timeout!`);\n            });\n        }, timeout);\n        task.then(resolve)\n            .catch(reject)\n            .finally(() => clearTimeout(handle));\n    });\n}\n",
    "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpError = exports.GrammyError = exports.Api = exports.matchFilter = exports.Composer = exports.Context = exports.InputFile = exports.BotError = exports.Bot = void 0;\n// Commonly used stuff\nvar bot_js_1 = require(\"./bot.js\");\nObject.defineProperty(exports, \"Bot\", { enumerable: true, get: function () { return bot_js_1.Bot; } });\nObject.defineProperty(exports, \"BotError\", { enumerable: true, get: function () { return bot_js_1.BotError; } });\nvar types_js_1 = require(\"./types.js\");\nObject.defineProperty(exports, \"InputFile\", { enumerable: true, get: function () { return types_js_1.InputFile; } });\nvar context_js_1 = require(\"./context.js\");\nObject.defineProperty(exports, \"Context\", { enumerable: true, get: function () { return context_js_1.Context; } });\n// Convenience stuff, built-in plugins, and helpers\n__exportStar(require(\"./convenience/constants.js\"), exports);\n__exportStar(require(\"./convenience/inline_query.js\"), exports);\n__exportStar(require(\"./convenience/input_media.js\"), exports);\n__exportStar(require(\"./convenience/keyboard.js\"), exports);\n__exportStar(require(\"./convenience/session.js\"), exports);\n__exportStar(require(\"./convenience/webhook.js\"), exports);\n// A little more advanced stuff\nvar composer_js_1 = require(\"./composer.js\");\nObject.defineProperty(exports, \"Composer\", { enumerable: true, get: function () { return composer_js_1.Composer; } });\nvar filter_js_1 = require(\"./filter.js\");\nObject.defineProperty(exports, \"matchFilter\", { enumerable: true, get: function () { return filter_js_1.matchFilter; } });\n// Internal stuff for expert users\nvar api_js_1 = require(\"./core/api.js\");\nObject.defineProperty(exports, \"Api\", { enumerable: true, get: function () { return api_js_1.Api; } });\nvar error_js_1 = require(\"./core/error.js\");\nObject.defineProperty(exports, \"GrammyError\", { enumerable: true, get: function () { return error_js_1.GrammyError; } });\nObject.defineProperty(exports, \"HttpError\", { enumerable: true, get: function () { return error_js_1.HttpError; } });\n",
    "/** A special constant with type `never` */\nexport const NEVER = Object.freeze({\n    status: \"aborted\",\n});\nexport /*@__NO_SIDE_EFFECTS__*/ function $constructor(name, initializer, params) {\n    function init(inst, def) {\n        var _a;\n        Object.defineProperty(inst, \"_zod\", {\n            value: inst._zod ?? {},\n            enumerable: false,\n        });\n        (_a = inst._zod).traits ?? (_a.traits = new Set());\n        inst._zod.traits.add(name);\n        initializer(inst, def);\n        // support prototype modifications\n        for (const k in _.prototype) {\n            if (!(k in inst))\n                Object.defineProperty(inst, k, { value: _.prototype[k].bind(inst) });\n        }\n        inst._zod.constr = _;\n        inst._zod.def = def;\n    }\n    // doesn't work if Parent has a constructor with arguments\n    const Parent = params?.Parent ?? Object;\n    class Definition extends Parent {\n    }\n    Object.defineProperty(Definition, \"name\", { value: name });\n    function _(def) {\n        var _a;\n        const inst = params?.Parent ? new Definition() : this;\n        init(inst, def);\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        for (const fn of inst._zod.deferred) {\n            fn();\n        }\n        return inst;\n    }\n    Object.defineProperty(_, \"init\", { value: init });\n    Object.defineProperty(_, Symbol.hasInstance, {\n        value: (inst) => {\n            if (params?.Parent && inst instanceof params.Parent)\n                return true;\n            return inst?._zod?.traits?.has(name);\n        },\n    });\n    Object.defineProperty(_, \"name\", { value: name });\n    return _;\n}\n//////////////////////////////   UTILITIES   ///////////////////////////////////////\nexport const $brand = Symbol(\"zod_brand\");\nexport class $ZodAsyncError extends Error {\n    constructor() {\n        super(`Encountered Promise during synchronous parse. Use .parseAsync() instead.`);\n    }\n}\nexport const globalConfig = {};\nexport function config(newConfig) {\n    if (newConfig)\n        Object.assign(globalConfig, newConfig);\n    return globalConfig;\n}\n",
    "// functions\nexport function assertEqual(val) {\n    return val;\n}\nexport function assertNotEqual(val) {\n    return val;\n}\nexport function assertIs(_arg) { }\nexport function assertNever(_x) {\n    throw new Error();\n}\nexport function assert(_) { }\nexport function getEnumValues(entries) {\n    const numericValues = Object.values(entries).filter((v) => typeof v === \"number\");\n    const values = Object.entries(entries)\n        .filter(([k, _]) => numericValues.indexOf(+k) === -1)\n        .map(([_, v]) => v);\n    return values;\n}\nexport function joinValues(array, separator = \"|\") {\n    return array.map((val) => stringifyPrimitive(val)).join(separator);\n}\nexport function jsonStringifyReplacer(_, value) {\n    if (typeof value === \"bigint\")\n        return value.toString();\n    return value;\n}\nexport function cached(getter) {\n    const set = false;\n    return {\n        get value() {\n            if (!set) {\n                const value = getter();\n                Object.defineProperty(this, \"value\", { value });\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n    };\n}\nexport function nullish(input) {\n    return input === null || input === undefined;\n}\nexport function cleanRegex(source) {\n    const start = source.startsWith(\"^\") ? 1 : 0;\n    const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n    return source.slice(start, end);\n}\nexport function floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport function defineLazy(object, key, getter) {\n    const set = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!set) {\n                const value = getter();\n                object[key] = value;\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n        set(v) {\n            Object.defineProperty(object, key, {\n                value: v,\n                // configurable: true,\n            });\n            // object[key] = v;\n        },\n        configurable: true,\n    });\n}\nexport function assignProp(target, prop, value) {\n    Object.defineProperty(target, prop, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    });\n}\nexport function getElementAtPath(obj, path) {\n    if (!path)\n        return obj;\n    return path.reduce((acc, key) => acc?.[key], obj);\n}\nexport function promiseAllObject(promisesObj) {\n    const keys = Object.keys(promisesObj);\n    const promises = keys.map((key) => promisesObj[key]);\n    return Promise.all(promises).then((results) => {\n        const resolvedObj = {};\n        for (let i = 0; i < keys.length; i++) {\n            resolvedObj[keys[i]] = results[i];\n        }\n        return resolvedObj;\n    });\n}\nexport function randomString(length = 10) {\n    const chars = \"abcdefghijklmnopqrstuvwxyz\";\n    let str = \"\";\n    for (let i = 0; i < length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n}\nexport function esc(str) {\n    return JSON.stringify(str);\n}\nexport const captureStackTrace = Error.captureStackTrace\n    ? Error.captureStackTrace\n    : (..._args) => { };\nexport function isObject(data) {\n    return typeof data === \"object\" && data !== null && !Array.isArray(data);\n}\nexport const allowsEval = cached(() => {\n    if (typeof navigator !== \"undefined\" && navigator?.userAgent?.includes(\"Cloudflare\")) {\n        return false;\n    }\n    try {\n        const F = Function;\n        new F(\"\");\n        return true;\n    }\n    catch (_) {\n        return false;\n    }\n});\nexport function isPlainObject(o) {\n    if (isObject(o) === false)\n        return false;\n    // modified constructor\n    const ctor = o.constructor;\n    if (ctor === undefined)\n        return true;\n    // modified prototype\n    const prot = ctor.prototype;\n    if (isObject(prot) === false)\n        return false;\n    // ctor doesn't have static `isPrototypeOf`\n    if (Object.prototype.hasOwnProperty.call(prot, \"isPrototypeOf\") === false) {\n        return false;\n    }\n    return true;\n}\nexport function numKeys(data) {\n    let keyCount = 0;\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            keyCount++;\n        }\n    }\n    return keyCount;\n}\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return \"undefined\";\n        case \"string\":\n            return \"string\";\n        case \"number\":\n            return Number.isNaN(data) ? \"nan\" : \"number\";\n        case \"boolean\":\n            return \"boolean\";\n        case \"function\":\n            return \"function\";\n        case \"bigint\":\n            return \"bigint\";\n        case \"symbol\":\n            return \"symbol\";\n        case \"object\":\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return \"promise\";\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return \"map\";\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return \"set\";\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return \"date\";\n            }\n            if (typeof File !== \"undefined\" && data instanceof File) {\n                return \"file\";\n            }\n            return \"object\";\n        default:\n            throw new Error(`Unknown data type: ${t}`);\n    }\n};\nexport const propertyKeyTypes = new Set([\"string\", \"number\", \"symbol\"]);\nexport const primitiveTypes = new Set([\"string\", \"number\", \"bigint\", \"boolean\", \"symbol\", \"undefined\"]);\nexport function escapeRegex(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n// zod-specific utils\nexport function clone(inst, def, params) {\n    const cl = new inst._zod.constr(def ?? inst._zod.def);\n    if (!def || params?.parent)\n        cl._zod.parent = inst;\n    return cl;\n}\nexport function normalizeParams(_params) {\n    const params = _params;\n    if (!params)\n        return {};\n    if (typeof params === \"string\")\n        return { error: () => params };\n    if (params?.message !== undefined) {\n        if (params?.error !== undefined)\n            throw new Error(\"Cannot specify both `message` and `error` params\");\n        params.error = params.message;\n    }\n    delete params.message;\n    if (typeof params.error === \"string\")\n        return { ...params, error: () => params.error };\n    return params;\n}\nexport function createTransparentProxy(getter) {\n    let target;\n    return new Proxy({}, {\n        get(_, prop, receiver) {\n            target ?? (target = getter());\n            return Reflect.get(target, prop, receiver);\n        },\n        set(_, prop, value, receiver) {\n            target ?? (target = getter());\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has(_, prop) {\n            target ?? (target = getter());\n            return Reflect.has(target, prop);\n        },\n        deleteProperty(_, prop) {\n            target ?? (target = getter());\n            return Reflect.deleteProperty(target, prop);\n        },\n        ownKeys(_) {\n            target ?? (target = getter());\n            return Reflect.ownKeys(target);\n        },\n        getOwnPropertyDescriptor(_, prop) {\n            target ?? (target = getter());\n            return Reflect.getOwnPropertyDescriptor(target, prop);\n        },\n        defineProperty(_, prop, descriptor) {\n            target ?? (target = getter());\n            return Reflect.defineProperty(target, prop, descriptor);\n        },\n    });\n}\nexport function stringifyPrimitive(value) {\n    if (typeof value === \"bigint\")\n        return value.toString() + \"n\";\n    if (typeof value === \"string\")\n        return `\"${value}\"`;\n    return `${value}`;\n}\nexport function optionalKeys(shape) {\n    return Object.keys(shape).filter((k) => {\n        return shape[k]._zod.optin === \"optional\" && shape[k]._zod.optout === \"optional\";\n    });\n}\nexport const NUMBER_FORMAT_RANGES = {\n    safeint: [Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],\n    int32: [-2147483648, 2147483647],\n    uint32: [0, 4294967295],\n    float32: [-3.4028234663852886e38, 3.4028234663852886e38],\n    float64: [-Number.MAX_VALUE, Number.MAX_VALUE],\n};\nexport const BIGINT_FORMAT_RANGES = {\n    int64: [/* @__PURE__*/ BigInt(\"-9223372036854775808\"), /* @__PURE__*/ BigInt(\"9223372036854775807\")],\n    uint64: [/* @__PURE__*/ BigInt(0), /* @__PURE__*/ BigInt(\"18446744073709551615\")],\n};\nexport function pick(schema, mask) {\n    const newShape = {};\n    const currDef = schema._zod.def; //.shape;\n    for (const key in mask) {\n        if (!(key in currDef.shape)) {\n            throw new Error(`Unrecognized key: \"${key}\"`);\n        }\n        if (!mask[key])\n            continue;\n        // pick key\n        newShape[key] = currDef.shape[key];\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape: newShape,\n        checks: [],\n    });\n}\nexport function omit(schema, mask) {\n    const newShape = { ...schema._zod.def.shape };\n    const currDef = schema._zod.def; //.shape;\n    for (const key in mask) {\n        if (!(key in currDef.shape)) {\n            throw new Error(`Unrecognized key: \"${key}\"`);\n        }\n        if (!mask[key])\n            continue;\n        delete newShape[key];\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape: newShape,\n        checks: [],\n    });\n}\nexport function extend(schema, shape) {\n    if (!isPlainObject(shape)) {\n        throw new Error(\"Invalid input to extend: expected a plain object\");\n    }\n    const def = {\n        ...schema._zod.def,\n        get shape() {\n            const _shape = { ...schema._zod.def.shape, ...shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        checks: [], // delete existing checks\n    };\n    return clone(schema, def);\n}\nexport function merge(a, b) {\n    return clone(a, {\n        ...a._zod.def,\n        get shape() {\n            const _shape = { ...a._zod.def.shape, ...b._zod.def.shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        catchall: b._zod.def.catchall,\n        checks: [], // delete existing checks\n    });\n}\nexport function partial(Class, schema, mask) {\n    const oldShape = schema._zod.def.shape;\n    const shape = { ...oldShape };\n    if (mask) {\n        for (const key in mask) {\n            if (!(key in oldShape)) {\n                throw new Error(`Unrecognized key: \"${key}\"`);\n            }\n            if (!mask[key])\n                continue;\n            // if (oldShape[key]!._zod.optin === \"optional\") continue;\n            shape[key] = Class\n                ? new Class({\n                    type: \"optional\",\n                    innerType: oldShape[key],\n                })\n                : oldShape[key];\n        }\n    }\n    else {\n        for (const key in oldShape) {\n            // if (oldShape[key]!._zod.optin === \"optional\") continue;\n            shape[key] = Class\n                ? new Class({\n                    type: \"optional\",\n                    innerType: oldShape[key],\n                })\n                : oldShape[key];\n        }\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape,\n        checks: [],\n    });\n}\nexport function required(Class, schema, mask) {\n    const oldShape = schema._zod.def.shape;\n    const shape = { ...oldShape };\n    if (mask) {\n        for (const key in mask) {\n            if (!(key in shape)) {\n                throw new Error(`Unrecognized key: \"${key}\"`);\n            }\n            if (!mask[key])\n                continue;\n            // overwrite with non-optional\n            shape[key] = new Class({\n                type: \"nonoptional\",\n                innerType: oldShape[key],\n            });\n        }\n    }\n    else {\n        for (const key in oldShape) {\n            // overwrite with non-optional\n            shape[key] = new Class({\n                type: \"nonoptional\",\n                innerType: oldShape[key],\n            });\n        }\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape,\n        // optional: [],\n        checks: [],\n    });\n}\nexport function aborted(x, startIndex = 0) {\n    for (let i = startIndex; i < x.issues.length; i++) {\n        if (x.issues[i]?.continue !== true)\n            return true;\n    }\n    return false;\n}\nexport function prefixIssues(path, issues) {\n    return issues.map((iss) => {\n        var _a;\n        (_a = iss).path ?? (_a.path = []);\n        iss.path.unshift(path);\n        return iss;\n    });\n}\nexport function unwrapMessage(message) {\n    return typeof message === \"string\" ? message : message?.message;\n}\nexport function finalizeIssue(iss, ctx, config) {\n    const full = { ...iss, path: iss.path ?? [] };\n    // for backwards compatibility\n    if (!iss.message) {\n        const message = unwrapMessage(iss.inst?._zod.def?.error?.(iss)) ??\n            unwrapMessage(ctx?.error?.(iss)) ??\n            unwrapMessage(config.customError?.(iss)) ??\n            unwrapMessage(config.localeError?.(iss)) ??\n            \"Invalid input\";\n        full.message = message;\n    }\n    // delete (full as any).def;\n    delete full.inst;\n    delete full.continue;\n    if (!ctx?.reportInput) {\n        delete full.input;\n    }\n    return full;\n}\nexport function getSizableOrigin(input) {\n    if (input instanceof Set)\n        return \"set\";\n    if (input instanceof Map)\n        return \"map\";\n    if (input instanceof File)\n        return \"file\";\n    return \"unknown\";\n}\nexport function getLengthableOrigin(input) {\n    if (Array.isArray(input))\n        return \"array\";\n    if (typeof input === \"string\")\n        return \"string\";\n    return \"unknown\";\n}\nexport function issue(...args) {\n    const [iss, input, inst] = args;\n    if (typeof iss === \"string\") {\n        return {\n            message: iss,\n            code: \"custom\",\n            input,\n            inst,\n        };\n    }\n    return { ...iss };\n}\nexport function cleanEnum(obj) {\n    return Object.entries(obj)\n        .filter(([k, _]) => {\n        // return true if NaN, meaning it's not a number, thus a string key\n        return Number.isNaN(Number.parseInt(k, 10));\n    })\n        .map((el) => el[1]);\n}\n// instanceof\nexport class Class {\n    constructor(..._args) { }\n}\n",
    "import { $constructor } from \"./core.js\";\nimport * as util from \"./util.js\";\nconst initializer = (inst, def) => {\n    inst.name = \"$ZodError\";\n    Object.defineProperty(inst, \"_zod\", {\n        value: inst._zod,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"issues\", {\n        value: def,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"message\", {\n        get() {\n            return JSON.stringify(def, util.jsonStringifyReplacer, 2);\n        },\n        enumerable: true,\n        // configurable: false,\n    });\n    Object.defineProperty(inst, \"toString\", {\n        value: () => inst.message,\n        enumerable: false,\n    });\n};\nexport const $ZodError = $constructor(\"$ZodError\", initializer);\nexport const $ZodRealError = $constructor(\"$ZodError\", initializer, { Parent: Error });\nexport function flattenError(error, mapper = (issue) => issue.message) {\n    const fieldErrors = {};\n    const formErrors = [];\n    for (const sub of error.issues) {\n        if (sub.path.length > 0) {\n            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n            fieldErrors[sub.path[0]].push(mapper(sub));\n        }\n        else {\n            formErrors.push(mapper(sub));\n        }\n    }\n    return { formErrors, fieldErrors };\n}\nexport function formatError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const fieldErrors = { _errors: [] };\n    const processError = (error) => {\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                issue.errors.map((issues) => processError({ issues }));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.path.length === 0) {\n                fieldErrors._errors.push(mapper(issue));\n            }\n            else {\n                let curr = fieldErrors;\n                let i = 0;\n                while (i < issue.path.length) {\n                    const el = issue.path[i];\n                    const terminal = i === issue.path.length - 1;\n                    if (!terminal) {\n                        curr[el] = curr[el] || { _errors: [] };\n                    }\n                    else {\n                        curr[el] = curr[el] || { _errors: [] };\n                        curr[el]._errors.push(mapper(issue));\n                    }\n                    curr = curr[el];\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return fieldErrors;\n}\nexport function treeifyError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const result = { errors: [] };\n    const processError = (error, path = []) => {\n        var _a, _b;\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                // regular union error\n                issue.errors.map((issues) => processError({ issues }, issue.path));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else {\n                const fullpath = [...path, ...issue.path];\n                if (fullpath.length === 0) {\n                    result.errors.push(mapper(issue));\n                    continue;\n                }\n                let curr = result;\n                let i = 0;\n                while (i < fullpath.length) {\n                    const el = fullpath[i];\n                    const terminal = i === fullpath.length - 1;\n                    if (typeof el === \"string\") {\n                        curr.properties ?? (curr.properties = {});\n                        (_a = curr.properties)[el] ?? (_a[el] = { errors: [] });\n                        curr = curr.properties[el];\n                    }\n                    else {\n                        curr.items ?? (curr.items = []);\n                        (_b = curr.items)[el] ?? (_b[el] = { errors: [] });\n                        curr = curr.items[el];\n                    }\n                    if (terminal) {\n                        curr.errors.push(mapper(issue));\n                    }\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return result;\n}\n/** Format a ZodError as a human-readable string in the following form.\n *\n * From\n *\n * ```ts\n * ZodError {\n *   issues: [\n *     {\n *       expected: 'string',\n *       code: 'invalid_type',\n *       path: [ 'username' ],\n *       message: 'Invalid input: expected string'\n *     },\n *     {\n *       expected: 'number',\n *       code: 'invalid_type',\n *       path: [ 'favoriteNumbers', 1 ],\n *       message: 'Invalid input: expected number'\n *     }\n *   ];\n * }\n * ```\n *\n * to\n *\n * ```\n * username\n *   ✖ Expected number, received string at \"username\n * favoriteNumbers[0]\n *   ✖ Invalid input: expected number\n * ```\n */\nexport function toDotPath(path) {\n    const segs = [];\n    for (const seg of path) {\n        if (typeof seg === \"number\")\n            segs.push(`[${seg}]`);\n        else if (typeof seg === \"symbol\")\n            segs.push(`[${JSON.stringify(String(seg))}]`);\n        else if (/[^\\w$]/.test(seg))\n            segs.push(`[${JSON.stringify(seg)}]`);\n        else {\n            if (segs.length)\n                segs.push(\".\");\n            segs.push(seg);\n        }\n    }\n    return segs.join(\"\");\n}\nexport function prettifyError(error) {\n    const lines = [];\n    // sort by path length\n    const issues = [...error.issues].sort((a, b) => a.path.length - b.path.length);\n    // Process each issue\n    for (const issue of issues) {\n        lines.push(`✖ ${issue.message}`);\n        if (issue.path?.length)\n            lines.push(`  → at ${toDotPath(issue.path)}`);\n    }\n    // Convert Map to formatted string\n    return lines.join(\"\\n\");\n}\n",
    "import * as core from \"./core.js\";\nimport * as errors from \"./errors.js\";\nimport * as util from \"./util.js\";\nexport const _parse = (_Err) => (schema, value, _ctx, _params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: false }) : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    if (result.issues.length) {\n        const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, _params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parse = /* @__PURE__*/ _parse(errors.$ZodRealError);\nexport const _parseAsync = (_Err) => async (schema, value, _ctx, params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    if (result.issues.length) {\n        const e = new (params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parseAsync = /* @__PURE__*/ _parseAsync(errors.$ZodRealError);\nexport const _safeParse = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? { ..._ctx, async: false } : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    return result.issues.length\n        ? {\n            success: false,\n            error: new (_Err ?? errors.$ZodError)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParse = /* @__PURE__*/ _safeParse(errors.$ZodRealError);\nexport const _safeParseAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    return result.issues.length\n        ? {\n            success: false,\n            error: new _Err(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParseAsync = /* @__PURE__*/ _safeParseAsync(errors.$ZodRealError);\n",
    "export const cuid = /^[cC][^\\s-]{8,}$/;\nexport const cuid2 = /^[0-9a-z]+$/;\nexport const ulid = /^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/;\nexport const xid = /^[0-9a-vA-V]{20}$/;\nexport const ksuid = /^[A-Za-z0-9]{27}$/;\nexport const nanoid = /^[a-zA-Z0-9_-]{21}$/;\n/** ISO 8601-1 duration regex. Does not support the 8601-2 extensions like negative durations or fractional/negative components. */\nexport const duration = /^P(?:(\\d+W)|(?!.*W)(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+([.,]\\d+)?S)?)?)$/;\n/** Implements ISO 8601-2 extensions like explicit +- prefixes, mixing weeks with other units, and fractional/negative components. */\nexport const extendedDuration = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n/** A regex for any UUID-like identifier: 8-4-4-4-12 hex pattern */\nexport const guid = /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/;\n/** Returns a regex for validating an RFC 4122 UUID.\n *\n * @param version Optionally specify a version 1-8. If no version is specified, all versions are supported. */\nexport const uuid = (version) => {\n    if (!version)\n        return /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$/;\n    return new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${version}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`);\n};\nexport const uuid4 = /*@__PURE__*/ uuid(4);\nexport const uuid6 = /*@__PURE__*/ uuid(6);\nexport const uuid7 = /*@__PURE__*/ uuid(7);\n/** Practical email validation */\nexport const email = /^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$/;\n/** Equivalent to the HTML5 input[type=email] validation implemented by browsers. Source: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email */\nexport const html5Email = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/** The classic emailregex.com regex for RFC 5322-compliant emails */\nexport const rfc5322Email = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/** A loose regex that allows Unicode characters, enforces length limits, and that's about it. */\nexport const unicodeEmail = /^[^\\s@\"]{1,64}@[^\\s@]{1,255}$/u;\nexport const browserEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emoji = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nexport function emoji() {\n    return new RegExp(_emoji, \"u\");\n}\nexport const ipv4 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nexport const ipv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})$/;\nexport const cidrv4 = /^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/([0-9]|[1-2][0-9]|3[0-2])$/;\nexport const cidrv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nexport const base64 = /^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/;\nexport const base64url = /^[A-Za-z0-9_-]*$/;\n// based on https://stackoverflow.com/questions/106179/regular-expression-to-match-dns-hostname-or-ip-address\n// export const hostname: RegExp =\n//   /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)+([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$/;\nexport const hostname = /^([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+$/;\nexport const domain = /^([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\n// https://blog.stevenlevithan.com/archives/validate-phone-number#r4-3 (regex sans spaces)\nexport const e164 = /^\\+(?:[0-9]){6,14}[0-9]$/;\n// const dateSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateSource = `(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))`;\nexport const date = /*@__PURE__*/ new RegExp(`^${dateSource}$`);\nfunction timeSource(args) {\n    const hhmm = `(?:[01]\\\\d|2[0-3]):[0-5]\\\\d`;\n    const regex = typeof args.precision === \"number\"\n        ? args.precision === -1\n            ? `${hhmm}`\n            : args.precision === 0\n                ? `${hhmm}:[0-5]\\\\d`\n                : `${hhmm}:[0-5]\\\\d\\\\.\\\\d{${args.precision}}`\n        : `${hhmm}(?::[0-5]\\\\d(?:\\\\.\\\\d+)?)?`;\n    return regex;\n}\nexport function time(args) {\n    return new RegExp(`^${timeSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetime(args) {\n    const time = timeSource({ precision: args.precision });\n    const opts = [\"Z\"];\n    if (args.local)\n        opts.push(\"\");\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:\\\\d{2})`);\n    const timeRegex = `${time}(?:${opts.join(\"|\")})`;\n    return new RegExp(`^${dateSource}T(?:${timeRegex})$`);\n}\nexport const string = (params) => {\n    const regex = params ? `[\\\\s\\\\S]{${params?.minimum ?? 0},${params?.maximum ?? \"\"}}` : `[\\\\s\\\\S]*`;\n    return new RegExp(`^${regex}$`);\n};\nexport const bigint = /^\\d+n?$/;\nexport const integer = /^\\d+$/;\nexport const number = /^-?\\d+(?:\\.\\d+)?/i;\nexport const boolean = /true|false/i;\nconst _null = /null/i;\nexport { _null as null };\nconst _undefined = /undefined/i;\nexport { _undefined as undefined };\n// regex for string with no uppercase letters\nexport const lowercase = /^[^A-Z]*$/;\n// regex for string with no lowercase letters\nexport const uppercase = /^[^a-z]*$/;\n",
    "// import { $ZodType } from \"./schemas.js\";\nimport * as core from \"./core.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nexport const $ZodCheck = /*@__PURE__*/ core.$constructor(\"$ZodCheck\", (inst, def) => {\n    var _a;\n    inst._zod ?? (inst._zod = {});\n    inst._zod.def = def;\n    (_a = inst._zod).onattach ?? (_a.onattach = []);\n});\nconst numericOriginMap = {\n    number: \"number\",\n    bigint: \"bigint\",\n    object: \"date\",\n};\nexport const $ZodCheckLessThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckLessThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.maximum : bag.exclusiveMaximum) ?? Number.POSITIVE_INFINITY;\n        if (def.value < curr) {\n            if (def.inclusive)\n                bag.maximum = def.value;\n            else\n                bag.exclusiveMaximum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value <= def.value : payload.value < def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckGreaterThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckGreaterThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.minimum : bag.exclusiveMinimum) ?? Number.NEGATIVE_INFINITY;\n        if (def.value > curr) {\n            if (def.inclusive)\n                bag.minimum = def.value;\n            else\n                bag.exclusiveMinimum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value >= def.value : payload.value > def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMultipleOf = \n/*@__PURE__*/ core.$constructor(\"$ZodCheckMultipleOf\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        var _a;\n        (_a = inst._zod.bag).multipleOf ?? (_a.multipleOf = def.value);\n    });\n    inst._zod.check = (payload) => {\n        if (typeof payload.value !== typeof def.value)\n            throw new Error(\"Cannot mix number and bigint in multiple_of check.\");\n        const isMultiple = typeof payload.value === \"bigint\"\n            ? payload.value % def.value === BigInt(0)\n            : util.floatSafeRemainder(payload.value, def.value) === 0;\n        if (isMultiple)\n            return;\n        payload.issues.push({\n            origin: typeof payload.value,\n            code: \"not_multiple_of\",\n            divisor: def.value,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckNumberFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    def.format = def.format || \"float64\";\n    const isInt = def.format?.includes(\"int\");\n    const origin = isInt ? \"int\" : \"number\";\n    const [minimum, maximum] = util.NUMBER_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n        if (isInt)\n            bag.pattern = regexes.integer;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (isInt) {\n            if (!Number.isInteger(input)) {\n                // invalid_format issue\n                // payload.issues.push({\n                //   expected: def.format,\n                //   format: def.format,\n                //   code: \"invalid_format\",\n                //   input,\n                //   inst,\n                // });\n                // invalid_type issue\n                payload.issues.push({\n                    expected: origin,\n                    format: def.format,\n                    code: \"invalid_type\",\n                    input,\n                    inst,\n                });\n                return;\n                // not_multiple_of issue\n                // payload.issues.push({\n                //   code: \"not_multiple_of\",\n                //   origin: \"number\",\n                //   input,\n                //   inst,\n                //   divisor: 1,\n                // });\n            }\n            if (!Number.isSafeInteger(input)) {\n                if (input > 0) {\n                    // too_big\n                    payload.issues.push({\n                        input,\n                        code: \"too_big\",\n                        maximum: Number.MAX_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                else {\n                    // too_small\n                    payload.issues.push({\n                        input,\n                        code: \"too_small\",\n                        minimum: Number.MIN_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                return;\n            }\n        }\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_small\",\n                minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckBigIntFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    const [minimum, maximum] = util.BIGINT_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_small\",\n                minimum: minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckMaxSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxSize\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size <= def.maximum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_big\",\n            maximum: def.maximum,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinSize\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size >= def.minimum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_small\",\n            minimum: def.minimum,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckSizeEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckSizeEquals\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.size;\n        bag.maximum = def.size;\n        bag.size = def.size;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size === def.size)\n            return;\n        const tooBig = size > def.size;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            ...(tooBig ? { code: \"too_big\", maximum: def.size } : { code: \"too_small\", minimum: def.size }),\n            inclusive: true,\n            exact: true,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMaxLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxLength\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length <= def.maximum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.maximum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinLength\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length >= def.minimum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.minimum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLengthEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckLengthEquals\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.length;\n        bag.maximum = def.length;\n        bag.length = def.length;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length === def.length)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        const tooBig = length > def.length;\n        payload.issues.push({\n            origin,\n            ...(tooBig ? { code: \"too_big\", maximum: def.length } : { code: \"too_small\", minimum: def.length }),\n            inclusive: true,\n            exact: true,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckStringFormat\", (inst, def) => {\n    var _a, _b;\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        if (def.pattern) {\n            bag.patterns ?? (bag.patterns = new Set());\n            bag.patterns.add(def.pattern);\n        }\n    });\n    if (def.pattern)\n        (_a = inst._zod).check ?? (_a.check = (payload) => {\n            def.pattern.lastIndex = 0;\n            if (def.pattern.test(payload.value))\n                return;\n            payload.issues.push({\n                origin: \"string\",\n                code: \"invalid_format\",\n                format: def.format,\n                input: payload.value,\n                ...(def.pattern ? { pattern: def.pattern.toString() } : {}),\n                inst,\n                continue: !def.abort,\n            });\n        });\n    else\n        (_b = inst._zod).check ?? (_b.check = () => { });\n});\nexport const $ZodCheckRegex = /*@__PURE__*/ core.$constructor(\"$ZodCheckRegex\", (inst, def) => {\n    $ZodCheckStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        def.pattern.lastIndex = 0;\n        if (def.pattern.test(payload.value))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"regex\",\n            input: payload.value,\n            pattern: def.pattern.toString(),\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLowerCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckLowerCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.lowercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckUpperCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckUpperCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.uppercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckIncludes = /*@__PURE__*/ core.$constructor(\"$ZodCheckIncludes\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const escapedRegex = util.escapeRegex(def.includes);\n    const pattern = new RegExp(typeof def.position === \"number\" ? `^.{${def.position}}${escapedRegex}` : escapedRegex);\n    def.pattern = pattern;\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.includes(def.includes, def.position))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"includes\",\n            includes: def.includes,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStartsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckStartsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`^${util.escapeRegex(def.prefix)}.*`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.startsWith(def.prefix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"starts_with\",\n            prefix: def.prefix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckEndsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckEndsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`.*${util.escapeRegex(def.suffix)}$`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.endsWith(def.suffix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"ends_with\",\n            suffix: def.suffix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n///////////////////////////////////\n/////    $ZodCheckProperty    /////\n///////////////////////////////////\nfunction handleCheckPropertyResult(result, payload, property) {\n    if (result.issues.length) {\n        payload.issues.push(...util.prefixIssues(property, result.issues));\n    }\n}\nexport const $ZodCheckProperty = /*@__PURE__*/ core.$constructor(\"$ZodCheckProperty\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        const result = def.schema._zod.run({\n            value: payload.value[def.property],\n            issues: [],\n        }, {});\n        if (result instanceof Promise) {\n            return result.then((result) => handleCheckPropertyResult(result, payload, def.property));\n        }\n        handleCheckPropertyResult(result, payload, def.property);\n        return;\n    };\n});\nexport const $ZodCheckMimeType = /*@__PURE__*/ core.$constructor(\"$ZodCheckMimeType\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const mimeSet = new Set(def.mime);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.mime = def.mime;\n    });\n    inst._zod.check = (payload) => {\n        if (mimeSet.has(payload.value.type))\n            return;\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.mime,\n            input: payload.value.type,\n            inst,\n        });\n    };\n});\nexport const $ZodCheckOverwrite = /*@__PURE__*/ core.$constructor(\"$ZodCheckOverwrite\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        payload.value = def.tx(payload.value);\n    };\n});\n",
    "export class Doc {\n    constructor(args = []) {\n        this.content = [];\n        this.indent = 0;\n        if (this)\n            this.args = args;\n    }\n    indented(fn) {\n        this.indent += 1;\n        fn(this);\n        this.indent -= 1;\n    }\n    write(arg) {\n        if (typeof arg === \"function\") {\n            arg(this, { execution: \"sync\" });\n            arg(this, { execution: \"async\" });\n            return;\n        }\n        const content = arg;\n        const lines = content.split(\"\\n\").filter((x) => x);\n        const minIndent = Math.min(...lines.map((x) => x.length - x.trimStart().length));\n        const dedented = lines.map((x) => x.slice(minIndent)).map((x) => \" \".repeat(this.indent * 2) + x);\n        for (const line of dedented) {\n            this.content.push(line);\n        }\n    }\n    compile() {\n        const F = Function;\n        const args = this?.args;\n        const content = this?.content ?? [``];\n        const lines = [...content.map((x) => `  ${x}`)];\n        // console.log(lines.join(\"\\n\"));\n        return new F(...args, lines.join(\"\\n\"));\n    }\n}\n",
    "export const version = {\n    major: 4,\n    minor: 0,\n    patch: 5,\n};\n",
    "import * as checks from \"./checks.js\";\nimport * as core from \"./core.js\";\nimport { Doc } from \"./doc.js\";\nimport { safeParse, safeParseAsync } from \"./parse.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nimport { version } from \"./versions.js\";\nexport const $ZodType = /*@__PURE__*/ core.$constructor(\"$ZodType\", (inst, def) => {\n    var _a;\n    inst ?? (inst = {});\n    inst._zod.def = def; // set _def property\n    inst._zod.bag = inst._zod.bag || {}; // initialize _bag object\n    inst._zod.version = version;\n    const checks = [...(inst._zod.def.checks ?? [])];\n    // if inst is itself a checks.$ZodCheck, run it as a check\n    if (inst._zod.traits.has(\"$ZodCheck\")) {\n        checks.unshift(inst);\n    }\n    //\n    for (const ch of checks) {\n        for (const fn of ch._zod.onattach) {\n            fn(inst);\n        }\n    }\n    if (checks.length === 0) {\n        // deferred initializer\n        // inst._zod.parse is not yet defined\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        inst._zod.deferred?.push(() => {\n            inst._zod.run = inst._zod.parse;\n        });\n    }\n    else {\n        const runChecks = (payload, checks, ctx) => {\n            let isAborted = util.aborted(payload);\n            let asyncResult;\n            for (const ch of checks) {\n                if (ch._zod.def.when) {\n                    const shouldRun = ch._zod.def.when(payload);\n                    if (!shouldRun)\n                        continue;\n                }\n                else if (isAborted) {\n                    continue;\n                }\n                const currLen = payload.issues.length;\n                const _ = ch._zod.check(payload);\n                if (_ instanceof Promise && ctx?.async === false) {\n                    throw new core.$ZodAsyncError();\n                }\n                if (asyncResult || _ instanceof Promise) {\n                    asyncResult = (asyncResult ?? Promise.resolve()).then(async () => {\n                        await _;\n                        const nextLen = payload.issues.length;\n                        if (nextLen === currLen)\n                            return;\n                        if (!isAborted)\n                            isAborted = util.aborted(payload, currLen);\n                    });\n                }\n                else {\n                    const nextLen = payload.issues.length;\n                    if (nextLen === currLen)\n                        continue;\n                    if (!isAborted)\n                        isAborted = util.aborted(payload, currLen);\n                }\n            }\n            if (asyncResult) {\n                return asyncResult.then(() => {\n                    return payload;\n                });\n            }\n            return payload;\n        };\n        inst._zod.run = (payload, ctx) => {\n            const result = inst._zod.parse(payload, ctx);\n            if (result instanceof Promise) {\n                if (ctx.async === false)\n                    throw new core.$ZodAsyncError();\n                return result.then((result) => runChecks(result, checks, ctx));\n            }\n            return runChecks(result, checks, ctx);\n        };\n    }\n    inst[\"~standard\"] = {\n        validate: (value) => {\n            try {\n                const r = safeParse(inst, value);\n                return r.success ? { value: r.data } : { issues: r.error?.issues };\n            }\n            catch (_) {\n                return safeParseAsync(inst, value).then((r) => (r.success ? { value: r.data } : { issues: r.error?.issues }));\n            }\n        },\n        vendor: \"zod\",\n        version: 1,\n    };\n});\nexport { clone } from \"./util.js\";\nexport const $ZodString = /*@__PURE__*/ core.$constructor(\"$ZodString\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = [...(inst?._zod.bag?.patterns ?? [])].pop() ?? regexes.string(inst._zod.bag);\n    inst._zod.parse = (payload, _) => {\n        if (def.coerce)\n            try {\n                payload.value = String(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"string\")\n            return payload;\n        payload.issues.push({\n            expected: \"string\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodStringFormat\", (inst, def) => {\n    // check initialization must come first\n    checks.$ZodCheckStringFormat.init(inst, def);\n    $ZodString.init(inst, def);\n});\nexport const $ZodGUID = /*@__PURE__*/ core.$constructor(\"$ZodGUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.guid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodUUID = /*@__PURE__*/ core.$constructor(\"$ZodUUID\", (inst, def) => {\n    if (def.version) {\n        const versionMap = {\n            v1: 1,\n            v2: 2,\n            v3: 3,\n            v4: 4,\n            v5: 5,\n            v6: 6,\n            v7: 7,\n            v8: 8,\n        };\n        const v = versionMap[def.version];\n        if (v === undefined)\n            throw new Error(`Invalid UUID version: \"${def.version}\"`);\n        def.pattern ?? (def.pattern = regexes.uuid(v));\n    }\n    else\n        def.pattern ?? (def.pattern = regexes.uuid());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodEmail = /*@__PURE__*/ core.$constructor(\"$ZodEmail\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.email);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodURL = /*@__PURE__*/ core.$constructor(\"$ZodURL\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        try {\n            const orig = payload.value;\n            const url = new URL(orig);\n            const href = url.href;\n            if (def.hostname) {\n                def.hostname.lastIndex = 0;\n                if (!def.hostname.test(url.hostname)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid hostname\",\n                        pattern: regexes.hostname.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            if (def.protocol) {\n                def.protocol.lastIndex = 0;\n                if (!def.protocol.test(url.protocol.endsWith(\":\") ? url.protocol.slice(0, -1) : url.protocol)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid protocol\",\n                        pattern: def.protocol.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            // payload.value = url.href;\n            if (!orig.endsWith(\"/\") && href.endsWith(\"/\")) {\n                payload.value = href.slice(0, -1);\n            }\n            else {\n                payload.value = href;\n            }\n            return;\n        }\n        catch (_) {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"url\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodEmoji = /*@__PURE__*/ core.$constructor(\"$ZodEmoji\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.emoji());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodNanoID = /*@__PURE__*/ core.$constructor(\"$ZodNanoID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.nanoid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID = /*@__PURE__*/ core.$constructor(\"$ZodCUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID2 = /*@__PURE__*/ core.$constructor(\"$ZodCUID2\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid2);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodULID = /*@__PURE__*/ core.$constructor(\"$ZodULID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ulid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodXID = /*@__PURE__*/ core.$constructor(\"$ZodXID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.xid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodKSUID = /*@__PURE__*/ core.$constructor(\"$ZodKSUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ksuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODateTime = /*@__PURE__*/ core.$constructor(\"$ZodISODateTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.datetime(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODate = /*@__PURE__*/ core.$constructor(\"$ZodISODate\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.date);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISOTime = /*@__PURE__*/ core.$constructor(\"$ZodISOTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.time(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODuration = /*@__PURE__*/ core.$constructor(\"$ZodISODuration\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.duration);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodIPv4 = /*@__PURE__*/ core.$constructor(\"$ZodIPv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv4);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv4`;\n    });\n});\nexport const $ZodIPv6 = /*@__PURE__*/ core.$constructor(\"$ZodIPv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv6);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv6`;\n    });\n    inst._zod.check = (payload) => {\n        try {\n            new URL(`http://[${payload.value}]`);\n            // return;\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"ipv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv4);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv6); // not used for validation\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        const [address, prefix] = payload.value.split(\"/\");\n        try {\n            if (!prefix)\n                throw new Error();\n            const prefixNum = Number(prefix);\n            if (`${prefixNum}` !== prefix)\n                throw new Error();\n            if (prefixNum < 0 || prefixNum > 128)\n                throw new Error();\n            new URL(`http://[${address}]`);\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"cidrv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64(data) {\n    if (data === \"\")\n        return true;\n    if (data.length % 4 !== 0)\n        return false;\n    try {\n        atob(data);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodBase64 = /*@__PURE__*/ core.$constructor(\"$ZodBase64\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64URL(data) {\n    if (!regexes.base64url.test(data))\n        return false;\n    const base64 = data.replace(/[-_]/g, (c) => (c === \"-\" ? \"+\" : \"/\"));\n    const padded = base64.padEnd(Math.ceil(base64.length / 4) * 4, \"=\");\n    return isValidBase64(padded);\n}\nexport const $ZodBase64URL = /*@__PURE__*/ core.$constructor(\"$ZodBase64URL\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64url);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64url\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64URL(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64url\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodE164 = /*@__PURE__*/ core.$constructor(\"$ZodE164\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.e164);\n    $ZodStringFormat.init(inst, def);\n});\n//////////////////////////////   ZodJWT   //////////////////////////////\nexport function isValidJWT(token, algorithm = null) {\n    try {\n        const tokensParts = token.split(\".\");\n        if (tokensParts.length !== 3)\n            return false;\n        const [header] = tokensParts;\n        if (!header)\n            return false;\n        const parsedHeader = JSON.parse(atob(header));\n        if (\"typ\" in parsedHeader && parsedHeader?.typ !== \"JWT\")\n            return false;\n        if (!parsedHeader.alg)\n            return false;\n        if (algorithm && (!(\"alg\" in parsedHeader) || parsedHeader.alg !== algorithm))\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodJWT = /*@__PURE__*/ core.$constructor(\"$ZodJWT\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (isValidJWT(payload.value, def.alg))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"jwt\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCustomStringFormat\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (def.fn(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: def.format,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodNumber = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = inst._zod.bag.pattern ?? regexes.number;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Number(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"number\" && !Number.isNaN(input) && Number.isFinite(input)) {\n            return payload;\n        }\n        const received = typeof input === \"number\"\n            ? Number.isNaN(input)\n                ? \"NaN\"\n                : !Number.isFinite(input)\n                    ? \"Infinity\"\n                    : undefined\n            : undefined;\n        payload.issues.push({\n            expected: \"number\",\n            code: \"invalid_type\",\n            input,\n            inst,\n            ...(received ? { received } : {}),\n        });\n        return payload;\n    };\n});\nexport const $ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    checks.$ZodCheckNumberFormat.init(inst, def);\n    $ZodNumber.init(inst, def); // no format checksp\n});\nexport const $ZodBoolean = /*@__PURE__*/ core.$constructor(\"$ZodBoolean\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.boolean;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Boolean(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"boolean\")\n            return payload;\n        payload.issues.push({\n            expected: \"boolean\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigInt = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.bigint;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = BigInt(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"bigint\")\n            return payload;\n        payload.issues.push({\n            expected: \"bigint\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    checks.$ZodCheckBigIntFormat.init(inst, def);\n    $ZodBigInt.init(inst, def); // no format checks\n});\nexport const $ZodSymbol = /*@__PURE__*/ core.$constructor(\"$ZodSymbol\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"symbol\")\n            return payload;\n        payload.issues.push({\n            expected: \"symbol\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodUndefined = /*@__PURE__*/ core.$constructor(\"$ZodUndefined\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.undefined;\n    inst._zod.values = new Set([undefined]);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"undefined\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodNull = /*@__PURE__*/ core.$constructor(\"$ZodNull\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.null;\n    inst._zod.values = new Set([null]);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (input === null)\n            return payload;\n        payload.issues.push({\n            expected: \"null\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodAny = /*@__PURE__*/ core.$constructor(\"$ZodAny\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodUnknown = /*@__PURE__*/ core.$constructor(\"$ZodUnknown\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodNever = /*@__PURE__*/ core.$constructor(\"$ZodNever\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.issues.push({\n            expected: \"never\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodVoid = /*@__PURE__*/ core.$constructor(\"$ZodVoid\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"void\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodDate = /*@__PURE__*/ core.$constructor(\"$ZodDate\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce) {\n            try {\n                payload.value = new Date(payload.value);\n            }\n            catch (_err) { }\n        }\n        const input = payload.value;\n        const isDate = input instanceof Date;\n        const isValidDate = isDate && !Number.isNaN(input.getTime());\n        if (isValidDate)\n            return payload;\n        payload.issues.push({\n            expected: \"date\",\n            code: \"invalid_type\",\n            input,\n            ...(isDate ? { received: \"Invalid Date\" } : {}),\n            inst,\n        });\n        return payload;\n    };\n});\nfunction handleArrayResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodArray = /*@__PURE__*/ core.$constructor(\"$ZodArray\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                expected: \"array\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        payload.value = Array(input.length);\n        const proms = [];\n        for (let i = 0; i < input.length; i++) {\n            const item = input[i];\n            const result = def.element._zod.run({\n                value: item,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleArrayResult(result, payload, i)));\n            }\n            else {\n                handleArrayResult(result, payload, i);\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload; //handleArrayResultsAsync(parseResults, final);\n    };\n});\nfunction handleObjectResult(result, final, key) {\n    // if(isOptional)\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(key, result.issues));\n    }\n    final.value[key] = result.value;\n}\nfunction handleOptionalObjectResult(result, final, key, input) {\n    if (result.issues.length) {\n        // validation failed against value schema\n        if (input[key] === undefined) {\n            // if input was undefined, ignore the error\n            if (key in input) {\n                final.value[key] = undefined;\n            }\n            else {\n                final.value[key] = result.value;\n            }\n        }\n        else {\n            final.issues.push(...util.prefixIssues(key, result.issues));\n        }\n    }\n    else if (result.value === undefined) {\n        // validation returned `undefined`\n        if (key in input)\n            final.value[key] = undefined;\n    }\n    else {\n        // non-undefined value\n        final.value[key] = result.value;\n    }\n}\nexport const $ZodObject = /*@__PURE__*/ core.$constructor(\"$ZodObject\", (inst, def) => {\n    // requires cast because technically $ZodObject doesn't extend\n    $ZodType.init(inst, def);\n    const _normalized = util.cached(() => {\n        const keys = Object.keys(def.shape);\n        for (const k of keys) {\n            if (!(def.shape[k] instanceof $ZodType)) {\n                throw new Error(`Invalid element at key \"${k}\": expected a Zod schema`);\n            }\n        }\n        const okeys = util.optionalKeys(def.shape);\n        return {\n            shape: def.shape,\n            keys,\n            keySet: new Set(keys),\n            numKeys: keys.length,\n            optionalKeys: new Set(okeys),\n        };\n    });\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const shape = def.shape;\n        const propValues = {};\n        for (const key in shape) {\n            const field = shape[key]._zod;\n            if (field.values) {\n                propValues[key] ?? (propValues[key] = new Set());\n                for (const v of field.values)\n                    propValues[key].add(v);\n            }\n        }\n        return propValues;\n    });\n    const generateFastpass = (shape) => {\n        const doc = new Doc([\"shape\", \"payload\", \"ctx\"]);\n        const normalized = _normalized.value;\n        const parseStr = (key) => {\n            const k = util.esc(key);\n            return `shape[${k}]._zod.run({ value: input[${k}], issues: [] }, ctx)`;\n        };\n        doc.write(`const input = payload.value;`);\n        const ids = Object.create(null);\n        let counter = 0;\n        for (const key of normalized.keys) {\n            ids[key] = `key_${counter++}`;\n        }\n        // A: preserve key order {\n        doc.write(`const newResult = {}`);\n        for (const key of normalized.keys) {\n            if (normalized.optionalKeys.has(key)) {\n                const id = ids[key];\n                doc.write(`const ${id} = ${parseStr(key)};`);\n                const k = util.esc(key);\n                doc.write(`\n        if (${id}.issues.length) {\n          if (input[${k}] === undefined) {\n            if (${k} in input) {\n              newResult[${k}] = undefined;\n            }\n          } else {\n            payload.issues = payload.issues.concat(\n              ${id}.issues.map((iss) => ({\n                ...iss,\n                path: iss.path ? [${k}, ...iss.path] : [${k}],\n              }))\n            );\n          }\n        } else if (${id}.value === undefined) {\n          if (${k} in input) newResult[${k}] = undefined;\n        } else {\n          newResult[${k}] = ${id}.value;\n        }\n        `);\n            }\n            else {\n                const id = ids[key];\n                //  const id = ids[key];\n                doc.write(`const ${id} = ${parseStr(key)};`);\n                doc.write(`\n          if (${id}.issues.length) payload.issues = payload.issues.concat(${id}.issues.map(iss => ({\n            ...iss,\n            path: iss.path ? [${util.esc(key)}, ...iss.path] : [${util.esc(key)}]\n          })));`);\n                doc.write(`newResult[${util.esc(key)}] = ${id}.value`);\n            }\n        }\n        doc.write(`payload.value = newResult;`);\n        doc.write(`return payload;`);\n        const fn = doc.compile();\n        return (payload, ctx) => fn(shape, payload, ctx);\n    };\n    let fastpass;\n    const isObject = util.isObject;\n    const jit = !core.globalConfig.jitless;\n    const allowsEval = util.allowsEval;\n    const fastEnabled = jit && allowsEval.value; // && !def.catchall;\n    const catchall = def.catchall;\n    let value;\n    inst._zod.parse = (payload, ctx) => {\n        value ?? (value = _normalized.value);\n        const input = payload.value;\n        if (!isObject(input)) {\n            payload.issues.push({\n                expected: \"object\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (jit && fastEnabled && ctx?.async === false && ctx.jitless !== true) {\n            // always synchronous\n            if (!fastpass)\n                fastpass = generateFastpass(def.shape);\n            payload = fastpass(payload, ctx);\n        }\n        else {\n            payload.value = {};\n            const shape = value.shape;\n            for (const key of value.keys) {\n                const el = shape[key];\n                // do not add omitted optional keys\n                // if (!(key in input)) {\n                //   if (optionalKeys.has(key)) continue;\n                //   payload.issues.push({\n                //     code: \"invalid_type\",\n                //     path: [key],\n                //     expected: \"nonoptional\",\n                //     note: `Missing required key: \"${key}\"`,\n                //     input,\n                //     inst,\n                //   });\n                // }\n                const r = el._zod.run({ value: input[key], issues: [] }, ctx);\n                const isOptional = el._zod.optin === \"optional\" && el._zod.optout === \"optional\";\n                if (r instanceof Promise) {\n                    proms.push(r.then((r) => isOptional ? handleOptionalObjectResult(r, payload, key, input) : handleObjectResult(r, payload, key)));\n                }\n                else if (isOptional) {\n                    handleOptionalObjectResult(r, payload, key, input);\n                }\n                else {\n                    handleObjectResult(r, payload, key);\n                }\n            }\n        }\n        if (!catchall) {\n            // return payload;\n            return proms.length ? Promise.all(proms).then(() => payload) : payload;\n        }\n        const unrecognized = [];\n        // iterate over input keys\n        const keySet = value.keySet;\n        const _catchall = catchall._zod;\n        const t = _catchall.def.type;\n        for (const key of Object.keys(input)) {\n            if (keySet.has(key))\n                continue;\n            if (t === \"never\") {\n                unrecognized.push(key);\n                continue;\n            }\n            const r = _catchall.run({ value: input[key], issues: [] }, ctx);\n            if (r instanceof Promise) {\n                proms.push(r.then((r) => handleObjectResult(r, payload, key)));\n            }\n            else {\n                handleObjectResult(r, payload, key);\n            }\n        }\n        if (unrecognized.length) {\n            payload.issues.push({\n                code: \"unrecognized_keys\",\n                keys: unrecognized,\n                input,\n                inst,\n            });\n        }\n        if (!proms.length)\n            return payload;\n        return Promise.all(proms).then(() => {\n            return payload;\n        });\n    };\n});\nfunction handleUnionResults(results, final, inst, ctx) {\n    for (const result of results) {\n        if (result.issues.length === 0) {\n            final.value = result.value;\n            return final;\n        }\n    }\n    final.issues.push({\n        code: \"invalid_union\",\n        input: final.value,\n        inst,\n        errors: results.map((result) => result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n    });\n    return final;\n}\nexport const $ZodUnion = /*@__PURE__*/ core.$constructor(\"$ZodUnion\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.options.some((o) => o._zod.optin === \"optional\") ? \"optional\" : undefined);\n    util.defineLazy(inst._zod, \"optout\", () => def.options.some((o) => o._zod.optout === \"optional\") ? \"optional\" : undefined);\n    util.defineLazy(inst._zod, \"values\", () => {\n        if (def.options.every((o) => o._zod.values)) {\n            return new Set(def.options.flatMap((option) => Array.from(option._zod.values)));\n        }\n        return undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        if (def.options.every((o) => o._zod.pattern)) {\n            const patterns = def.options.map((o) => o._zod.pattern);\n            return new RegExp(`^(${patterns.map((p) => util.cleanRegex(p.source)).join(\"|\")})$`);\n        }\n        return undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        let async = false;\n        const results = [];\n        for (const option of def.options) {\n            const result = option._zod.run({\n                value: payload.value,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                results.push(result);\n                async = true;\n            }\n            else {\n                if (result.issues.length === 0)\n                    return result;\n                results.push(result);\n            }\n        }\n        if (!async)\n            return handleUnionResults(results, payload, inst, ctx);\n        return Promise.all(results).then((results) => {\n            return handleUnionResults(results, payload, inst, ctx);\n        });\n    };\n});\nexport const $ZodDiscriminatedUnion = \n/*@__PURE__*/\ncore.$constructor(\"$ZodDiscriminatedUnion\", (inst, def) => {\n    $ZodUnion.init(inst, def);\n    const _super = inst._zod.parse;\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const propValues = {};\n        for (const option of def.options) {\n            const pv = option._zod.propValues;\n            if (!pv || Object.keys(pv).length === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(option)}\"`);\n            for (const [k, v] of Object.entries(pv)) {\n                if (!propValues[k])\n                    propValues[k] = new Set();\n                for (const val of v) {\n                    propValues[k].add(val);\n                }\n            }\n        }\n        return propValues;\n    });\n    const disc = util.cached(() => {\n        const opts = def.options;\n        const map = new Map();\n        for (const o of opts) {\n            const values = o._zod.propValues?.[def.discriminator];\n            if (!values || values.size === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(o)}\"`);\n            for (const v of values) {\n                if (map.has(v)) {\n                    throw new Error(`Duplicate discriminator value \"${String(v)}\"`);\n                }\n                map.set(v, o);\n            }\n        }\n        return map;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isObject(input)) {\n            payload.issues.push({\n                code: \"invalid_type\",\n                expected: \"object\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const opt = disc.value.get(input?.[def.discriminator]);\n        if (opt) {\n            return opt._zod.run(payload, ctx);\n        }\n        if (def.unionFallback) {\n            return _super(payload, ctx);\n        }\n        // no matching discriminator\n        payload.issues.push({\n            code: \"invalid_union\",\n            errors: [],\n            note: \"No matching discriminator\",\n            input,\n            path: [def.discriminator],\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodIntersection = /*@__PURE__*/ core.$constructor(\"$ZodIntersection\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        const left = def.left._zod.run({ value: input, issues: [] }, ctx);\n        const right = def.right._zod.run({ value: input, issues: [] }, ctx);\n        const async = left instanceof Promise || right instanceof Promise;\n        if (async) {\n            return Promise.all([left, right]).then(([left, right]) => {\n                return handleIntersectionResults(payload, left, right);\n            });\n        }\n        return handleIntersectionResults(payload, left, right);\n    };\n});\nfunction mergeValues(a, b) {\n    // const aType = parse.t(a);\n    // const bType = parse.t(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    if (a instanceof Date && b instanceof Date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    if (util.isPlainObject(a) && util.isPlainObject(b)) {\n        const bKeys = Object.keys(b);\n        const sharedKeys = Object.keys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [key, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return { valid: false, mergeErrorPath: [] };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [index, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    return { valid: false, mergeErrorPath: [] };\n}\nfunction handleIntersectionResults(result, left, right) {\n    if (left.issues.length) {\n        result.issues.push(...left.issues);\n    }\n    if (right.issues.length) {\n        result.issues.push(...right.issues);\n    }\n    if (util.aborted(result))\n        return result;\n    const merged = mergeValues(left.value, right.value);\n    if (!merged.valid) {\n        throw new Error(`Unmergable intersection. Error path: ` + `${JSON.stringify(merged.mergeErrorPath)}`);\n    }\n    result.value = merged.data;\n    return result;\n}\nexport const $ZodTuple = /*@__PURE__*/ core.$constructor(\"$ZodTuple\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const items = def.items;\n    const optStart = items.length - [...items].reverse().findIndex((item) => item._zod.optin !== \"optional\");\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"tuple\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        payload.value = [];\n        const proms = [];\n        if (!def.rest) {\n            const tooBig = input.length > items.length;\n            const tooSmall = input.length < optStart - 1;\n            if (tooBig || tooSmall) {\n                payload.issues.push({\n                    input,\n                    inst,\n                    origin: \"array\",\n                    ...(tooBig ? { code: \"too_big\", maximum: items.length } : { code: \"too_small\", minimum: items.length }),\n                });\n                return payload;\n            }\n        }\n        let i = -1;\n        for (const item of items) {\n            i++;\n            if (i >= input.length)\n                if (i >= optStart)\n                    continue;\n            const result = item._zod.run({\n                value: input[i],\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n            }\n            else {\n                handleTupleResult(result, payload, i);\n            }\n        }\n        if (def.rest) {\n            const rest = input.slice(items.length);\n            for (const el of rest) {\n                i++;\n                const result = def.rest._zod.run({\n                    value: el,\n                    issues: [],\n                }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n                }\n                else {\n                    handleTupleResult(result, payload, i);\n                }\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleTupleResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodRecord = /*@__PURE__*/ core.$constructor(\"$ZodRecord\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isPlainObject(input)) {\n            payload.issues.push({\n                expected: \"record\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (def.keyType._zod.values) {\n            const values = def.keyType._zod.values;\n            payload.value = {};\n            for (const key of values) {\n                if (typeof key === \"string\" || typeof key === \"number\" || typeof key === \"symbol\") {\n                    const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                    if (result instanceof Promise) {\n                        proms.push(result.then((result) => {\n                            if (result.issues.length) {\n                                payload.issues.push(...util.prefixIssues(key, result.issues));\n                            }\n                            payload.value[key] = result.value;\n                        }));\n                    }\n                    else {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[key] = result.value;\n                    }\n                }\n            }\n            let unrecognized;\n            for (const key in input) {\n                if (!values.has(key)) {\n                    unrecognized = unrecognized ?? [];\n                    unrecognized.push(key);\n                }\n            }\n            if (unrecognized && unrecognized.length > 0) {\n                payload.issues.push({\n                    code: \"unrecognized_keys\",\n                    input,\n                    inst,\n                    keys: unrecognized,\n                });\n            }\n        }\n        else {\n            payload.value = {};\n            for (const key of Reflect.ownKeys(input)) {\n                if (key === \"__proto__\")\n                    continue;\n                const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n                if (keyResult instanceof Promise) {\n                    throw new Error(\"Async schemas not supported in object keys currently\");\n                }\n                if (keyResult.issues.length) {\n                    payload.issues.push({\n                        origin: \"record\",\n                        code: \"invalid_key\",\n                        issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        input: key,\n                        path: [key],\n                        inst,\n                    });\n                    payload.value[keyResult.value] = keyResult.value;\n                    continue;\n                }\n                const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[keyResult.value] = result.value;\n                    }));\n                }\n                else {\n                    if (result.issues.length) {\n                        payload.issues.push(...util.prefixIssues(key, result.issues));\n                    }\n                    payload.value[keyResult.value] = result.value;\n                }\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload;\n    };\n});\nexport const $ZodMap = /*@__PURE__*/ core.$constructor(\"$ZodMap\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Map)) {\n            payload.issues.push({\n                expected: \"map\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Map();\n        for (const [key, value] of input) {\n            const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n            const valueResult = def.valueType._zod.run({ value: value, issues: [] }, ctx);\n            if (keyResult instanceof Promise || valueResult instanceof Promise) {\n                proms.push(Promise.all([keyResult, valueResult]).then(([keyResult, valueResult]) => {\n                    handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n                }));\n            }\n            else {\n                handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleMapResult(keyResult, valueResult, final, key, input, inst, ctx) {\n    if (keyResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, keyResult.issues));\n        }\n        else {\n            final.issues.push({\n                origin: \"map\",\n                code: \"invalid_key\",\n                input,\n                inst,\n                issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    if (valueResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, valueResult.issues));\n        }\n        else {\n            final.issues.push({\n                origin: \"map\",\n                code: \"invalid_element\",\n                input,\n                inst,\n                key: key,\n                issues: valueResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    final.value.set(keyResult.value, valueResult.value);\n}\nexport const $ZodSet = /*@__PURE__*/ core.$constructor(\"$ZodSet\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Set)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"set\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Set();\n        for (const item of input) {\n            const result = def.valueType._zod.run({ value: item, issues: [] }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleSetResult(result, payload)));\n            }\n            else\n                handleSetResult(result, payload);\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleSetResult(result, final) {\n    if (result.issues.length) {\n        final.issues.push(...result.issues);\n    }\n    final.value.add(result.value);\n}\nexport const $ZodEnum = /*@__PURE__*/ core.$constructor(\"$ZodEnum\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const values = util.getEnumValues(def.entries);\n    inst._zod.values = new Set(values);\n    inst._zod.pattern = new RegExp(`^(${values\n        .filter((k) => util.propertyKeyTypes.has(typeof k))\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o.toString()))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (inst._zod.values.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodLiteral = /*@__PURE__*/ core.$constructor(\"$ZodLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.values = new Set(def.values);\n    inst._zod.pattern = new RegExp(`^(${def.values\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o ? o.toString() : String(o)))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (inst._zod.values.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodFile = /*@__PURE__*/ core.$constructor(\"$ZodFile\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (input instanceof File)\n            return payload;\n        payload.issues.push({\n            expected: \"file\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodTransform = /*@__PURE__*/ core.$constructor(\"$ZodTransform\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const _out = def.transform(payload.value, payload);\n        if (_ctx.async) {\n            const output = _out instanceof Promise ? _out : Promise.resolve(_out);\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        if (_out instanceof Promise) {\n            throw new core.$ZodAsyncError();\n        }\n        payload.value = _out;\n        return payload;\n    };\n});\nexport const $ZodOptional = /*@__PURE__*/ core.$constructor(\"$ZodOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, undefined]) : undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)})?$`) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (def.innerType._zod.optin === \"optional\") {\n            return def.innerType._zod.run(payload, ctx);\n        }\n        if (payload.value === undefined) {\n            return payload;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNullable = /*@__PURE__*/ core.$constructor(\"$ZodNullable\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)}|null)$`) : undefined;\n    });\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, null]) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === null)\n            return payload;\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodDefault = /*@__PURE__*/ core.$constructor(\"$ZodDefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    // inst._zod.qin = \"true\";\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n            /**\n             * $ZodDefault always returns the default value immediately.\n             * It doesn't pass the default value into the validator (\"prefault\"). There's no reason to pass the default value through validation. The validity of the default is enforced by TypeScript statically. Otherwise, it's the responsibility of the user to ensure the default is valid. In the case of pipes with divergent in/out types, you can specify the default on the `in` schema of your ZodPipe to set a \"prefault\" for the pipe.   */\n            return payload;\n        }\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleDefaultResult(result, def));\n        }\n        return handleDefaultResult(result, def);\n    };\n});\nfunction handleDefaultResult(payload, def) {\n    if (payload.value === undefined) {\n        payload.value = def.defaultValue;\n    }\n    return payload;\n}\nexport const $ZodPrefault = /*@__PURE__*/ core.$constructor(\"$ZodPrefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNonOptional = /*@__PURE__*/ core.$constructor(\"$ZodNonOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => {\n        const v = def.innerType._zod.values;\n        return v ? new Set([...v].filter((x) => x !== undefined)) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleNonOptionalResult(result, inst));\n        }\n        return handleNonOptionalResult(result, inst);\n    };\n});\nfunction handleNonOptionalResult(payload, inst) {\n    if (!payload.issues.length && payload.value === undefined) {\n        payload.issues.push({\n            code: \"invalid_type\",\n            expected: \"nonoptional\",\n            input: payload.value,\n            inst,\n        });\n    }\n    return payload;\n}\nexport const $ZodSuccess = /*@__PURE__*/ core.$constructor(\"$ZodSuccess\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.issues.length === 0;\n                return payload;\n            });\n        }\n        payload.value = result.issues.length === 0;\n        return payload;\n    };\n});\nexport const $ZodCatch = /*@__PURE__*/ core.$constructor(\"$ZodCatch\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.value;\n                if (result.issues.length) {\n                    payload.value = def.catchValue({\n                        ...payload,\n                        error: {\n                            issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        },\n                        input: payload.value,\n                    });\n                    payload.issues = [];\n                }\n                return payload;\n            });\n        }\n        payload.value = result.value;\n        if (result.issues.length) {\n            payload.value = def.catchValue({\n                ...payload,\n                error: {\n                    issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                },\n                input: payload.value,\n            });\n            payload.issues = [];\n        }\n        return payload;\n    };\n});\nexport const $ZodNaN = /*@__PURE__*/ core.$constructor(\"$ZodNaN\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"number\" || !Number.isNaN(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"nan\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPipe = /*@__PURE__*/ core.$constructor(\"$ZodPipe\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\n    util.defineLazy(inst._zod, \"propValues\", () => def.in._zod.propValues);\n    inst._zod.parse = (payload, ctx) => {\n        const left = def.in._zod.run(payload, ctx);\n        if (left instanceof Promise) {\n            return left.then((left) => handlePipeResult(left, def, ctx));\n        }\n        return handlePipeResult(left, def, ctx);\n    };\n});\nfunction handlePipeResult(left, def, ctx) {\n    if (util.aborted(left)) {\n        return left;\n    }\n    return def.out._zod.run({ value: left.value, issues: left.issues }, ctx);\n}\nexport const $ZodReadonly = /*@__PURE__*/ core.$constructor(\"$ZodReadonly\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"propValues\", () => def.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then(handleReadonlyResult);\n        }\n        return handleReadonlyResult(result);\n    };\n});\nfunction handleReadonlyResult(payload) {\n    payload.value = Object.freeze(payload.value);\n    return payload;\n}\nexport const $ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"$ZodTemplateLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const regexParts = [];\n    for (const part of def.parts) {\n        if (part instanceof $ZodType) {\n            if (!part._zod.pattern) {\n                // if (!source)\n                throw new Error(`Invalid template literal part, no pattern found: ${[...part._zod.traits].shift()}`);\n            }\n            const source = part._zod.pattern instanceof RegExp ? part._zod.pattern.source : part._zod.pattern;\n            if (!source)\n                throw new Error(`Invalid template literal part: ${part._zod.traits}`);\n            const start = source.startsWith(\"^\") ? 1 : 0;\n            const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n            regexParts.push(source.slice(start, end));\n        }\n        else if (part === null || util.primitiveTypes.has(typeof part)) {\n            regexParts.push(util.escapeRegex(`${part}`));\n        }\n        else {\n            throw new Error(`Invalid template literal part: ${part}`);\n        }\n    }\n    inst._zod.pattern = new RegExp(`^${regexParts.join(\"\")}$`);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"string\") {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"template_literal\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        inst._zod.pattern.lastIndex = 0;\n        if (!inst._zod.pattern.test(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                code: \"invalid_format\",\n                format: def.format ?? \"template_literal\",\n                pattern: inst._zod.pattern.source,\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPromise = /*@__PURE__*/ core.$constructor(\"$ZodPromise\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        return Promise.resolve(payload.value).then((inner) => def.innerType._zod.run({ value: inner, issues: [] }, ctx));\n    };\n});\nexport const $ZodLazy = /*@__PURE__*/ core.$constructor(\"$ZodLazy\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"innerType\", () => def.getter());\n    util.defineLazy(inst._zod, \"pattern\", () => inst._zod.innerType._zod.pattern);\n    util.defineLazy(inst._zod, \"propValues\", () => inst._zod.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"optin\", () => inst._zod.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => inst._zod.innerType._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        const inner = inst._zod.innerType;\n        return inner._zod.run(payload, ctx);\n    };\n});\nexport const $ZodCustom = /*@__PURE__*/ core.$constructor(\"$ZodCustom\", (inst, def) => {\n    checks.$ZodCheck.init(inst, def);\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _) => {\n        return payload;\n    };\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const r = def.fn(input);\n        if (r instanceof Promise) {\n            return r.then((r) => handleRefineResult(r, payload, input, inst));\n        }\n        handleRefineResult(r, payload, input, inst);\n        return;\n    };\n});\nfunction handleRefineResult(result, payload, input, inst) {\n    if (!result) {\n        const _iss = {\n            code: \"custom\",\n            input,\n            inst, // incorporates params.error into issue reporting\n            path: [...(inst._zod.def.path ?? [])], // incorporates params.error into issue reporting\n            continue: !inst._zod.def.abort,\n            // params: inst._zod.def.params,\n        };\n        if (inst._zod.def.params)\n            _iss.params = inst._zod.def.params;\n        payload.issues.push(util.issue(_iss));\n    }\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"حرف\", verb: \"أن يحوي\" },\n        file: { unit: \"بايت\", verb: \"أن يحوي\" },\n        array: { unit: \"عنصر\", verb: \"أن يحوي\" },\n        set: { unit: \"عنصر\", verb: \"أن يحوي\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"مدخل\",\n        email: \"بريد إلكتروني\",\n        url: \"رابط\",\n        emoji: \"إيموجي\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"تاريخ ووقت بمعيار ISO\",\n        date: \"تاريخ بمعيار ISO\",\n        time: \"وقت بمعيار ISO\",\n        duration: \"مدة بمعيار ISO\",\n        ipv4: \"عنوان IPv4\",\n        ipv6: \"عنوان IPv6\",\n        cidrv4: \"مدى عناوين بصيغة IPv4\",\n        cidrv6: \"مدى عناوين بصيغة IPv6\",\n        base64: \"نَص بترميز base64-encoded\",\n        base64url: \"نَص بترميز base64url-encoded\",\n        json_string: \"نَص على هيئة JSON\",\n        e164: \"رقم هاتف بمعيار E.164\",\n        jwt: \"JWT\",\n        template_literal: \"مدخل\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `مدخلات غير مقبولة: يفترض إدخال ${issue.expected}، ولكن تم إدخال ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `مدخلات غير مقبولة: يفترض إدخال ${util.stringifyPrimitive(issue.values[0])}`;\n                return `اختيار غير مقبول: يتوقع انتقاء أحد هذه الخيارات: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return ` أكبر من اللازم: يفترض أن تكون ${issue.origin ?? \"القيمة\"} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"عنصر\"}`;\n                return `أكبر من اللازم: يفترض أن تكون ${issue.origin ?? \"القيمة\"} ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `أصغر من اللازم: يفترض لـ ${issue.origin} أن يكون ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `أصغر من اللازم: يفترض لـ ${issue.origin} أن يكون ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `نَص غير مقبول: يجب أن يبدأ بـ \"${issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `نَص غير مقبول: يجب أن ينتهي بـ \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `نَص غير مقبول: يجب أن يتضمَّن \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `نَص غير مقبول: يجب أن يطابق النمط ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} غير مقبول`;\n            }\n            case \"not_multiple_of\":\n                return `رقم غير مقبول: يجب أن يكون من مضاعفات ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `معرف${issue.keys.length > 1 ? \"ات\" : \"\"} غريب${issue.keys.length > 1 ? \"ة\" : \"\"}: ${util.joinValues(issue.keys, \"، \")}`;\n            case \"invalid_key\":\n                return `معرف غير مقبول في ${issue.origin}`;\n            case \"invalid_union\":\n                return \"مدخل غير مقبول\";\n            case \"invalid_element\":\n                return `مدخل غير مقبول في ${issue.origin}`;\n            default:\n                return \"مدخل غير مقبول\";\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"simvol\", verb: \"olmalıdır\" },\n        file: { unit: \"bayt\", verb: \"olmalıdır\" },\n        array: { unit: \"element\", verb: \"olmalıdır\" },\n        set: { unit: \"element\", verb: \"olmalıdır\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"email address\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datetime\",\n        date: \"ISO date\",\n        time: \"ISO time\",\n        duration: \"ISO duration\",\n        ipv4: \"IPv4 address\",\n        ipv6: \"IPv6 address\",\n        cidrv4: \"IPv4 range\",\n        cidrv6: \"IPv6 range\",\n        base64: \"base64-encoded string\",\n        base64url: \"base64url-encoded string\",\n        json_string: \"JSON string\",\n        e164: \"E.164 number\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Yanlış dəyər: gözlənilən ${issue.expected}, daxil olan ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Yanlış dəyər: gözlənilən ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Yanlış seçim: aşağıdakılardan biri olmalıdır: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çox böyük: gözlənilən ${issue.origin ?? \"dəyər\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\"}`;\n                return `Çox böyük: gözlənilən ${issue.origin ?? \"dəyər\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çox kiçik: gözlənilən ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                return `Çox kiçik: gözlənilən ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Yanlış mətn: \"${_issue.prefix}\" ilə başlamalıdır`;\n                if (_issue.format === \"ends_with\")\n                    return `Yanlış mətn: \"${_issue.suffix}\" ilə bitməlidir`;\n                if (_issue.format === \"includes\")\n                    return `Yanlış mətn: \"${_issue.includes}\" daxil olmalıdır`;\n                if (_issue.format === \"regex\")\n                    return `Yanlış mətn: ${_issue.pattern} şablonuna uyğun olmalıdır`;\n                return `Yanlış ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Yanlış ədəd: ${issue.divisor} ilə bölünə bilən olmalıdır`;\n            case \"unrecognized_keys\":\n                return `Tanınmayan açar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} daxilində yanlış açar`;\n            case \"invalid_union\":\n                return \"Yanlış dəyər\";\n            case \"invalid_element\":\n                return `${issue.origin} daxilində yanlış dəyər`;\n            default:\n                return `Yanlış dəyər`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nfunction getBelarusianPlural(count, one, few, many) {\n    const absCount = Math.abs(count);\n    const lastDigit = absCount % 10;\n    const lastTwoDigits = absCount % 100;\n    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {\n        return many;\n    }\n    if (lastDigit === 1) {\n        return one;\n    }\n    if (lastDigit >= 2 && lastDigit <= 4) {\n        return few;\n    }\n    return many;\n}\nconst error = () => {\n    const Sizable = {\n        string: {\n            unit: {\n                one: \"сімвал\",\n                few: \"сімвалы\",\n                many: \"сімвалаў\",\n            },\n            verb: \"мець\",\n        },\n        array: {\n            unit: {\n                one: \"элемент\",\n                few: \"элементы\",\n                many: \"элементаў\",\n            },\n            verb: \"мець\",\n        },\n        set: {\n            unit: {\n                one: \"элемент\",\n                few: \"элементы\",\n                many: \"элементаў\",\n            },\n            verb: \"мець\",\n        },\n        file: {\n            unit: {\n                one: \"байт\",\n                few: \"байты\",\n                many: \"байтаў\",\n            },\n            verb: \"мець\",\n        },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"лік\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"масіў\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"увод\",\n        email: \"email адрас\",\n        url: \"URL\",\n        emoji: \"эмодзі\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO дата і час\",\n        date: \"ISO дата\",\n        time: \"ISO час\",\n        duration: \"ISO працягласць\",\n        ipv4: \"IPv4 адрас\",\n        ipv6: \"IPv6 адрас\",\n        cidrv4: \"IPv4 дыяпазон\",\n        cidrv6: \"IPv6 дыяпазон\",\n        base64: \"радок у фармаце base64\",\n        base64url: \"радок у фармаце base64url\",\n        json_string: \"JSON радок\",\n        e164: \"нумар E.164\",\n        jwt: \"JWT\",\n        template_literal: \"увод\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Няправільны ўвод: чакаўся ${issue.expected}, атрымана ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Няправільны ўвод: чакалася ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Няправільны варыянт: чакаўся адзін з ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const maxValue = Number(issue.maximum);\n                    const unit = getBelarusianPlural(maxValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `Занадта вялікі: чакалася, што ${issue.origin ?? \"значэнне\"} павінна ${sizing.verb} ${adj}${issue.maximum.toString()} ${unit}`;\n                }\n                return `Занадта вялікі: чакалася, што ${issue.origin ?? \"значэнне\"} павінна быць ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const minValue = Number(issue.minimum);\n                    const unit = getBelarusianPlural(minValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `Занадта малы: чакалася, што ${issue.origin} павінна ${sizing.verb} ${adj}${issue.minimum.toString()} ${unit}`;\n                }\n                return `Занадта малы: чакалася, што ${issue.origin} павінна быць ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Няправільны радок: павінен пачынацца з \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Няправільны радок: павінен заканчвацца на \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Няправільны радок: павінен змяшчаць \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Няправільны радок: павінен адпавядаць шаблону ${_issue.pattern}`;\n                return `Няправільны ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Няправільны лік: павінен быць кратным ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Нераспазнаны ${issue.keys.length > 1 ? \"ключы\" : \"ключ\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Няправільны ключ у ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Няправільны ўвод\";\n            case \"invalid_element\":\n                return `Няправільнае значэнне ў ${issue.origin}`;\n            default:\n                return `Няправільны ўвод`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caràcters\", verb: \"contenir\" },\n        file: { unit: \"bytes\", verb: \"contenir\" },\n        array: { unit: \"elements\", verb: \"contenir\" },\n        set: { unit: \"elements\", verb: \"contenir\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrada\",\n        email: \"adreça electrònica\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data i hora ISO\",\n        date: \"data ISO\",\n        time: \"hora ISO\",\n        duration: \"durada ISO\",\n        ipv4: \"adreça IPv4\",\n        ipv6: \"adreça IPv6\",\n        cidrv4: \"rang IPv4\",\n        cidrv6: \"rang IPv6\",\n        base64: \"cadena codificada en base64\",\n        base64url: \"cadena codificada en base64url\",\n        json_string: \"cadena JSON\",\n        e164: \"número E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrada\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Tipus invàlid: s'esperava ${issue.expected}, s'ha rebut ${parsedType(issue.input)}`;\n            // return `Tipus invàlid: s'esperava ${issue.expected}, s'ha rebut ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Valor invàlid: s'esperava ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opció invàlida: s'esperava una de ${util.joinValues(issue.values, \" o \")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"com a màxim\" : \"menys de\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Massa gran: s'esperava que ${issue.origin ?? \"el valor\"} contingués ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\n                return `Massa gran: s'esperava que ${issue.origin ?? \"el valor\"} fos ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"com a mínim\" : \"més de\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Massa petit: s'esperava que ${issue.origin} contingués ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Massa petit: s'esperava que ${issue.origin} fos ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Format invàlid: ha de començar amb \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Format invàlid: ha d'acabar amb \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Format invàlid: ha d'incloure \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Format invàlid: ha de coincidir amb el patró ${_issue.pattern}`;\n                return `Format invàlid per a ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Número invàlid: ha de ser múltiple de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Clau${issue.keys.length > 1 ? \"s\" : \"\"} no reconeguda${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Clau invàlida a ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrada invàlida\"; // Could also be \"Tipus d'unió invàlid\" but \"Entrada invàlida\" is more general\n            case \"invalid_element\":\n                return `Element invàlid a ${issue.origin}`;\n            default:\n                return `Entrada invàlida`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"znaků\", verb: \"mít\" },\n        file: { unit: \"bajtů\", verb: \"mít\" },\n        array: { unit: \"prvků\", verb: \"mít\" },\n        set: { unit: \"prvků\", verb: \"mít\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"číslo\";\n            }\n            case \"string\": {\n                return \"řetězec\";\n            }\n            case \"boolean\": {\n                return \"boolean\";\n            }\n            case \"bigint\": {\n                return \"bigint\";\n            }\n            case \"function\": {\n                return \"funkce\";\n            }\n            case \"symbol\": {\n                return \"symbol\";\n            }\n            case \"undefined\": {\n                return \"undefined\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"pole\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"regulární výraz\",\n        email: \"e-mailová adresa\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"datum a čas ve formátu ISO\",\n        date: \"datum ve formátu ISO\",\n        time: \"čas ve formátu ISO\",\n        duration: \"doba trvání ISO\",\n        ipv4: \"IPv4 adresa\",\n        ipv6: \"IPv6 adresa\",\n        cidrv4: \"rozsah IPv4\",\n        cidrv6: \"rozsah IPv6\",\n        base64: \"řetězec zakódovaný ve formátu base64\",\n        base64url: \"řetězec zakódovaný ve formátu base64url\",\n        json_string: \"řetězec ve formátu JSON\",\n        e164: \"číslo E.164\",\n        jwt: \"JWT\",\n        template_literal: \"vstup\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Neplatný vstup: očekáváno ${issue.expected}, obdrženo ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Neplatný vstup: očekáváno ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Neplatná možnost: očekávána jedna z hodnot ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Hodnota je příliš velká: ${issue.origin ?? \"hodnota\"} musí mít ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"prvků\"}`;\n                }\n                return `Hodnota je příliš velká: ${issue.origin ?? \"hodnota\"} musí být ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Hodnota je příliš malá: ${issue.origin ?? \"hodnota\"} musí mít ${adj}${issue.minimum.toString()} ${sizing.unit ?? \"prvků\"}`;\n                }\n                return `Hodnota je příliš malá: ${issue.origin ?? \"hodnota\"} musí být ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Neplatný řetězec: musí začínat na \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Neplatný řetězec: musí končit na \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Neplatný řetězec: musí obsahovat \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Neplatný řetězec: musí odpovídat vzoru ${_issue.pattern}`;\n                return `Neplatný formát ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Neplatné číslo: musí být násobkem ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Neznámé klíče: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Neplatný klíč v ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Neplatný vstup\";\n            case \"invalid_element\":\n                return `Neplatná hodnota v ${issue.origin}`;\n            default:\n                return `Neplatný vstup`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"Zeichen\", verb: \"zu haben\" },\n        file: { unit: \"Bytes\", verb: \"zu haben\" },\n        array: { unit: \"Elemente\", verb: \"zu haben\" },\n        set: { unit: \"Elemente\", verb: \"zu haben\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"Zahl\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"Array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"Eingabe\",\n        email: \"E-Mail-Adresse\",\n        url: \"URL\",\n        emoji: \"Emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-Datum und -Uhrzeit\",\n        date: \"ISO-Datum\",\n        time: \"ISO-Uhrzeit\",\n        duration: \"ISO-Dauer\",\n        ipv4: \"IPv4-Adresse\",\n        ipv6: \"IPv6-Adresse\",\n        cidrv4: \"IPv4-Bereich\",\n        cidrv6: \"IPv6-Bereich\",\n        base64: \"Base64-codierter String\",\n        base64url: \"Base64-URL-codierter String\",\n        json_string: \"JSON-String\",\n        e164: \"E.164-Nummer\",\n        jwt: \"JWT\",\n        template_literal: \"Eingabe\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ungültige Eingabe: erwartet ${issue.expected}, erhalten ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ungültige Eingabe: erwartet ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ungültige Option: erwartet eine von ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Zu groß: erwartet, dass ${issue.origin ?? \"Wert\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"Elemente\"} hat`;\n                return `Zu groß: erwartet, dass ${issue.origin ?? \"Wert\"} ${adj}${issue.maximum.toString()} ist`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Zu klein: erwartet, dass ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} hat`;\n                }\n                return `Zu klein: erwartet, dass ${issue.origin} ${adj}${issue.minimum.toString()} ist`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Ungültiger String: muss mit \"${_issue.prefix}\" beginnen`;\n                if (_issue.format === \"ends_with\")\n                    return `Ungültiger String: muss mit \"${_issue.suffix}\" enden`;\n                if (_issue.format === \"includes\")\n                    return `Ungültiger String: muss \"${_issue.includes}\" enthalten`;\n                if (_issue.format === \"regex\")\n                    return `Ungültiger String: muss dem Muster ${_issue.pattern} entsprechen`;\n                return `Ungültig: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ungültige Zahl: muss ein Vielfaches von ${issue.divisor} sein`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Unbekannte Schlüssel\" : \"Unbekannter Schlüssel\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ungültiger Schlüssel in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ungültige Eingabe\";\n            case \"invalid_element\":\n                return `Ungültiger Wert in ${issue.origin}`;\n            default:\n                return `Ungültige Eingabe`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"number\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"characters\", verb: \"to have\" },\n        file: { unit: \"bytes\", verb: \"to have\" },\n        array: { unit: \"items\", verb: \"to have\" },\n        set: { unit: \"items\", verb: \"to have\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"input\",\n        email: \"email address\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datetime\",\n        date: \"ISO date\",\n        time: \"ISO time\",\n        duration: \"ISO duration\",\n        ipv4: \"IPv4 address\",\n        ipv6: \"IPv6 address\",\n        cidrv4: \"IPv4 range\",\n        cidrv6: \"IPv6 range\",\n        base64: \"base64-encoded string\",\n        base64url: \"base64url-encoded string\",\n        json_string: \"JSON string\",\n        e164: \"E.164 number\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Invalid input: expected ${issue.expected}, received ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Invalid input: expected ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Invalid option: expected one of ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Too big: expected ${issue.origin ?? \"value\"} to have ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\n                return `Too big: expected ${issue.origin ?? \"value\"} to be ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Too small: expected ${issue.origin} to have ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Too small: expected ${issue.origin} to be ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Invalid string: must start with \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Invalid string: must end with \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Invalid string: must include \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Invalid string: must match pattern ${_issue.pattern}`;\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Invalid number: must be a multiple of ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Unrecognized key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Invalid key in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Invalid input\";\n            case \"invalid_element\":\n                return `Invalid value in ${issue.origin}`;\n            default:\n                return `Invalid input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"nombro\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"tabelo\";\n            }\n            if (data === null) {\n                return \"senvalora\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karaktrojn\", verb: \"havi\" },\n        file: { unit: \"bajtojn\", verb: \"havi\" },\n        array: { unit: \"elementojn\", verb: \"havi\" },\n        set: { unit: \"elementojn\", verb: \"havi\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"enigo\",\n        email: \"retadreso\",\n        url: \"URL\",\n        emoji: \"emoĝio\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-datotempo\",\n        date: \"ISO-dato\",\n        time: \"ISO-tempo\",\n        duration: \"ISO-daŭro\",\n        ipv4: \"IPv4-adreso\",\n        ipv6: \"IPv6-adreso\",\n        cidrv4: \"IPv4-rango\",\n        cidrv6: \"IPv6-rango\",\n        base64: \"64-ume kodita karaktraro\",\n        base64url: \"URL-64-ume kodita karaktraro\",\n        json_string: \"JSON-karaktraro\",\n        e164: \"E.164-nombro\",\n        jwt: \"JWT\",\n        template_literal: \"enigo\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Nevalida enigo: atendiĝis ${issue.expected}, riceviĝis ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Nevalida enigo: atendiĝis ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Nevalida opcio: atendiĝis unu el ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Tro granda: atendiĝis ke ${issue.origin ?? \"valoro\"} havu ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementojn\"}`;\n                return `Tro granda: atendiĝis ke ${issue.origin ?? \"valoro\"} havu ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Tro malgranda: atendiĝis ke ${issue.origin} havu ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Tro malgranda: atendiĝis ke ${issue.origin} estu ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Nevalida karaktraro: devas komenciĝi per \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Nevalida karaktraro: devas finiĝi per \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Nevalida karaktraro: devas inkluzivi \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Nevalida karaktraro: devas kongrui kun la modelo ${_issue.pattern}`;\n                return `Nevalida ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Nevalida nombro: devas esti oblo de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Nekonata${issue.keys.length > 1 ? \"j\" : \"\"} ŝlosilo${issue.keys.length > 1 ? \"j\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Nevalida ŝlosilo en ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Nevalida enigo\";\n            case \"invalid_element\":\n                return `Nevalida valoro en ${issue.origin}`;\n            default:\n                return `Nevalida enigo`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caracteres\", verb: \"tener\" },\n        file: { unit: \"bytes\", verb: \"tener\" },\n        array: { unit: \"elementos\", verb: \"tener\" },\n        set: { unit: \"elementos\", verb: \"tener\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"número\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"arreglo\";\n                }\n                if (data === null) {\n                    return \"nulo\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrada\",\n        email: \"dirección de correo electrónico\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"fecha y hora ISO\",\n        date: \"fecha ISO\",\n        time: \"hora ISO\",\n        duration: \"duración ISO\",\n        ipv4: \"dirección IPv4\",\n        ipv6: \"dirección IPv6\",\n        cidrv4: \"rango IPv4\",\n        cidrv6: \"rango IPv6\",\n        base64: \"cadena codificada en base64\",\n        base64url: \"URL codificada en base64\",\n        json_string: \"cadena JSON\",\n        e164: \"número E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrada\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Entrada inválida: se esperaba ${issue.expected}, recibido ${parsedType(issue.input)}`;\n            // return `Entrada inválida: se esperaba ${issue.expected}, recibido ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrada inválida: se esperaba ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opción inválida: se esperaba una de ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Demasiado grande: se esperaba que ${issue.origin ?? \"valor\"} tuviera ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementos\"}`;\n                return `Demasiado grande: se esperaba que ${issue.origin ?? \"valor\"} fuera ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Demasiado pequeño: se esperaba que ${issue.origin} tuviera ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Demasiado pequeño: se esperaba que ${issue.origin} fuera ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Cadena inválida: debe comenzar con \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Cadena inválida: debe terminar en \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Cadena inválida: debe incluir \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Cadena inválida: debe coincidir con el patrón ${_issue.pattern}`;\n                return `Inválido ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Número inválido: debe ser múltiplo de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Llave${issue.keys.length > 1 ? \"s\" : \"\"} desconocida${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Llave inválida en ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrada inválida\";\n            case \"invalid_element\":\n                return `Valor inválido en ${issue.origin}`;\n            default:\n                return `Entrada inválida`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"کاراکتر\", verb: \"داشته باشد\" },\n        file: { unit: \"بایت\", verb: \"داشته باشد\" },\n        array: { unit: \"آیتم\", verb: \"داشته باشد\" },\n        set: { unit: \"آیتم\", verb: \"داشته باشد\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"عدد\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"آرایه\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ورودی\",\n        email: \"آدرس ایمیل\",\n        url: \"URL\",\n        emoji: \"ایموجی\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"تاریخ و زمان ایزو\",\n        date: \"تاریخ ایزو\",\n        time: \"زمان ایزو\",\n        duration: \"مدت زمان ایزو\",\n        ipv4: \"IPv4 آدرس\",\n        ipv6: \"IPv6 آدرس\",\n        cidrv4: \"IPv4 دامنه\",\n        cidrv6: \"IPv6 دامنه\",\n        base64: \"base64-encoded رشته\",\n        base64url: \"base64url-encoded رشته\",\n        json_string: \"JSON رشته\",\n        e164: \"E.164 عدد\",\n        jwt: \"JWT\",\n        template_literal: \"ورودی\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ورودی نامعتبر: می‌بایست ${issue.expected} می‌بود، ${parsedType(issue.input)} دریافت شد`;\n            case \"invalid_value\":\n                if (issue.values.length === 1) {\n                    return `ورودی نامعتبر: می‌بایست ${util.stringifyPrimitive(issue.values[0])} می‌بود`;\n                }\n                return `گزینه نامعتبر: می‌بایست یکی از ${util.joinValues(issue.values, \"|\")} می‌بود`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `خیلی بزرگ: ${issue.origin ?? \"مقدار\"} باید ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"عنصر\"} باشد`;\n                }\n                return `خیلی بزرگ: ${issue.origin ?? \"مقدار\"} باید ${adj}${issue.maximum.toString()} باشد`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `خیلی کوچک: ${issue.origin} باید ${adj}${issue.minimum.toString()} ${sizing.unit} باشد`;\n                }\n                return `خیلی کوچک: ${issue.origin} باید ${adj}${issue.minimum.toString()} باشد`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `رشته نامعتبر: باید با \"${_issue.prefix}\" شروع شود`;\n                }\n                if (_issue.format === \"ends_with\") {\n                    return `رشته نامعتبر: باید با \"${_issue.suffix}\" تمام شود`;\n                }\n                if (_issue.format === \"includes\") {\n                    return `رشته نامعتبر: باید شامل \"${_issue.includes}\" باشد`;\n                }\n                if (_issue.format === \"regex\") {\n                    return `رشته نامعتبر: باید با الگوی ${_issue.pattern} مطابقت داشته باشد`;\n                }\n                return `${Nouns[_issue.format] ?? issue.format} نامعتبر`;\n            }\n            case \"not_multiple_of\":\n                return `عدد نامعتبر: باید مضرب ${issue.divisor} باشد`;\n            case \"unrecognized_keys\":\n                return `کلید${issue.keys.length > 1 ? \"های\" : \"\"} ناشناس: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `کلید ناشناس در ${issue.origin}`;\n            case \"invalid_union\":\n                return `ورودی نامعتبر`;\n            case \"invalid_element\":\n                return `مقدار نامعتبر در ${issue.origin}`;\n            default:\n                return `ورودی نامعتبر`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"merkkiä\", subject: \"merkkijonon\" },\n        file: { unit: \"tavua\", subject: \"tiedoston\" },\n        array: { unit: \"alkiota\", subject: \"listan\" },\n        set: { unit: \"alkiota\", subject: \"joukon\" },\n        number: { unit: \"\", subject: \"luvun\" },\n        bigint: { unit: \"\", subject: \"suuren kokonaisluvun\" },\n        int: { unit: \"\", subject: \"kokonaisluvun\" },\n        date: { unit: \"\", subject: \"päivämäärän\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"säännöllinen lauseke\",\n        email: \"sähköpostiosoite\",\n        url: \"URL-osoite\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-aikaleima\",\n        date: \"ISO-päivämäärä\",\n        time: \"ISO-aika\",\n        duration: \"ISO-kesto\",\n        ipv4: \"IPv4-osoite\",\n        ipv6: \"IPv6-osoite\",\n        cidrv4: \"IPv4-alue\",\n        cidrv6: \"IPv6-alue\",\n        base64: \"base64-koodattu merkkijono\",\n        base64url: \"base64url-koodattu merkkijono\",\n        json_string: \"JSON-merkkijono\",\n        e164: \"E.164-luku\",\n        jwt: \"JWT\",\n        template_literal: \"templaattimerkkijono\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Virheellinen tyyppi: odotettiin ${issue.expected}, oli ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Virheellinen syöte: täytyy olla ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Virheellinen valinta: täytyy olla yksi seuraavista: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Liian suuri: ${sizing.subject} täytyy olla ${adj}${issue.maximum.toString()} ${sizing.unit}`.trim();\n                }\n                return `Liian suuri: arvon täytyy olla ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Liian pieni: ${sizing.subject} täytyy olla ${adj}${issue.minimum.toString()} ${sizing.unit}`.trim();\n                }\n                return `Liian pieni: arvon täytyy olla ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Virheellinen syöte: täytyy alkaa \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Virheellinen syöte: täytyy loppua \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Virheellinen syöte: täytyy sisältää \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\") {\n                    return `Virheellinen syöte: täytyy vastata säännöllistä lauseketta ${_issue.pattern}`;\n                }\n                return `Virheellinen ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Virheellinen luku: täytyy olla luvun ${issue.divisor} monikerta`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Tuntemattomat avaimet\" : \"Tuntematon avain\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return \"Virheellinen avain tietueessa\";\n            case \"invalid_union\":\n                return \"Virheellinen unioni\";\n            case \"invalid_element\":\n                return \"Virheellinen arvo joukossa\";\n            default:\n                return `Virheellinen syöte`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caractères\", verb: \"avoir\" },\n        file: { unit: \"octets\", verb: \"avoir\" },\n        array: { unit: \"éléments\", verb: \"avoir\" },\n        set: { unit: \"éléments\", verb: \"avoir\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"nombre\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tableau\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrée\",\n        email: \"adresse e-mail\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"date et heure ISO\",\n        date: \"date ISO\",\n        time: \"heure ISO\",\n        duration: \"durée ISO\",\n        ipv4: \"adresse IPv4\",\n        ipv6: \"adresse IPv6\",\n        cidrv4: \"plage IPv4\",\n        cidrv6: \"plage IPv6\",\n        base64: \"chaîne encodée en base64\",\n        base64url: \"chaîne encodée en base64url\",\n        json_string: \"chaîne JSON\",\n        e164: \"numéro E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrée\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Entrée invalide : ${issue.expected} attendu, ${parsedType(issue.input)} reçu`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrée invalide : ${util.stringifyPrimitive(issue.values[0])} attendu`;\n                return `Option invalide : une valeur parmi ${util.joinValues(issue.values, \"|\")} attendue`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Trop grand : ${issue.origin ?? \"valeur\"} doit ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"élément(s)\"}`;\n                return `Trop grand : ${issue.origin ?? \"valeur\"} doit être ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Trop petit : ${issue.origin} doit ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Trop petit : ${issue.origin} doit être ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Chaîne invalide : doit commencer par \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Chaîne invalide : doit se terminer par \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Chaîne invalide : doit inclure \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Chaîne invalide : doit correspondre au modèle ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} invalide`;\n            }\n            case \"not_multiple_of\":\n                return `Nombre invalide : doit être un multiple de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Clé${issue.keys.length > 1 ? \"s\" : \"\"} non reconnue${issue.keys.length > 1 ? \"s\" : \"\"} : ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Clé invalide dans ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrée invalide\";\n            case \"invalid_element\":\n                return `Valeur invalide dans ${issue.origin}`;\n            default:\n                return `Entrée invalide`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caractères\", verb: \"avoir\" },\n        file: { unit: \"octets\", verb: \"avoir\" },\n        array: { unit: \"éléments\", verb: \"avoir\" },\n        set: { unit: \"éléments\", verb: \"avoir\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrée\",\n        email: \"adresse courriel\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"date-heure ISO\",\n        date: \"date ISO\",\n        time: \"heure ISO\",\n        duration: \"durée ISO\",\n        ipv4: \"adresse IPv4\",\n        ipv6: \"adresse IPv6\",\n        cidrv4: \"plage IPv4\",\n        cidrv6: \"plage IPv6\",\n        base64: \"chaîne encodée en base64\",\n        base64url: \"chaîne encodée en base64url\",\n        json_string: \"chaîne JSON\",\n        e164: \"numéro E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrée\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Entrée invalide : attendu ${issue.expected}, reçu ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrée invalide : attendu ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Option invalide : attendu l'une des valeurs suivantes ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"≤\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Trop grand : attendu que ${issue.origin ?? \"la valeur\"} ait ${adj}${issue.maximum.toString()} ${sizing.unit}`;\n                return `Trop grand : attendu que ${issue.origin ?? \"la valeur\"} soit ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"≥\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Trop petit : attendu que ${issue.origin} ait ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Trop petit : attendu que ${issue.origin} soit ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Chaîne invalide : doit commencer par \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Chaîne invalide : doit se terminer par \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Chaîne invalide : doit inclure \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Chaîne invalide : doit correspondre au motif ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} invalide`;\n            }\n            case \"not_multiple_of\":\n                return `Nombre invalide : doit être un multiple de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Clé${issue.keys.length > 1 ? \"s\" : \"\"} non reconnue${issue.keys.length > 1 ? \"s\" : \"\"} : ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Clé invalide dans ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrée invalide\";\n            case \"invalid_element\":\n                return `Valeur invalide dans ${issue.origin}`;\n            default:\n                return `Entrée invalide`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"אותיות\", verb: \"לכלול\" },\n        file: { unit: \"בייטים\", verb: \"לכלול\" },\n        array: { unit: \"פריטים\", verb: \"לכלול\" },\n        set: { unit: \"פריטים\", verb: \"לכלול\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"קלט\",\n        email: \"כתובת אימייל\",\n        url: \"כתובת רשת\",\n        emoji: \"אימוג'י\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"תאריך וזמן ISO\",\n        date: \"תאריך ISO\",\n        time: \"זמן ISO\",\n        duration: \"משך זמן ISO\",\n        ipv4: \"כתובת IPv4\",\n        ipv6: \"כתובת IPv6\",\n        cidrv4: \"טווח IPv4\",\n        cidrv6: \"טווח IPv6\",\n        base64: \"מחרוזת בבסיס 64\",\n        base64url: \"מחרוזת בבסיס 64 לכתובות רשת\",\n        json_string: \"מחרוזת JSON\",\n        e164: \"מספר E.164\",\n        jwt: \"JWT\",\n        template_literal: \"קלט\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `קלט לא תקין: צריך ${issue.expected}, התקבל ${parsedType(issue.input)}`;\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `קלט לא תקין: צריך ${util.stringifyPrimitive(issue.values[0])}`;\n                return `קלט לא תקין: צריך אחת מהאפשרויות  ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `גדול מדי: ${issue.origin ?? \"value\"} צריך להיות ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\n                return `גדול מדי: ${issue.origin ?? \"value\"} צריך להיות ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `קטן מדי: ${issue.origin} צריך להיות ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `קטן מדי: ${issue.origin} צריך להיות ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `מחרוזת לא תקינה: חייבת להתחיל ב\"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `מחרוזת לא תקינה: חייבת להסתיים ב \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `מחרוזת לא תקינה: חייבת לכלול \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `מחרוזת לא תקינה: חייבת להתאים לתבנית ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} לא תקין`;\n            }\n            case \"not_multiple_of\":\n                return `מספר לא תקין: חייב להיות מכפלה של ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `מפתח${issue.keys.length > 1 ? \"ות\" : \"\"} לא מזוה${issue.keys.length > 1 ? \"ים\" : \"ה\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `מפתח לא תקין ב${issue.origin}`;\n            case \"invalid_union\":\n                return \"קלט לא תקין\";\n            case \"invalid_element\":\n                return `ערך לא תקין ב${issue.origin}`;\n            default:\n                return `קלט לא תקין`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"legyen\" },\n        file: { unit: \"byte\", verb: \"legyen\" },\n        array: { unit: \"elem\", verb: \"legyen\" },\n        set: { unit: \"elem\", verb: \"legyen\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"szám\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tömb\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"bemenet\",\n        email: \"email cím\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO időbélyeg\",\n        date: \"ISO dátum\",\n        time: \"ISO idő\",\n        duration: \"ISO időintervallum\",\n        ipv4: \"IPv4 cím\",\n        ipv6: \"IPv6 cím\",\n        cidrv4: \"IPv4 tartomány\",\n        cidrv6: \"IPv6 tartomány\",\n        base64: \"base64-kódolt string\",\n        base64url: \"base64url-kódolt string\",\n        json_string: \"JSON string\",\n        e164: \"E.164 szám\",\n        jwt: \"JWT\",\n        template_literal: \"bemenet\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Érvénytelen bemenet: a várt érték ${issue.expected}, a kapott érték ${parsedType(issue.input)}`;\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Érvénytelen bemenet: a várt érték ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Érvénytelen opció: valamelyik érték várt ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Túl nagy: ${issue.origin ?? \"érték\"} mérete túl nagy ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elem\"}`;\n                return `Túl nagy: a bemeneti érték ${issue.origin ?? \"érték\"} túl nagy: ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Túl kicsi: a bemeneti érték ${issue.origin} mérete túl kicsi ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Túl kicsi: a bemeneti érték ${issue.origin} túl kicsi ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Érvénytelen string: \"${_issue.prefix}\" értékkel kell kezdődnie`;\n                if (_issue.format === \"ends_with\")\n                    return `Érvénytelen string: \"${_issue.suffix}\" értékkel kell végződnie`;\n                if (_issue.format === \"includes\")\n                    return `Érvénytelen string: \"${_issue.includes}\" értéket kell tartalmaznia`;\n                if (_issue.format === \"regex\")\n                    return `Érvénytelen string: ${_issue.pattern} mintának kell megfelelnie`;\n                return `Érvénytelen ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Érvénytelen szám: ${issue.divisor} többszörösének kell lennie`;\n            case \"unrecognized_keys\":\n                return `Ismeretlen kulcs${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Érvénytelen kulcs ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Érvénytelen bemenet\";\n            case \"invalid_element\":\n                return `Érvénytelen érték: ${issue.origin}`;\n            default:\n                return `Érvénytelen bemenet`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"memiliki\" },\n        file: { unit: \"byte\", verb: \"memiliki\" },\n        array: { unit: \"item\", verb: \"memiliki\" },\n        set: { unit: \"item\", verb: \"memiliki\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"alamat email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"tanggal dan waktu format ISO\",\n        date: \"tanggal format ISO\",\n        time: \"jam format ISO\",\n        duration: \"durasi format ISO\",\n        ipv4: \"alamat IPv4\",\n        ipv6: \"alamat IPv6\",\n        cidrv4: \"rentang alamat IPv4\",\n        cidrv6: \"rentang alamat IPv6\",\n        base64: \"string dengan enkode base64\",\n        base64url: \"string dengan enkode base64url\",\n        json_string: \"string JSON\",\n        e164: \"angka E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input tidak valid: diharapkan ${issue.expected}, diterima ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input tidak valid: diharapkan ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Pilihan tidak valid: diharapkan salah satu dari ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Terlalu besar: diharapkan ${issue.origin ?? \"value\"} memiliki ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\n                return `Terlalu besar: diharapkan ${issue.origin ?? \"value\"} menjadi ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Terlalu kecil: diharapkan ${issue.origin} memiliki ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Terlalu kecil: diharapkan ${issue.origin} menjadi ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `String tidak valid: harus dimulai dengan \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `String tidak valid: harus berakhir dengan \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `String tidak valid: harus menyertakan \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `String tidak valid: harus sesuai pola ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} tidak valid`;\n            }\n            case \"not_multiple_of\":\n                return `Angka tidak valid: harus kelipatan dari ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Kunci tidak dikenali ${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Kunci tidak valid di ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input tidak valid\";\n            case \"invalid_element\":\n                return `Nilai tidak valid di ${issue.origin}`;\n            default:\n                return `Input tidak valid`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caratteri\", verb: \"avere\" },\n        file: { unit: \"byte\", verb: \"avere\" },\n        array: { unit: \"elementi\", verb: \"avere\" },\n        set: { unit: \"elementi\", verb: \"avere\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"numero\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"vettore\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"indirizzo email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data e ora ISO\",\n        date: \"data ISO\",\n        time: \"ora ISO\",\n        duration: \"durata ISO\",\n        ipv4: \"indirizzo IPv4\",\n        ipv6: \"indirizzo IPv6\",\n        cidrv4: \"intervallo IPv4\",\n        cidrv6: \"intervallo IPv6\",\n        base64: \"stringa codificata in base64\",\n        base64url: \"URL codificata in base64\",\n        json_string: \"stringa JSON\",\n        e164: \"numero E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input non valido: atteso ${issue.expected}, ricevuto ${parsedType(issue.input)}`;\n            // return `Input non valido: atteso ${issue.expected}, ricevuto ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input non valido: atteso ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opzione non valida: atteso uno tra ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Troppo grande: ${issue.origin ?? \"valore\"} deve avere ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementi\"}`;\n                return `Troppo grande: ${issue.origin ?? \"valore\"} deve essere ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Troppo piccolo: ${issue.origin} deve avere ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Troppo piccolo: ${issue.origin} deve essere ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Stringa non valida: deve iniziare con \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Stringa non valida: deve terminare con \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Stringa non valida: deve includere \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Stringa non valida: deve corrispondere al pattern ${_issue.pattern}`;\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Numero non valido: deve essere un multiplo di ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Chiav${issue.keys.length > 1 ? \"i\" : \"e\"} non riconosciut${issue.keys.length > 1 ? \"e\" : \"a\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Chiave non valida in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input non valido\";\n            case \"invalid_element\":\n                return `Valore non valido in ${issue.origin}`;\n            default:\n                return `Input non valido`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"文字\", verb: \"である\" },\n        file: { unit: \"バイト\", verb: \"である\" },\n        array: { unit: \"要素\", verb: \"である\" },\n        set: { unit: \"要素\", verb: \"である\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"数値\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"配列\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"入力値\",\n        email: \"メールアドレス\",\n        url: \"URL\",\n        emoji: \"絵文字\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO日時\",\n        date: \"ISO日付\",\n        time: \"ISO時刻\",\n        duration: \"ISO期間\",\n        ipv4: \"IPv4アドレス\",\n        ipv6: \"IPv6アドレス\",\n        cidrv4: \"IPv4範囲\",\n        cidrv6: \"IPv6範囲\",\n        base64: \"base64エンコード文字列\",\n        base64url: \"base64urlエンコード文字列\",\n        json_string: \"JSON文字列\",\n        e164: \"E.164番号\",\n        jwt: \"JWT\",\n        template_literal: \"入力値\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `無効な入力: ${issue.expected}が期待されましたが、${parsedType(issue.input)}が入力されました`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `無効な入力: ${util.stringifyPrimitive(issue.values[0])}が期待されました`;\n                return `無効な選択: ${util.joinValues(issue.values, \"、\")}のいずれかである必要があります`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"以下である\" : \"より小さい\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `大きすぎる値: ${issue.origin ?? \"値\"}は${issue.maximum.toString()}${sizing.unit ?? \"要素\"}${adj}必要があります`;\n                return `大きすぎる値: ${issue.origin ?? \"値\"}は${issue.maximum.toString()}${adj}必要があります`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"以上である\" : \"より大きい\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `小さすぎる値: ${issue.origin}は${issue.minimum.toString()}${sizing.unit}${adj}必要があります`;\n                return `小さすぎる値: ${issue.origin}は${issue.minimum.toString()}${adj}必要があります`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `無効な文字列: \"${_issue.prefix}\"で始まる必要があります`;\n                if (_issue.format === \"ends_with\")\n                    return `無効な文字列: \"${_issue.suffix}\"で終わる必要があります`;\n                if (_issue.format === \"includes\")\n                    return `無効な文字列: \"${_issue.includes}\"を含む必要があります`;\n                if (_issue.format === \"regex\")\n                    return `無効な文字列: パターン${_issue.pattern}に一致する必要があります`;\n                return `無効な${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `無効な数値: ${issue.divisor}の倍数である必要があります`;\n            case \"unrecognized_keys\":\n                return `認識されていないキー${issue.keys.length > 1 ? \"群\" : \"\"}: ${util.joinValues(issue.keys, \"、\")}`;\n            case \"invalid_key\":\n                return `${issue.origin}内の無効なキー`;\n            case \"invalid_union\":\n                return \"無効な入力\";\n            case \"invalid_element\":\n                return `${issue.origin}内の無効な値`;\n            default:\n                return `無効な入力`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"តួអក្សរ\", verb: \"គួរមាន\" },\n        file: { unit: \"បៃ\", verb: \"គួរមាន\" },\n        array: { unit: \"ធាតុ\", verb: \"គួរមាន\" },\n        set: { unit: \"ធាតុ\", verb: \"គួរមាន\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"មិនមែនជាលេខ (NaN)\" : \"លេខ\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"អារេ (Array)\";\n                }\n                if (data === null) {\n                    return \"គ្មានតម្លៃ (null)\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ទិន្នន័យបញ្ចូល\",\n        email: \"អាសយដ្ឋានអ៊ីមែល\",\n        url: \"URL\",\n        emoji: \"សញ្ញាអារម្មណ៍\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"កាលបរិច្ឆេទ និងម៉ោង ISO\",\n        date: \"កាលបរិច្ឆេទ ISO\",\n        time: \"ម៉ោង ISO\",\n        duration: \"រយៈពេល ISO\",\n        ipv4: \"អាសយដ្ឋាន IPv4\",\n        ipv6: \"អាសយដ្ឋាន IPv6\",\n        cidrv4: \"ដែនអាសយដ្ឋាន IPv4\",\n        cidrv6: \"ដែនអាសយដ្ឋាន IPv6\",\n        base64: \"ខ្សែអក្សរអ៊ិកូដ base64\",\n        base64url: \"ខ្សែអក្សរអ៊ិកូដ base64url\",\n        json_string: \"ខ្សែអក្សរ JSON\",\n        e164: \"លេខ E.164\",\n        jwt: \"JWT\",\n        template_literal: \"ទិន្នន័យបញ្ចូល\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${issue.expected} ប៉ុន្តែទទួលបាន ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${util.stringifyPrimitive(issue.values[0])}`;\n                return `ជម្រើសមិនត្រឹមត្រូវ៖ ត្រូវជាមួយក្នុងចំណោម ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `ធំពេក៖ ត្រូវការ ${issue.origin ?? \"តម្លៃ\"} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"ធាតុ\"}`;\n                return `ធំពេក៖ ត្រូវការ ${issue.origin ?? \"តម្លៃ\"} ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `តូចពេក៖ ត្រូវការ ${issue.origin} ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `តូចពេក៖ ត្រូវការ ${issue.origin} ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវចាប់ផ្តើមដោយ \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវបញ្ចប់ដោយ \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវមាន \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវតែផ្គូផ្គងនឹងទម្រង់ដែលបានកំណត់ ${_issue.pattern}`;\n                return `មិនត្រឹមត្រូវ៖ ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `លេខមិនត្រឹមត្រូវ៖ ត្រូវតែជាពហុគុណនៃ ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `រកឃើញសោមិនស្គាល់៖ ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `សោមិនត្រឹមត្រូវនៅក្នុង ${issue.origin}`;\n            case \"invalid_union\":\n                return `ទិន្នន័យមិនត្រឹមត្រូវ`;\n            case \"invalid_element\":\n                return `ទិន្នន័យមិនត្រឹមត្រូវនៅក្នុង ${issue.origin}`;\n            default:\n                return `ទិន្នន័យមិនត្រឹមត្រូវ`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"문자\", verb: \"to have\" },\n        file: { unit: \"바이트\", verb: \"to have\" },\n        array: { unit: \"개\", verb: \"to have\" },\n        set: { unit: \"개\", verb: \"to have\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"입력\",\n        email: \"이메일 주소\",\n        url: \"URL\",\n        emoji: \"이모지\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO 날짜시간\",\n        date: \"ISO 날짜\",\n        time: \"ISO 시간\",\n        duration: \"ISO 기간\",\n        ipv4: \"IPv4 주소\",\n        ipv6: \"IPv6 주소\",\n        cidrv4: \"IPv4 범위\",\n        cidrv6: \"IPv6 범위\",\n        base64: \"base64 인코딩 문자열\",\n        base64url: \"base64url 인코딩 문자열\",\n        json_string: \"JSON 문자열\",\n        e164: \"E.164 번호\",\n        jwt: \"JWT\",\n        template_literal: \"입력\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `잘못된 입력: 예상 타입은 ${issue.expected}, 받은 타입은 ${parsedType(issue.input)}입니다`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `잘못된 입력: 값은 ${util.stringifyPrimitive(issue.values[0])} 이어야 합니다`;\n                return `잘못된 옵션: ${util.joinValues(issue.values, \"또는 \")} 중 하나여야 합니다`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"이하\" : \"미만\";\n                const suffix = adj === \"미만\" ? \"이어야 합니다\" : \"여야 합니다\";\n                const sizing = getSizing(issue.origin);\n                const unit = sizing?.unit ?? \"요소\";\n                if (sizing)\n                    return `${issue.origin ?? \"값\"}이 너무 큽니다: ${issue.maximum.toString()}${unit} ${adj}${suffix}`;\n                return `${issue.origin ?? \"값\"}이 너무 큽니다: ${issue.maximum.toString()} ${adj}${suffix}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"이상\" : \"초과\";\n                const suffix = adj === \"이상\" ? \"이어야 합니다\" : \"여야 합니다\";\n                const sizing = getSizing(issue.origin);\n                const unit = sizing?.unit ?? \"요소\";\n                if (sizing) {\n                    return `${issue.origin ?? \"값\"}이 너무 작습니다: ${issue.minimum.toString()}${unit} ${adj}${suffix}`;\n                }\n                return `${issue.origin ?? \"값\"}이 너무 작습니다: ${issue.minimum.toString()} ${adj}${suffix}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `잘못된 문자열: \"${_issue.prefix}\"(으)로 시작해야 합니다`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `잘못된 문자열: \"${_issue.suffix}\"(으)로 끝나야 합니다`;\n                if (_issue.format === \"includes\")\n                    return `잘못된 문자열: \"${_issue.includes}\"을(를) 포함해야 합니다`;\n                if (_issue.format === \"regex\")\n                    return `잘못된 문자열: 정규식 ${_issue.pattern} 패턴과 일치해야 합니다`;\n                return `잘못된 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `잘못된 숫자: ${issue.divisor}의 배수여야 합니다`;\n            case \"unrecognized_keys\":\n                return `인식할 수 없는 키: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `잘못된 키: ${issue.origin}`;\n            case \"invalid_union\":\n                return `잘못된 입력`;\n            case \"invalid_element\":\n                return `잘못된 값: ${issue.origin}`;\n            default:\n                return `잘못된 입력`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"знаци\", verb: \"да имаат\" },\n        file: { unit: \"бајти\", verb: \"да имаат\" },\n        array: { unit: \"ставки\", verb: \"да имаат\" },\n        set: { unit: \"ставки\", verb: \"да имаат\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"број\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"низа\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"внес\",\n        email: \"адреса на е-пошта\",\n        url: \"URL\",\n        emoji: \"емоџи\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO датум и време\",\n        date: \"ISO датум\",\n        time: \"ISO време\",\n        duration: \"ISO времетраење\",\n        ipv4: \"IPv4 адреса\",\n        ipv6: \"IPv6 адреса\",\n        cidrv4: \"IPv4 опсег\",\n        cidrv6: \"IPv6 опсег\",\n        base64: \"base64-енкодирана низа\",\n        base64url: \"base64url-енкодирана низа\",\n        json_string: \"JSON низа\",\n        e164: \"E.164 број\",\n        jwt: \"JWT\",\n        template_literal: \"внес\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Грешен внес: се очекува ${issue.expected}, примено ${parsedType(issue.input)}`;\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Invalid input: expected ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Грешана опција: се очекува една ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Премногу голем: се очекува ${issue.origin ?? \"вредноста\"} да има ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"елементи\"}`;\n                return `Премногу голем: се очекува ${issue.origin ?? \"вредноста\"} да биде ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Премногу мал: се очекува ${issue.origin} да има ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Премногу мал: се очекува ${issue.origin} да биде ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Неважечка низа: мора да започнува со \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Неважечка низа: мора да завршува со \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Неважечка низа: мора да вклучува \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Неважечка низа: мора да одгоара на патернот ${_issue.pattern}`;\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Грешен број: мора да биде делив со ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Непрепознаени клучеви\" : \"Непрепознаен клуч\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Грешен клуч во ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Грешен внес\";\n            case \"invalid_element\":\n                return `Грешна вредност во ${issue.origin}`;\n            default:\n                return `Грешен внес`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"aksara\", verb: \"mempunyai\" },\n        file: { unit: \"bait\", verb: \"mempunyai\" },\n        array: { unit: \"elemen\", verb: \"mempunyai\" },\n        set: { unit: \"elemen\", verb: \"mempunyai\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"nombor\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"alamat e-mel\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"tarikh masa ISO\",\n        date: \"tarikh ISO\",\n        time: \"masa ISO\",\n        duration: \"tempoh ISO\",\n        ipv4: \"alamat IPv4\",\n        ipv6: \"alamat IPv6\",\n        cidrv4: \"julat IPv4\",\n        cidrv6: \"julat IPv6\",\n        base64: \"string dikodkan base64\",\n        base64url: \"string dikodkan base64url\",\n        json_string: \"string JSON\",\n        e164: \"nombor E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input tidak sah: dijangka ${issue.expected}, diterima ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input tidak sah: dijangka ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Pilihan tidak sah: dijangka salah satu daripada ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\n                return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} adalah ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Terlalu kecil: dijangka ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Terlalu kecil: dijangka ${issue.origin} adalah ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `String tidak sah: mesti bermula dengan \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `String tidak sah: mesti berakhir dengan \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `String tidak sah: mesti mengandungi \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `String tidak sah: mesti sepadan dengan corak ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} tidak sah`;\n            }\n            case \"not_multiple_of\":\n                return `Nombor tidak sah: perlu gandaan ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Kunci tidak dikenali: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Kunci tidak sah dalam ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input tidak sah\";\n            case \"invalid_element\":\n                return `Nilai tidak sah dalam ${issue.origin}`;\n            default:\n                return `Input tidak sah`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tekens\" },\n        file: { unit: \"bytes\" },\n        array: { unit: \"elementen\" },\n        set: { unit: \"elementen\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"getal\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"invoer\",\n        email: \"emailadres\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datum en tijd\",\n        date: \"ISO datum\",\n        time: \"ISO tijd\",\n        duration: \"ISO duur\",\n        ipv4: \"IPv4-adres\",\n        ipv6: \"IPv6-adres\",\n        cidrv4: \"IPv4-bereik\",\n        cidrv6: \"IPv6-bereik\",\n        base64: \"base64-gecodeerde tekst\",\n        base64url: \"base64 URL-gecodeerde tekst\",\n        json_string: \"JSON string\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"invoer\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ongeldige invoer: verwacht ${issue.expected}, ontving ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ongeldige invoer: verwacht ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ongeldige optie: verwacht één van ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementen\"} bevat`;\n                return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} is`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} bevat`;\n                }\n                return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} is`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Ongeldige tekst: moet met \"${_issue.prefix}\" beginnen`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Ongeldige tekst: moet op \"${_issue.suffix}\" eindigen`;\n                if (_issue.format === \"includes\")\n                    return `Ongeldige tekst: moet \"${_issue.includes}\" bevatten`;\n                if (_issue.format === \"regex\")\n                    return `Ongeldige tekst: moet overeenkomen met patroon ${_issue.pattern}`;\n                return `Ongeldig: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ongeldig getal: moet een veelvoud van ${issue.divisor} zijn`;\n            case \"unrecognized_keys\":\n                return `Onbekende key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ongeldige key in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ongeldige invoer\";\n            case \"invalid_element\":\n                return `Ongeldige waarde in ${issue.origin}`;\n            default:\n                return `Ongeldige invoer`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tegn\", verb: \"å ha\" },\n        file: { unit: \"bytes\", verb: \"å ha\" },\n        array: { unit: \"elementer\", verb: \"å inneholde\" },\n        set: { unit: \"elementer\", verb: \"å inneholde\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"tall\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"liste\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"e-postadresse\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO dato- og klokkeslett\",\n        date: \"ISO-dato\",\n        time: \"ISO-klokkeslett\",\n        duration: \"ISO-varighet\",\n        ipv4: \"IPv4-område\",\n        ipv6: \"IPv6-område\",\n        cidrv4: \"IPv4-spekter\",\n        cidrv6: \"IPv6-spekter\",\n        base64: \"base64-enkodet streng\",\n        base64url: \"base64url-enkodet streng\",\n        json_string: \"JSON-streng\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ugyldig input: forventet ${issue.expected}, fikk ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ugyldig verdi: forventet ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ugyldig valg: forventet en av ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `For stor(t): forventet ${issue.origin ?? \"value\"} til å ha ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementer\"}`;\n                return `For stor(t): forventet ${issue.origin ?? \"value\"} til å ha ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `For lite(n): forventet ${issue.origin} til å ha ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `For lite(n): forventet ${issue.origin} til å ha ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Ugyldig streng: må starte med \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Ugyldig streng: må ende med \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Ugyldig streng: må inneholde \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Ugyldig streng: må matche mønsteret ${_issue.pattern}`;\n                return `Ugyldig ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ugyldig tall: må være et multiplum av ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Ukjente nøkler\" : \"Ukjent nøkkel\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ugyldig nøkkel i ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ugyldig input\";\n            case \"invalid_element\":\n                return `Ugyldig verdi i ${issue.origin}`;\n            default:\n                return `Ugyldig input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"harf\", verb: \"olmalıdır\" },\n        file: { unit: \"bayt\", verb: \"olmalıdır\" },\n        array: { unit: \"unsur\", verb: \"olmalıdır\" },\n        set: { unit: \"unsur\", verb: \"olmalıdır\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"numara\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"saf\";\n                }\n                if (data === null) {\n                    return \"gayb\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"giren\",\n        email: \"epostagâh\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO hengâmı\",\n        date: \"ISO tarihi\",\n        time: \"ISO zamanı\",\n        duration: \"ISO müddeti\",\n        ipv4: \"IPv4 nişânı\",\n        ipv6: \"IPv6 nişânı\",\n        cidrv4: \"IPv4 menzili\",\n        cidrv6: \"IPv6 menzili\",\n        base64: \"base64-şifreli metin\",\n        base64url: \"base64url-şifreli metin\",\n        json_string: \"JSON metin\",\n        e164: \"E.164 sayısı\",\n        jwt: \"JWT\",\n        template_literal: \"giren\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Fâsit giren: umulan ${issue.expected}, alınan ${parsedType(issue.input)}`;\n            // return `Fâsit giren: umulan ${issue.expected}, alınan ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Fâsit giren: umulan ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Fâsit tercih: mûteberler ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Fazla büyük: ${issue.origin ?? \"value\"}, ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"} sahip olmalıydı.`;\n                return `Fazla büyük: ${issue.origin ?? \"value\"}, ${adj}${issue.maximum.toString()} olmalıydı.`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Fazla küçük: ${issue.origin}, ${adj}${issue.minimum.toString()} ${sizing.unit} sahip olmalıydı.`;\n                }\n                return `Fazla küçük: ${issue.origin}, ${adj}${issue.minimum.toString()} olmalıydı.`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Fâsit metin: \"${_issue.prefix}\" ile başlamalı.`;\n                if (_issue.format === \"ends_with\")\n                    return `Fâsit metin: \"${_issue.suffix}\" ile bitmeli.`;\n                if (_issue.format === \"includes\")\n                    return `Fâsit metin: \"${_issue.includes}\" ihtivâ etmeli.`;\n                if (_issue.format === \"regex\")\n                    return `Fâsit metin: ${_issue.pattern} nakşına uymalı.`;\n                return `Fâsit ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Fâsit sayı: ${issue.divisor} katı olmalıydı.`;\n            case \"unrecognized_keys\":\n                return `Tanınmayan anahtar ${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} için tanınmayan anahtar var.`;\n            case \"invalid_union\":\n                return \"Giren tanınamadı.\";\n            case \"invalid_element\":\n                return `${issue.origin} için tanınmayan kıymet var.`;\n            default:\n                return `Kıymet tanınamadı.`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"توکي\", verb: \"ولري\" },\n        file: { unit: \"بایټس\", verb: \"ولري\" },\n        array: { unit: \"توکي\", verb: \"ولري\" },\n        set: { unit: \"توکي\", verb: \"ولري\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"عدد\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"ارې\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ورودي\",\n        email: \"بریښنالیک\",\n        url: \"یو آر ال\",\n        emoji: \"ایموجي\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"نیټه او وخت\",\n        date: \"نېټه\",\n        time: \"وخت\",\n        duration: \"موده\",\n        ipv4: \"د IPv4 پته\",\n        ipv6: \"د IPv6 پته\",\n        cidrv4: \"د IPv4 ساحه\",\n        cidrv6: \"د IPv6 ساحه\",\n        base64: \"base64-encoded متن\",\n        base64url: \"base64url-encoded متن\",\n        json_string: \"JSON متن\",\n        e164: \"د E.164 شمېره\",\n        jwt: \"JWT\",\n        template_literal: \"ورودي\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ناسم ورودي: باید ${issue.expected} وای, مګر ${parsedType(issue.input)} ترلاسه شو`;\n            case \"invalid_value\":\n                if (issue.values.length === 1) {\n                    return `ناسم ورودي: باید ${util.stringifyPrimitive(issue.values[0])} وای`;\n                }\n                return `ناسم انتخاب: باید یو له ${util.joinValues(issue.values, \"|\")} څخه وای`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"عنصرونه\"} ولري`;\n                }\n                return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} وي`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} ${sizing.unit} ولري`;\n                }\n                return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} وي`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `ناسم متن: باید د \"${_issue.prefix}\" سره پیل شي`;\n                }\n                if (_issue.format === \"ends_with\") {\n                    return `ناسم متن: باید د \"${_issue.suffix}\" سره پای ته ورسيږي`;\n                }\n                if (_issue.format === \"includes\") {\n                    return `ناسم متن: باید \"${_issue.includes}\" ولري`;\n                }\n                if (_issue.format === \"regex\") {\n                    return `ناسم متن: باید د ${_issue.pattern} سره مطابقت ولري`;\n                }\n                return `${Nouns[_issue.format] ?? issue.format} ناسم دی`;\n            }\n            case \"not_multiple_of\":\n                return `ناسم عدد: باید د ${issue.divisor} مضرب وي`;\n            case \"unrecognized_keys\":\n                return `ناسم ${issue.keys.length > 1 ? \"کلیډونه\" : \"کلیډ\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `ناسم کلیډ په ${issue.origin} کې`;\n            case \"invalid_union\":\n                return `ناسمه ورودي`;\n            case \"invalid_element\":\n                return `ناسم عنصر په ${issue.origin} کې`;\n            default:\n                return `ناسمه ورودي`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"znaków\", verb: \"mieć\" },\n        file: { unit: \"bajtów\", verb: \"mieć\" },\n        array: { unit: \"elementów\", verb: \"mieć\" },\n        set: { unit: \"elementów\", verb: \"mieć\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"liczba\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tablica\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"wyrażenie\",\n        email: \"adres email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data i godzina w formacie ISO\",\n        date: \"data w formacie ISO\",\n        time: \"godzina w formacie ISO\",\n        duration: \"czas trwania ISO\",\n        ipv4: \"adres IPv4\",\n        ipv6: \"adres IPv6\",\n        cidrv4: \"zakres IPv4\",\n        cidrv6: \"zakres IPv6\",\n        base64: \"ciąg znaków zakodowany w formacie base64\",\n        base64url: \"ciąg znaków zakodowany w formacie base64url\",\n        json_string: \"ciąg znaków w formacie JSON\",\n        e164: \"liczba E.164\",\n        jwt: \"JWT\",\n        template_literal: \"wejście\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Nieprawidłowe dane wejściowe: oczekiwano ${issue.expected}, otrzymano ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Nieprawidłowe dane wejściowe: oczekiwano ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Nieprawidłowa opcja: oczekiwano jednej z wartości ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Za duża wartość: oczekiwano, że ${issue.origin ?? \"wartość\"} będzie mieć ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementów\"}`;\n                }\n                return `Zbyt duż(y/a/e): oczekiwano, że ${issue.origin ?? \"wartość\"} będzie wynosić ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Za mała wartość: oczekiwano, że ${issue.origin ?? \"wartość\"} będzie mieć ${adj}${issue.minimum.toString()} ${sizing.unit ?? \"elementów\"}`;\n                }\n                return `Zbyt mał(y/a/e): oczekiwano, że ${issue.origin ?? \"wartość\"} będzie wynosić ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Nieprawidłowy ciąg znaków: musi zaczynać się od \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Nieprawidłowy ciąg znaków: musi kończyć się na \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Nieprawidłowy ciąg znaków: musi zawierać \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Nieprawidłowy ciąg znaków: musi odpowiadać wzorcowi ${_issue.pattern}`;\n                return `Nieprawidłow(y/a/e) ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Nieprawidłowa liczba: musi być wielokrotnością ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Nierozpoznane klucze${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Nieprawidłowy klucz w ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Nieprawidłowe dane wejściowe\";\n            case \"invalid_element\":\n                return `Nieprawidłowa wartość w ${issue.origin}`;\n            default:\n                return `Nieprawidłowe dane wejściowe`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caracteres\", verb: \"ter\" },\n        file: { unit: \"bytes\", verb: \"ter\" },\n        array: { unit: \"itens\", verb: \"ter\" },\n        set: { unit: \"itens\", verb: \"ter\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"número\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"nulo\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"padrão\",\n        email: \"endereço de e-mail\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data e hora ISO\",\n        date: \"data ISO\",\n        time: \"hora ISO\",\n        duration: \"duração ISO\",\n        ipv4: \"endereço IPv4\",\n        ipv6: \"endereço IPv6\",\n        cidrv4: \"faixa de IPv4\",\n        cidrv6: \"faixa de IPv6\",\n        base64: \"texto codificado em base64\",\n        base64url: \"URL codificada em base64\",\n        json_string: \"texto JSON\",\n        e164: \"número E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrada\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Tipo inválido: esperado ${issue.expected}, recebido ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrada inválida: esperado ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opção inválida: esperada uma das ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Muito grande: esperado que ${issue.origin ?? \"valor\"} tivesse ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementos\"}`;\n                return `Muito grande: esperado que ${issue.origin ?? \"valor\"} fosse ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Muito pequeno: esperado que ${issue.origin} tivesse ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Muito pequeno: esperado que ${issue.origin} fosse ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Texto inválido: deve começar com \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Texto inválido: deve terminar com \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Texto inválido: deve incluir \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Texto inválido: deve corresponder ao padrão ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} inválido`;\n            }\n            case \"not_multiple_of\":\n                return `Número inválido: deve ser múltiplo de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Chave${issue.keys.length > 1 ? \"s\" : \"\"} desconhecida${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Chave inválida em ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrada inválida\";\n            case \"invalid_element\":\n                return `Valor inválido em ${issue.origin}`;\n            default:\n                return `Campo inválido`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nfunction getRussianPlural(count, one, few, many) {\n    const absCount = Math.abs(count);\n    const lastDigit = absCount % 10;\n    const lastTwoDigits = absCount % 100;\n    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {\n        return many;\n    }\n    if (lastDigit === 1) {\n        return one;\n    }\n    if (lastDigit >= 2 && lastDigit <= 4) {\n        return few;\n    }\n    return many;\n}\nconst error = () => {\n    const Sizable = {\n        string: {\n            unit: {\n                one: \"символ\",\n                few: \"символа\",\n                many: \"символов\",\n            },\n            verb: \"иметь\",\n        },\n        file: {\n            unit: {\n                one: \"байт\",\n                few: \"байта\",\n                many: \"байт\",\n            },\n            verb: \"иметь\",\n        },\n        array: {\n            unit: {\n                one: \"элемент\",\n                few: \"элемента\",\n                many: \"элементов\",\n            },\n            verb: \"иметь\",\n        },\n        set: {\n            unit: {\n                one: \"элемент\",\n                few: \"элемента\",\n                many: \"элементов\",\n            },\n            verb: \"иметь\",\n        },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"число\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"массив\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ввод\",\n        email: \"email адрес\",\n        url: \"URL\",\n        emoji: \"эмодзи\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO дата и время\",\n        date: \"ISO дата\",\n        time: \"ISO время\",\n        duration: \"ISO длительность\",\n        ipv4: \"IPv4 адрес\",\n        ipv6: \"IPv6 адрес\",\n        cidrv4: \"IPv4 диапазон\",\n        cidrv6: \"IPv6 диапазон\",\n        base64: \"строка в формате base64\",\n        base64url: \"строка в формате base64url\",\n        json_string: \"JSON строка\",\n        e164: \"номер E.164\",\n        jwt: \"JWT\",\n        template_literal: \"ввод\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Неверный ввод: ожидалось ${issue.expected}, получено ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Неверный ввод: ожидалось ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Неверный вариант: ожидалось одно из ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const maxValue = Number(issue.maximum);\n                    const unit = getRussianPlural(maxValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `Слишком большое значение: ожидалось, что ${issue.origin ?? \"значение\"} будет иметь ${adj}${issue.maximum.toString()} ${unit}`;\n                }\n                return `Слишком большое значение: ожидалось, что ${issue.origin ?? \"значение\"} будет ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const minValue = Number(issue.minimum);\n                    const unit = getRussianPlural(minValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `Слишком маленькое значение: ожидалось, что ${issue.origin} будет иметь ${adj}${issue.minimum.toString()} ${unit}`;\n                }\n                return `Слишком маленькое значение: ожидалось, что ${issue.origin} будет ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Неверная строка: должна начинаться с \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Неверная строка: должна заканчиваться на \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Неверная строка: должна содержать \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Неверная строка: должна соответствовать шаблону ${_issue.pattern}`;\n                return `Неверный ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Неверное число: должно быть кратным ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Нераспознанн${issue.keys.length > 1 ? \"ые\" : \"ый\"} ключ${issue.keys.length > 1 ? \"и\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Неверный ключ в ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Неверные входные данные\";\n            case \"invalid_element\":\n                return `Неверное значение в ${issue.origin}`;\n            default:\n                return `Неверные входные данные`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"znakov\", verb: \"imeti\" },\n        file: { unit: \"bajtov\", verb: \"imeti\" },\n        array: { unit: \"elementov\", verb: \"imeti\" },\n        set: { unit: \"elementov\", verb: \"imeti\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"število\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tabela\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"vnos\",\n        email: \"e-poštni naslov\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datum in čas\",\n        date: \"ISO datum\",\n        time: \"ISO čas\",\n        duration: \"ISO trajanje\",\n        ipv4: \"IPv4 naslov\",\n        ipv6: \"IPv6 naslov\",\n        cidrv4: \"obseg IPv4\",\n        cidrv6: \"obseg IPv6\",\n        base64: \"base64 kodiran niz\",\n        base64url: \"base64url kodiran niz\",\n        json_string: \"JSON niz\",\n        e164: \"E.164 številka\",\n        jwt: \"JWT\",\n        template_literal: \"vnos\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Neveljaven vnos: pričakovano ${issue.expected}, prejeto ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Neveljaven vnos: pričakovano ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Neveljavna možnost: pričakovano eno izmed ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Preveliko: pričakovano, da bo ${issue.origin ?? \"vrednost\"} imelo ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementov\"}`;\n                return `Preveliko: pričakovano, da bo ${issue.origin ?? \"vrednost\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Premajhno: pričakovano, da bo ${issue.origin} imelo ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Premajhno: pričakovano, da bo ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Neveljaven niz: mora se začeti z \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Neveljaven niz: mora se končati z \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Neveljaven niz: mora vsebovati \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Neveljaven niz: mora ustrezati vzorcu ${_issue.pattern}`;\n                return `Neveljaven ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Neveljavno število: mora biti večkratnik ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Neprepoznan${issue.keys.length > 1 ? \"i ključi\" : \" ključ\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Neveljaven ključ v ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Neveljaven vnos\";\n            case \"invalid_element\":\n                return `Neveljavna vrednost v ${issue.origin}`;\n            default:\n                return \"Neveljaven vnos\";\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tecken\", verb: \"att ha\" },\n        file: { unit: \"bytes\", verb: \"att ha\" },\n        array: { unit: \"objekt\", verb: \"att innehålla\" },\n        set: { unit: \"objekt\", verb: \"att innehålla\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"antal\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"lista\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"reguljärt uttryck\",\n        email: \"e-postadress\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-datum och tid\",\n        date: \"ISO-datum\",\n        time: \"ISO-tid\",\n        duration: \"ISO-varaktighet\",\n        ipv4: \"IPv4-intervall\",\n        ipv6: \"IPv6-intervall\",\n        cidrv4: \"IPv4-spektrum\",\n        cidrv6: \"IPv6-spektrum\",\n        base64: \"base64-kodad sträng\",\n        base64url: \"base64url-kodad sträng\",\n        json_string: \"JSON-sträng\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"mall-literal\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ogiltig inmatning: förväntat ${issue.expected}, fick ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ogiltig inmatning: förväntat ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ogiltigt val: förväntade en av ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `För stor(t): förväntade ${issue.origin ?? \"värdet\"} att ha ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\"}`;\n                }\n                return `För stor(t): förväntat ${issue.origin ?? \"värdet\"} att ha ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `För lite(t): förväntade ${issue.origin ?? \"värdet\"} att ha ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `För lite(t): förväntade ${issue.origin ?? \"värdet\"} att ha ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Ogiltig sträng: måste börja med \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Ogiltig sträng: måste sluta med \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Ogiltig sträng: måste innehålla \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Ogiltig sträng: måste matcha mönstret \"${_issue.pattern}\"`;\n                return `Ogiltig(t) ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ogiltigt tal: måste vara en multipel av ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Okända nycklar\" : \"Okänd nyckel\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ogiltig nyckel i ${issue.origin ?? \"värdet\"}`;\n            case \"invalid_union\":\n                return \"Ogiltig input\";\n            case \"invalid_element\":\n                return `Ogiltigt värde i ${issue.origin ?? \"värdet\"}`;\n            default:\n                return `Ogiltig input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"எழுத்துக்கள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n        file: { unit: \"பைட்டுகள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n        array: { unit: \"உறுப்புகள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n        set: { unit: \"உறுப்புகள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"எண் அல்லாதது\" : \"எண்\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"அணி\";\n                }\n                if (data === null) {\n                    return \"வெறுமை\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"உள்ளீடு\",\n        email: \"மின்னஞ்சல் முகவரி\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO தேதி நேரம்\",\n        date: \"ISO தேதி\",\n        time: \"ISO நேரம்\",\n        duration: \"ISO கால அளவு\",\n        ipv4: \"IPv4 முகவரி\",\n        ipv6: \"IPv6 முகவரி\",\n        cidrv4: \"IPv4 வரம்பு\",\n        cidrv6: \"IPv6 வரம்பு\",\n        base64: \"base64-encoded சரம்\",\n        base64url: \"base64url-encoded சரம்\",\n        json_string: \"JSON சரம்\",\n        e164: \"E.164 எண்\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${issue.expected}, பெறப்பட்டது ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${util.stringifyPrimitive(issue.values[0])}`;\n                return `தவறான விருப்பம்: எதிர்பார்க்கப்பட்டது ${util.joinValues(issue.values, \"|\")} இல் ஒன்று`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `மிக பெரியது: எதிர்பார்க்கப்பட்டது ${issue.origin ?? \"மதிப்பு\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"உறுப்புகள்\"} ஆக இருக்க வேண்டும்`;\n                }\n                return `மிக பெரியது: எதிர்பார்க்கப்பட்டது ${issue.origin ?? \"மதிப்பு\"} ${adj}${issue.maximum.toString()} ஆக இருக்க வேண்டும்`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} ஆக இருக்க வேண்டும்`; //\n                }\n                return `மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${issue.origin} ${adj}${issue.minimum.toString()} ஆக இருக்க வேண்டும்`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `தவறான சரம்: \"${_issue.prefix}\" இல் தொடங்க வேண்டும்`;\n                if (_issue.format === \"ends_with\")\n                    return `தவறான சரம்: \"${_issue.suffix}\" இல் முடிவடைய வேண்டும்`;\n                if (_issue.format === \"includes\")\n                    return `தவறான சரம்: \"${_issue.includes}\" ஐ உள்ளடக்க வேண்டும்`;\n                if (_issue.format === \"regex\")\n                    return `தவறான சரம்: ${_issue.pattern} முறைபாட்டுடன் பொருந்த வேண்டும்`;\n                return `தவறான ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `தவறான எண்: ${issue.divisor} இன் பலமாக இருக்க வேண்டும்`;\n            case \"unrecognized_keys\":\n                return `அடையாளம் தெரியாத விசை${issue.keys.length > 1 ? \"கள்\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} இல் தவறான விசை`;\n            case \"invalid_union\":\n                return \"தவறான உள்ளீடு\";\n            case \"invalid_element\":\n                return `${issue.origin} இல் தவறான மதிப்பு`;\n            default:\n                return `தவறான உள்ளீடு`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"ตัวอักษร\", verb: \"ควรมี\" },\n        file: { unit: \"ไบต์\", verb: \"ควรมี\" },\n        array: { unit: \"รายการ\", verb: \"ควรมี\" },\n        set: { unit: \"รายการ\", verb: \"ควรมี\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"ไม่ใช่ตัวเลข (NaN)\" : \"ตัวเลข\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"อาร์เรย์ (Array)\";\n                }\n                if (data === null) {\n                    return \"ไม่มีค่า (null)\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ข้อมูลที่ป้อน\",\n        email: \"ที่อยู่อีเมล\",\n        url: \"URL\",\n        emoji: \"อิโมจิ\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"วันที่เวลาแบบ ISO\",\n        date: \"วันที่แบบ ISO\",\n        time: \"เวลาแบบ ISO\",\n        duration: \"ช่วงเวลาแบบ ISO\",\n        ipv4: \"ที่อยู่ IPv4\",\n        ipv6: \"ที่อยู่ IPv6\",\n        cidrv4: \"ช่วง IP แบบ IPv4\",\n        cidrv6: \"ช่วง IP แบบ IPv6\",\n        base64: \"ข้อความแบบ Base64\",\n        base64url: \"ข้อความแบบ Base64 สำหรับ URL\",\n        json_string: \"ข้อความแบบ JSON\",\n        e164: \"เบอร์โทรศัพท์ระหว่างประเทศ (E.164)\",\n        jwt: \"โทเคน JWT\",\n        template_literal: \"ข้อมูลที่ป้อน\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ประเภทข้อมูลไม่ถูกต้อง: ควรเป็น ${issue.expected} แต่ได้รับ ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `ค่าไม่ถูกต้อง: ควรเป็น ${util.stringifyPrimitive(issue.values[0])}`;\n                return `ตัวเลือกไม่ถูกต้อง: ควรเป็นหนึ่งใน ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"ไม่เกิน\" : \"น้อยกว่า\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `เกินกำหนด: ${issue.origin ?? \"ค่า\"} ควรมี${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"รายการ\"}`;\n                return `เกินกำหนด: ${issue.origin ?? \"ค่า\"} ควรมี${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"อย่างน้อย\" : \"มากกว่า\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `น้อยกว่ากำหนด: ${issue.origin} ควรมี${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `น้อยกว่ากำหนด: ${issue.origin} ควรมี${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `รูปแบบไม่ถูกต้อง: ข้อความต้องขึ้นต้นด้วย \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `รูปแบบไม่ถูกต้อง: ข้อความต้องลงท้ายด้วย \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `รูปแบบไม่ถูกต้อง: ข้อความต้องมี \"${_issue.includes}\" อยู่ในข้อความ`;\n                if (_issue.format === \"regex\")\n                    return `รูปแบบไม่ถูกต้อง: ต้องตรงกับรูปแบบที่กำหนด ${_issue.pattern}`;\n                return `รูปแบบไม่ถูกต้อง: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `ตัวเลขไม่ถูกต้อง: ต้องเป็นจำนวนที่หารด้วย ${issue.divisor} ได้ลงตัว`;\n            case \"unrecognized_keys\":\n                return `พบคีย์ที่ไม่รู้จัก: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `คีย์ไม่ถูกต้องใน ${issue.origin}`;\n            case \"invalid_union\":\n                return \"ข้อมูลไม่ถูกต้อง: ไม่ตรงกับรูปแบบยูเนียนที่กำหนดไว้\";\n            case \"invalid_element\":\n                return `ข้อมูลไม่ถูกต้องใน ${issue.origin}`;\n            default:\n                return `ข้อมูลไม่ถูกต้อง`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"number\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"olmalı\" },\n        file: { unit: \"bayt\", verb: \"olmalı\" },\n        array: { unit: \"öğe\", verb: \"olmalı\" },\n        set: { unit: \"öğe\", verb: \"olmalı\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"girdi\",\n        email: \"e-posta adresi\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO tarih ve saat\",\n        date: \"ISO tarih\",\n        time: \"ISO saat\",\n        duration: \"ISO süre\",\n        ipv4: \"IPv4 adresi\",\n        ipv6: \"IPv6 adresi\",\n        cidrv4: \"IPv4 aralığı\",\n        cidrv6: \"IPv6 aralığı\",\n        base64: \"base64 ile şifrelenmiş metin\",\n        base64url: \"base64url ile şifrelenmiş metin\",\n        json_string: \"JSON dizesi\",\n        e164: \"E.164 sayısı\",\n        jwt: \"JWT\",\n        template_literal: \"Şablon dizesi\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Geçersiz değer: beklenen ${issue.expected}, alınan ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Geçersiz değer: beklenen ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Geçersiz seçenek: aşağıdakilerden biri olmalı: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çok büyük: beklenen ${issue.origin ?? \"değer\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"öğe\"}`;\n                return `Çok büyük: beklenen ${issue.origin ?? \"değer\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çok küçük: beklenen ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                return `Çok küçük: beklenen ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Geçersiz metin: \"${_issue.prefix}\" ile başlamalı`;\n                if (_issue.format === \"ends_with\")\n                    return `Geçersiz metin: \"${_issue.suffix}\" ile bitmeli`;\n                if (_issue.format === \"includes\")\n                    return `Geçersiz metin: \"${_issue.includes}\" içermeli`;\n                if (_issue.format === \"regex\")\n                    return `Geçersiz metin: ${_issue.pattern} desenine uymalı`;\n                return `Geçersiz ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Geçersiz sayı: ${issue.divisor} ile tam bölünebilmeli`;\n            case \"unrecognized_keys\":\n                return `Tanınmayan anahtar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} içinde geçersiz anahtar`;\n            case \"invalid_union\":\n                return \"Geçersiz değer\";\n            case \"invalid_element\":\n                return `${issue.origin} içinde geçersiz değer`;\n            default:\n                return `Geçersiz değer`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"символів\", verb: \"матиме\" },\n        file: { unit: \"байтів\", verb: \"матиме\" },\n        array: { unit: \"елементів\", verb: \"матиме\" },\n        set: { unit: \"елементів\", verb: \"матиме\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"число\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"масив\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"вхідні дані\",\n        email: \"адреса електронної пошти\",\n        url: \"URL\",\n        emoji: \"емодзі\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"дата та час ISO\",\n        date: \"дата ISO\",\n        time: \"час ISO\",\n        duration: \"тривалість ISO\",\n        ipv4: \"адреса IPv4\",\n        ipv6: \"адреса IPv6\",\n        cidrv4: \"діапазон IPv4\",\n        cidrv6: \"діапазон IPv6\",\n        base64: \"рядок у кодуванні base64\",\n        base64url: \"рядок у кодуванні base64url\",\n        json_string: \"рядок JSON\",\n        e164: \"номер E.164\",\n        jwt: \"JWT\",\n        template_literal: \"вхідні дані\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Неправильні вхідні дані: очікується ${issue.expected}, отримано ${parsedType(issue.input)}`;\n            // return `Неправильні вхідні дані: очікується ${issue.expected}, отримано ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Неправильні вхідні дані: очікується ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Неправильна опція: очікується одне з ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Занадто велике: очікується, що ${issue.origin ?? \"значення\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"елементів\"}`;\n                return `Занадто велике: очікується, що ${issue.origin ?? \"значення\"} буде ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Занадто мале: очікується, що ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Занадто мале: очікується, що ${issue.origin} буде ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Неправильний рядок: повинен починатися з \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Неправильний рядок: повинен закінчуватися на \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Неправильний рядок: повинен містити \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Неправильний рядок: повинен відповідати шаблону ${_issue.pattern}`;\n                return `Неправильний ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Неправильне число: повинно бути кратним ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Нерозпізнаний ключ${issue.keys.length > 1 ? \"і\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Неправильний ключ у ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Неправильні вхідні дані\";\n            case \"invalid_element\":\n                return `Неправильне значення у ${issue.origin}`;\n            default:\n                return `Неправильні вхідні дані`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"حروف\", verb: \"ہونا\" },\n        file: { unit: \"بائٹس\", verb: \"ہونا\" },\n        array: { unit: \"آئٹمز\", verb: \"ہونا\" },\n        set: { unit: \"آئٹمز\", verb: \"ہونا\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"نمبر\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"آرے\";\n                }\n                if (data === null) {\n                    return \"نل\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ان پٹ\",\n        email: \"ای میل ایڈریس\",\n        url: \"یو آر ایل\",\n        emoji: \"ایموجی\",\n        uuid: \"یو یو آئی ڈی\",\n        uuidv4: \"یو یو آئی ڈی وی 4\",\n        uuidv6: \"یو یو آئی ڈی وی 6\",\n        nanoid: \"نینو آئی ڈی\",\n        guid: \"جی یو آئی ڈی\",\n        cuid: \"سی یو آئی ڈی\",\n        cuid2: \"سی یو آئی ڈی 2\",\n        ulid: \"یو ایل آئی ڈی\",\n        xid: \"ایکس آئی ڈی\",\n        ksuid: \"کے ایس یو آئی ڈی\",\n        datetime: \"آئی ایس او ڈیٹ ٹائم\",\n        date: \"آئی ایس او تاریخ\",\n        time: \"آئی ایس او وقت\",\n        duration: \"آئی ایس او مدت\",\n        ipv4: \"آئی پی وی 4 ایڈریس\",\n        ipv6: \"آئی پی وی 6 ایڈریس\",\n        cidrv4: \"آئی پی وی 4 رینج\",\n        cidrv6: \"آئی پی وی 6 رینج\",\n        base64: \"بیس 64 ان کوڈڈ سٹرنگ\",\n        base64url: \"بیس 64 یو آر ایل ان کوڈڈ سٹرنگ\",\n        json_string: \"جے ایس او این سٹرنگ\",\n        e164: \"ای 164 نمبر\",\n        jwt: \"جے ڈبلیو ٹی\",\n        template_literal: \"ان پٹ\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `غلط ان پٹ: ${issue.expected} متوقع تھا، ${parsedType(issue.input)} موصول ہوا`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `غلط ان پٹ: ${util.stringifyPrimitive(issue.values[0])} متوقع تھا`;\n                return `غلط آپشن: ${util.joinValues(issue.values, \"|\")} میں سے ایک متوقع تھا`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `بہت بڑا: ${issue.origin ?? \"ویلیو\"} کے ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"عناصر\"} ہونے متوقع تھے`;\n                return `بہت بڑا: ${issue.origin ?? \"ویلیو\"} کا ${adj}${issue.maximum.toString()} ہونا متوقع تھا`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `بہت چھوٹا: ${issue.origin} کے ${adj}${issue.minimum.toString()} ${sizing.unit} ہونے متوقع تھے`;\n                }\n                return `بہت چھوٹا: ${issue.origin} کا ${adj}${issue.minimum.toString()} ہونا متوقع تھا`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `غلط سٹرنگ: \"${_issue.prefix}\" سے شروع ہونا چاہیے`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `غلط سٹرنگ: \"${_issue.suffix}\" پر ختم ہونا چاہیے`;\n                if (_issue.format === \"includes\")\n                    return `غلط سٹرنگ: \"${_issue.includes}\" شامل ہونا چاہیے`;\n                if (_issue.format === \"regex\")\n                    return `غلط سٹرنگ: پیٹرن ${_issue.pattern} سے میچ ہونا چاہیے`;\n                return `غلط ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `غلط نمبر: ${issue.divisor} کا مضاعف ہونا چاہیے`;\n            case \"unrecognized_keys\":\n                return `غیر تسلیم شدہ کی${issue.keys.length > 1 ? \"ز\" : \"\"}: ${util.joinValues(issue.keys, \"، \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} میں غلط کی`;\n            case \"invalid_union\":\n                return \"غلط ان پٹ\";\n            case \"invalid_element\":\n                return `${issue.origin} میں غلط ویلیو`;\n            default:\n                return `غلط ان پٹ`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"ký tự\", verb: \"có\" },\n        file: { unit: \"byte\", verb: \"có\" },\n        array: { unit: \"phần tử\", verb: \"có\" },\n        set: { unit: \"phần tử\", verb: \"có\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"số\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"mảng\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"đầu vào\",\n        email: \"địa chỉ email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ngày giờ ISO\",\n        date: \"ngày ISO\",\n        time: \"giờ ISO\",\n        duration: \"khoảng thời gian ISO\",\n        ipv4: \"địa chỉ IPv4\",\n        ipv6: \"địa chỉ IPv6\",\n        cidrv4: \"dải IPv4\",\n        cidrv6: \"dải IPv6\",\n        base64: \"chuỗi mã hóa base64\",\n        base64url: \"chuỗi mã hóa base64url\",\n        json_string: \"chuỗi JSON\",\n        e164: \"số E.164\",\n        jwt: \"JWT\",\n        template_literal: \"đầu vào\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Đầu vào không hợp lệ: mong đợi ${issue.expected}, nhận được ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Đầu vào không hợp lệ: mong đợi ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Tùy chọn không hợp lệ: mong đợi một trong các giá trị ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Quá lớn: mong đợi ${issue.origin ?? \"giá trị\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"phần tử\"}`;\n                return `Quá lớn: mong đợi ${issue.origin ?? \"giá trị\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Quá nhỏ: mong đợi ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Quá nhỏ: mong đợi ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Chuỗi không hợp lệ: phải bắt đầu bằng \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Chuỗi không hợp lệ: phải kết thúc bằng \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Chuỗi không hợp lệ: phải bao gồm \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Chuỗi không hợp lệ: phải khớp với mẫu ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} không hợp lệ`;\n            }\n            case \"not_multiple_of\":\n                return `Số không hợp lệ: phải là bội số của ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Khóa không được nhận dạng: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Khóa không hợp lệ trong ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Đầu vào không hợp lệ\";\n            case \"invalid_element\":\n                return `Giá trị không hợp lệ trong ${issue.origin}`;\n            default:\n                return `Đầu vào không hợp lệ`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"字符\", verb: \"包含\" },\n        file: { unit: \"字节\", verb: \"包含\" },\n        array: { unit: \"项\", verb: \"包含\" },\n        set: { unit: \"项\", verb: \"包含\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"非数字(NaN)\" : \"数字\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"数组\";\n                }\n                if (data === null) {\n                    return \"空值(null)\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"输入\",\n        email: \"电子邮件\",\n        url: \"URL\",\n        emoji: \"表情符号\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO日期时间\",\n        date: \"ISO日期\",\n        time: \"ISO时间\",\n        duration: \"ISO时长\",\n        ipv4: \"IPv4地址\",\n        ipv6: \"IPv6地址\",\n        cidrv4: \"IPv4网段\",\n        cidrv6: \"IPv6网段\",\n        base64: \"base64编码字符串\",\n        base64url: \"base64url编码字符串\",\n        json_string: \"JSON字符串\",\n        e164: \"E.164号码\",\n        jwt: \"JWT\",\n        template_literal: \"输入\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `无效输入：期望 ${issue.expected}，实际接收 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `无效输入：期望 ${util.stringifyPrimitive(issue.values[0])}`;\n                return `无效选项：期望以下之一 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `数值过大：期望 ${issue.origin ?? \"值\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"个元素\"}`;\n                return `数值过大：期望 ${issue.origin ?? \"值\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `数值过小：期望 ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `数值过小：期望 ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `无效字符串：必须以 \"${_issue.prefix}\" 开头`;\n                if (_issue.format === \"ends_with\")\n                    return `无效字符串：必须以 \"${_issue.suffix}\" 结尾`;\n                if (_issue.format === \"includes\")\n                    return `无效字符串：必须包含 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `无效字符串：必须满足正则表达式 ${_issue.pattern}`;\n                return `无效${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `无效数字：必须是 ${issue.divisor} 的倍数`;\n            case \"unrecognized_keys\":\n                return `出现未知的键(key): ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} 中的键(key)无效`;\n            case \"invalid_union\":\n                return \"无效输入\";\n            case \"invalid_element\":\n                return `${issue.origin} 中包含无效值(value)`;\n            default:\n                return `无效输入`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"字元\", verb: \"擁有\" },\n        file: { unit: \"位元組\", verb: \"擁有\" },\n        array: { unit: \"項目\", verb: \"擁有\" },\n        set: { unit: \"項目\", verb: \"擁有\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"輸入\",\n        email: \"郵件地址\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO 日期時間\",\n        date: \"ISO 日期\",\n        time: \"ISO 時間\",\n        duration: \"ISO 期間\",\n        ipv4: \"IPv4 位址\",\n        ipv6: \"IPv6 位址\",\n        cidrv4: \"IPv4 範圍\",\n        cidrv6: \"IPv6 範圍\",\n        base64: \"base64 編碼字串\",\n        base64url: \"base64url 編碼字串\",\n        json_string: \"JSON 字串\",\n        e164: \"E.164 數值\",\n        jwt: \"JWT\",\n        template_literal: \"輸入\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `無效的輸入值：預期為 ${issue.expected}，但收到 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `無效的輸入值：預期為 ${util.stringifyPrimitive(issue.values[0])}`;\n                return `無效的選項：預期為以下其中之一 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `數值過大：預期 ${issue.origin ?? \"值\"} 應為 ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"個元素\"}`;\n                return `數值過大：預期 ${issue.origin ?? \"值\"} 應為 ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `數值過小：預期 ${issue.origin} 應為 ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `數值過小：預期 ${issue.origin} 應為 ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `無效的字串：必須以 \"${_issue.prefix}\" 開頭`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `無效的字串：必須以 \"${_issue.suffix}\" 結尾`;\n                if (_issue.format === \"includes\")\n                    return `無效的字串：必須包含 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `無效的字串：必須符合格式 ${_issue.pattern}`;\n                return `無效的 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `無效的數字：必須為 ${issue.divisor} 的倍數`;\n            case \"unrecognized_keys\":\n                return `無法識別的鍵值${issue.keys.length > 1 ? \"們\" : \"\"}：${util.joinValues(issue.keys, \"、\")}`;\n            case \"invalid_key\":\n                return `${issue.origin} 中有無效的鍵值`;\n            case \"invalid_union\":\n                return \"無效的輸入值\";\n            case \"invalid_element\":\n                return `${issue.origin} 中有無效的值`;\n            default:\n                return `無效的輸入值`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n",
    "export const $output = Symbol(\"ZodOutput\");\nexport const $input = Symbol(\"ZodInput\");\nexport class $ZodRegistry {\n    constructor() {\n        this._map = new Map();\n        this._idmap = new Map();\n    }\n    add(schema, ..._meta) {\n        const meta = _meta[0];\n        this._map.set(schema, meta);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            if (this._idmap.has(meta.id)) {\n                throw new Error(`ID ${meta.id} already exists in the registry`);\n            }\n            this._idmap.set(meta.id, schema);\n        }\n        return this;\n    }\n    clear() {\n        this._map = new Map();\n        this._idmap = new Map();\n        return this;\n    }\n    remove(schema) {\n        const meta = this._map.get(schema);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            this._idmap.delete(meta.id);\n        }\n        this._map.delete(schema);\n        return this;\n    }\n    get(schema) {\n        // return this._map.get(schema) as any;\n        // inherit metadata\n        const p = schema._zod.parent;\n        if (p) {\n            const pm = { ...(this.get(p) ?? {}) };\n            delete pm.id; // do not inherit id\n            return { ...pm, ...this._map.get(schema) };\n        }\n        return this._map.get(schema);\n    }\n    has(schema) {\n        return this._map.has(schema);\n    }\n}\n// registries\nexport function registry() {\n    return new $ZodRegistry();\n}\nexport const globalRegistry = /*@__PURE__*/ registry();\n",
    "import * as checks from \"./checks.js\";\nimport * as schemas from \"./schemas.js\";\nimport * as util from \"./util.js\";\nexport function _string(Class, params) {\n    return new Class({\n        type: \"string\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedString(Class, params) {\n    return new Class({\n        type: \"string\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _email(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"email\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _guid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"guid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v4\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v6\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv7(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v7\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _emoji(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"emoji\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nanoid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"nanoid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid2(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid2\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ulid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ulid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _xid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"xid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ksuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ksuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _e164(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"e164\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _jwt(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"jwt\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport const TimePrecision = {\n    Any: null,\n    Minute: -1,\n    Second: 0,\n    Millisecond: 3,\n    Microsecond: 6,\n};\nexport function _isoDateTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"datetime\",\n        check: \"string_format\",\n        offset: false,\n        local: false,\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDate(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"date\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"time\",\n        check: \"string_format\",\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDuration(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"duration\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _number(Class, params) {\n    return new Class({\n        type: \"number\",\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedNumber(Class, params) {\n    return new Class({\n        type: \"number\",\n        coerce: true,\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"safeint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float64(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"int32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"uint32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _boolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBoolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _bigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"int64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"uint64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _symbol(Class, params) {\n    return new Class({\n        type: \"symbol\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _undefined(Class, params) {\n    return new Class({\n        type: \"undefined\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _null(Class, params) {\n    return new Class({\n        type: \"null\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _any(Class) {\n    return new Class({\n        type: \"any\",\n    });\n}\nexport function _unknown(Class) {\n    return new Class({\n        type: \"unknown\",\n    });\n}\nexport function _never(Class, params) {\n    return new Class({\n        type: \"never\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _void(Class, params) {\n    return new Class({\n        type: \"void\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _date(Class, params) {\n    return new Class({\n        type: \"date\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedDate(Class, params) {\n    return new Class({\n        type: \"date\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nan(Class, params) {\n    return new Class({\n        type: \"nan\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lt(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _lte(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.lte()` instead. */\n_lte as _max, };\nexport function _gt(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _gte(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.gte()` instead. */\n_gte as _min, };\nexport function _positive(params) {\n    return _gt(0, params);\n}\n// negative\nexport function _negative(params) {\n    return _lt(0, params);\n}\n// nonpositive\nexport function _nonpositive(params) {\n    return _lte(0, params);\n}\n// nonnegative\nexport function _nonnegative(params) {\n    return _gte(0, params);\n}\nexport function _multipleOf(value, params) {\n    return new checks.$ZodCheckMultipleOf({\n        check: \"multiple_of\",\n        ...util.normalizeParams(params),\n        value,\n    });\n}\nexport function _maxSize(maximum, params) {\n    return new checks.$ZodCheckMaxSize({\n        check: \"max_size\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n}\nexport function _minSize(minimum, params) {\n    return new checks.$ZodCheckMinSize({\n        check: \"min_size\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _size(size, params) {\n    return new checks.$ZodCheckSizeEquals({\n        check: \"size_equals\",\n        ...util.normalizeParams(params),\n        size,\n    });\n}\nexport function _maxLength(maximum, params) {\n    const ch = new checks.$ZodCheckMaxLength({\n        check: \"max_length\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n    return ch;\n}\nexport function _minLength(minimum, params) {\n    return new checks.$ZodCheckMinLength({\n        check: \"min_length\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _length(length, params) {\n    return new checks.$ZodCheckLengthEquals({\n        check: \"length_equals\",\n        ...util.normalizeParams(params),\n        length,\n    });\n}\nexport function _regex(pattern, params) {\n    return new checks.$ZodCheckRegex({\n        check: \"string_format\",\n        format: \"regex\",\n        ...util.normalizeParams(params),\n        pattern,\n    });\n}\nexport function _lowercase(params) {\n    return new checks.$ZodCheckLowerCase({\n        check: \"string_format\",\n        format: \"lowercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uppercase(params) {\n    return new checks.$ZodCheckUpperCase({\n        check: \"string_format\",\n        format: \"uppercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _includes(includes, params) {\n    return new checks.$ZodCheckIncludes({\n        check: \"string_format\",\n        format: \"includes\",\n        ...util.normalizeParams(params),\n        includes,\n    });\n}\nexport function _startsWith(prefix, params) {\n    return new checks.$ZodCheckStartsWith({\n        check: \"string_format\",\n        format: \"starts_with\",\n        ...util.normalizeParams(params),\n        prefix,\n    });\n}\nexport function _endsWith(suffix, params) {\n    return new checks.$ZodCheckEndsWith({\n        check: \"string_format\",\n        format: \"ends_with\",\n        ...util.normalizeParams(params),\n        suffix,\n    });\n}\nexport function _property(property, schema, params) {\n    return new checks.$ZodCheckProperty({\n        check: \"property\",\n        property,\n        schema,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _mime(types, params) {\n    return new checks.$ZodCheckMimeType({\n        check: \"mime_type\",\n        mime: types,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _overwrite(tx) {\n    return new checks.$ZodCheckOverwrite({\n        check: \"overwrite\",\n        tx,\n    });\n}\n// normalize\nexport function _normalize(form) {\n    return _overwrite((input) => input.normalize(form));\n}\n// trim\nexport function _trim() {\n    return _overwrite((input) => input.trim());\n}\n// toLowerCase\nexport function _toLowerCase() {\n    return _overwrite((input) => input.toLowerCase());\n}\n// toUpperCase\nexport function _toUpperCase() {\n    return _overwrite((input) => input.toUpperCase());\n}\nexport function _array(Class, element, params) {\n    return new Class({\n        type: \"array\",\n        element,\n        // get element() {\n        //   return element;\n        // },\n        ...util.normalizeParams(params),\n    });\n}\nexport function _union(Class, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _discriminatedUnion(Class, discriminator, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _intersection(Class, left, right) {\n    return new Class({\n        type: \"intersection\",\n        left,\n        right,\n    });\n}\n// export function _tuple(\n//   Class: util.SchemaClass<schemas.$ZodTuple>,\n//   items: [],\n//   params?: string | $ZodTupleParams\n// ): schemas.$ZodTuple<[], null>;\nexport function _tuple(Class, items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof schemas.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new Class({\n        type: \"tuple\",\n        items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _record(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"record\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _map(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"map\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _set(Class, valueType, params) {\n    return new Class({\n        type: \"set\",\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _enum(Class, values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    // if (Array.isArray(values)) {\n    //   for (const value of values) {\n    //     entries[value] = value;\n    //   }\n    // } else {\n    //   Object.assign(entries, values);\n    // }\n    // const entries: util.EnumLike = {};\n    // for (const val of values) {\n    //   entries[val] = val;\n    // }\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function _nativeEnum(Class, entries, params) {\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _literal(Class, value, params) {\n    return new Class({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _file(Class, params) {\n    return new Class({\n        type: \"file\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _transform(Class, fn) {\n    return new Class({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport function _optional(Class, innerType) {\n    return new Class({\n        type: \"optional\",\n        innerType,\n    });\n}\nexport function _nullable(Class, innerType) {\n    return new Class({\n        type: \"nullable\",\n        innerType,\n    });\n}\nexport function _default(Class, innerType, defaultValue) {\n    return new Class({\n        type: \"default\",\n        innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        },\n    });\n}\nexport function _nonoptional(Class, innerType, params) {\n    return new Class({\n        type: \"nonoptional\",\n        innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _success(Class, innerType) {\n    return new Class({\n        type: \"success\",\n        innerType,\n    });\n}\nexport function _catch(Class, innerType, catchValue) {\n    return new Class({\n        type: \"catch\",\n        innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport function _pipe(Class, in_, out) {\n    return new Class({\n        type: \"pipe\",\n        in: in_,\n        out,\n    });\n}\nexport function _readonly(Class, innerType) {\n    return new Class({\n        type: \"readonly\",\n        innerType,\n    });\n}\nexport function _templateLiteral(Class, parts, params) {\n    return new Class({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lazy(Class, getter) {\n    return new Class({\n        type: \"lazy\",\n        getter,\n    });\n}\nexport function _promise(Class, innerType) {\n    return new Class({\n        type: \"promise\",\n        innerType,\n    });\n}\nexport function _custom(Class, fn, _params) {\n    const norm = util.normalizeParams(_params);\n    norm.abort ?? (norm.abort = true); // default to abort:false\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...norm,\n    });\n    return schema;\n}\n// export function _refine<T>(\n//   Class: util.SchemaClass<schemas.$ZodCustom>,\n//   fn: (arg: NoInfer<T>) => util.MaybeAsync<unknown>,\n//   _params: string | $ZodCustomParams = {}\n// ): checks.$ZodCheck<T> {\n//   return _custom(Class, fn, _params);\n// }\n// same as _custom but defaults to abort:false\nexport function _refine(Class, fn, _params) {\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...util.normalizeParams(_params),\n    });\n    return schema;\n}\nexport function _stringbool(Classes, _params) {\n    const params = util.normalizeParams(_params);\n    let truthyArray = params.truthy ?? [\"true\", \"1\", \"yes\", \"on\", \"y\", \"enabled\"];\n    let falsyArray = params.falsy ?? [\"false\", \"0\", \"no\", \"off\", \"n\", \"disabled\"];\n    if (params.case !== \"sensitive\") {\n        truthyArray = truthyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n        falsyArray = falsyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n    }\n    const truthySet = new Set(truthyArray);\n    const falsySet = new Set(falsyArray);\n    const _Pipe = Classes.Pipe ?? schemas.$ZodPipe;\n    const _Boolean = Classes.Boolean ?? schemas.$ZodBoolean;\n    const _String = Classes.String ?? schemas.$ZodString;\n    const _Transform = Classes.Transform ?? schemas.$ZodTransform;\n    const tx = new _Transform({\n        type: \"transform\",\n        transform: (input, payload) => {\n            let data = input;\n            if (params.case !== \"sensitive\")\n                data = data.toLowerCase();\n            if (truthySet.has(data)) {\n                return true;\n            }\n            else if (falsySet.has(data)) {\n                return false;\n            }\n            else {\n                payload.issues.push({\n                    code: \"invalid_value\",\n                    expected: \"stringbool\",\n                    values: [...truthySet, ...falsySet],\n                    input: payload.value,\n                    inst: tx,\n                });\n                return {};\n            }\n        },\n        error: params.error,\n    });\n    // params.error;\n    const innerPipe = new _Pipe({\n        type: \"pipe\",\n        in: new _String({ type: \"string\", error: params.error }),\n        out: tx,\n        error: params.error,\n    });\n    const outerPipe = new _Pipe({\n        type: \"pipe\",\n        in: innerPipe,\n        out: new _Boolean({\n            type: \"boolean\",\n            error: params.error,\n        }),\n        error: params.error,\n    });\n    return outerPipe;\n}\nexport function _stringFormat(Class, format, fnOrRegex, _params = {}) {\n    const params = util.normalizeParams(_params);\n    const def = {\n        ...util.normalizeParams(_params),\n        check: \"string_format\",\n        type: \"string\",\n        format,\n        fn: typeof fnOrRegex === \"function\" ? fnOrRegex : (val) => fnOrRegex.test(val),\n        ...params,\n    };\n    if (fnOrRegex instanceof RegExp) {\n        def.pattern = fnOrRegex;\n    }\n    const inst = new Class(def);\n    return inst;\n}\n",
    "import { _array, _tuple, _unknown } from \"./api.js\";\nimport { parse, parseAsync } from \"./parse.js\";\nimport * as schemas from \"./schemas.js\";\nimport { $ZodTuple } from \"./schemas.js\";\nexport class $ZodFunction {\n    constructor(def) {\n        this._def = def;\n        this.def = def;\n    }\n    implement(func) {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implement() must be called with a function\");\n        }\n        const impl = ((...args) => {\n            const parsedArgs = this._def.input ? parse(this._def.input, args, undefined, { callee: impl }) : args;\n            if (!Array.isArray(parsedArgs)) {\n                throw new Error(\"Invalid arguments schema: not an array or tuple schema.\");\n            }\n            const output = func(...parsedArgs);\n            return this._def.output ? parse(this._def.output, output, undefined, { callee: impl }) : output;\n        });\n        return impl;\n    }\n    implementAsync(func) {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implement() must be called with a function\");\n        }\n        const impl = (async (...args) => {\n            const parsedArgs = this._def.input ? await parseAsync(this._def.input, args, undefined, { callee: impl }) : args;\n            if (!Array.isArray(parsedArgs)) {\n                throw new Error(\"Invalid arguments schema: not an array or tuple schema.\");\n            }\n            const output = await func(...parsedArgs);\n            return this._def.output ? parseAsync(this._def.output, output, undefined, { callee: impl }) : output;\n        });\n        return impl;\n    }\n    input(...args) {\n        const F = this.constructor;\n        if (Array.isArray(args[0])) {\n            return new F({\n                type: \"function\",\n                input: new $ZodTuple({\n                    type: \"tuple\",\n                    items: args[0],\n                    rest: args[1],\n                }),\n                output: this._def.output,\n            });\n        }\n        return new F({\n            type: \"function\",\n            input: args[0],\n            output: this._def.output,\n        });\n    }\n    output(output) {\n        const F = this.constructor;\n        return new F({\n            type: \"function\",\n            input: this._def.input,\n            output,\n        });\n    }\n}\nfunction _function(params) {\n    return new $ZodFunction({\n        type: \"function\",\n        input: Array.isArray(params?.input)\n            ? _tuple(schemas.$ZodTuple, params?.input)\n            : (params?.input ?? _array(schemas.$ZodArray, _unknown(schemas.$ZodUnknown))),\n        output: params?.output ?? _unknown(schemas.$ZodUnknown),\n    });\n}\nexport { _function as function };\n",
    "import { $ZodRegistry, globalRegistry } from \"./registries.js\";\nimport { getEnumValues } from \"./util.js\";\nexport class JSONSchemaGenerator {\n    constructor(params) {\n        this.counter = 0;\n        this.metadataRegistry = params?.metadata ?? globalRegistry;\n        this.target = params?.target ?? \"draft-2020-12\";\n        this.unrepresentable = params?.unrepresentable ?? \"throw\";\n        this.override = params?.override ?? (() => { });\n        this.io = params?.io ?? \"output\";\n        this.seen = new Map();\n    }\n    process(schema, _params = { path: [], schemaPath: [] }) {\n        var _a;\n        const def = schema._zod.def;\n        const formatMap = {\n            guid: \"uuid\",\n            url: \"uri\",\n            datetime: \"date-time\",\n            json_string: \"json-string\",\n            regex: \"\", // do not set\n        };\n        // check for schema in seens\n        const seen = this.seen.get(schema);\n        if (seen) {\n            seen.count++;\n            // check if cycle\n            const isCycle = _params.schemaPath.includes(schema);\n            if (isCycle) {\n                seen.cycle = _params.path;\n            }\n            return seen.schema;\n        }\n        // initialize\n        const result = { schema: {}, count: 1, cycle: undefined, path: _params.path };\n        this.seen.set(schema, result);\n        // custom method overrides default behavior\n        const overrideSchema = schema._zod.toJSONSchema?.();\n        if (overrideSchema) {\n            result.schema = overrideSchema;\n        }\n        else {\n            const params = {\n                ..._params,\n                schemaPath: [..._params.schemaPath, schema],\n                path: _params.path,\n            };\n            const parent = schema._zod.parent;\n            if (parent) {\n                // schema was cloned from another schema\n                result.ref = parent;\n                this.process(parent, params);\n                this.seen.get(parent).isParent = true;\n            }\n            else {\n                const _json = result.schema;\n                switch (def.type) {\n                    case \"string\": {\n                        const json = _json;\n                        json.type = \"string\";\n                        const { minimum, maximum, format, patterns, contentEncoding } = schema._zod\n                            .bag;\n                        if (typeof minimum === \"number\")\n                            json.minLength = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxLength = maximum;\n                        // custom pattern overrides format\n                        if (format) {\n                            json.format = formatMap[format] ?? format;\n                            if (json.format === \"\")\n                                delete json.format; // empty format is not valid\n                        }\n                        if (contentEncoding)\n                            json.contentEncoding = contentEncoding;\n                        if (patterns && patterns.size > 0) {\n                            const regexes = [...patterns];\n                            if (regexes.length === 1)\n                                json.pattern = regexes[0].source;\n                            else if (regexes.length > 1) {\n                                result.schema.allOf = [\n                                    ...regexes.map((regex) => ({\n                                        ...(this.target === \"draft-7\" ? { type: \"string\" } : {}),\n                                        pattern: regex.source,\n                                    })),\n                                ];\n                            }\n                        }\n                        break;\n                    }\n                    case \"number\": {\n                        const json = _json;\n                        const { minimum, maximum, format, multipleOf, exclusiveMaximum, exclusiveMinimum } = schema._zod.bag;\n                        if (typeof format === \"string\" && format.includes(\"int\"))\n                            json.type = \"integer\";\n                        else\n                            json.type = \"number\";\n                        if (typeof exclusiveMinimum === \"number\")\n                            json.exclusiveMinimum = exclusiveMinimum;\n                        if (typeof minimum === \"number\") {\n                            json.minimum = minimum;\n                            if (typeof exclusiveMinimum === \"number\") {\n                                if (exclusiveMinimum >= minimum)\n                                    delete json.minimum;\n                                else\n                                    delete json.exclusiveMinimum;\n                            }\n                        }\n                        if (typeof exclusiveMaximum === \"number\")\n                            json.exclusiveMaximum = exclusiveMaximum;\n                        if (typeof maximum === \"number\") {\n                            json.maximum = maximum;\n                            if (typeof exclusiveMaximum === \"number\") {\n                                if (exclusiveMaximum <= maximum)\n                                    delete json.maximum;\n                                else\n                                    delete json.exclusiveMaximum;\n                            }\n                        }\n                        if (typeof multipleOf === \"number\")\n                            json.multipleOf = multipleOf;\n                        break;\n                    }\n                    case \"boolean\": {\n                        const json = _json;\n                        json.type = \"boolean\";\n                        break;\n                    }\n                    case \"bigint\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"BigInt cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"symbol\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Symbols cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"null\": {\n                        _json.type = \"null\";\n                        break;\n                    }\n                    case \"any\": {\n                        break;\n                    }\n                    case \"unknown\": {\n                        break;\n                    }\n                    case \"undefined\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Undefined cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"void\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Void cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"never\": {\n                        _json.not = {};\n                        break;\n                    }\n                    case \"date\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Date cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"array\": {\n                        const json = _json;\n                        const { minimum, maximum } = schema._zod.bag;\n                        if (typeof minimum === \"number\")\n                            json.minItems = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxItems = maximum;\n                        json.type = \"array\";\n                        json.items = this.process(def.element, { ...params, path: [...params.path, \"items\"] });\n                        break;\n                    }\n                    case \"object\": {\n                        const json = _json;\n                        json.type = \"object\";\n                        json.properties = {};\n                        const shape = def.shape; // params.shapeCache.get(schema)!;\n                        for (const key in shape) {\n                            json.properties[key] = this.process(shape[key], {\n                                ...params,\n                                path: [...params.path, \"properties\", key],\n                            });\n                        }\n                        // required keys\n                        const allKeys = new Set(Object.keys(shape));\n                        // const optionalKeys = new Set(def.optional);\n                        const requiredKeys = new Set([...allKeys].filter((key) => {\n                            const v = def.shape[key]._zod;\n                            if (this.io === \"input\") {\n                                return v.optin === undefined;\n                            }\n                            else {\n                                return v.optout === undefined;\n                            }\n                        }));\n                        if (requiredKeys.size > 0) {\n                            json.required = Array.from(requiredKeys);\n                        }\n                        // catchall\n                        if (def.catchall?._zod.def.type === \"never\") {\n                            // strict\n                            json.additionalProperties = false;\n                        }\n                        else if (!def.catchall) {\n                            // regular\n                            if (this.io === \"output\")\n                                json.additionalProperties = false;\n                        }\n                        else if (def.catchall) {\n                            json.additionalProperties = this.process(def.catchall, {\n                                ...params,\n                                path: [...params.path, \"additionalProperties\"],\n                            });\n                        }\n                        break;\n                    }\n                    case \"union\": {\n                        const json = _json;\n                        json.anyOf = def.options.map((x, i) => this.process(x, {\n                            ...params,\n                            path: [...params.path, \"anyOf\", i],\n                        }));\n                        break;\n                    }\n                    case \"intersection\": {\n                        const json = _json;\n                        const a = this.process(def.left, {\n                            ...params,\n                            path: [...params.path, \"allOf\", 0],\n                        });\n                        const b = this.process(def.right, {\n                            ...params,\n                            path: [...params.path, \"allOf\", 1],\n                        });\n                        const isSimpleIntersection = (val) => \"allOf\" in val && Object.keys(val).length === 1;\n                        const allOf = [\n                            ...(isSimpleIntersection(a) ? a.allOf : [a]),\n                            ...(isSimpleIntersection(b) ? b.allOf : [b]),\n                        ];\n                        json.allOf = allOf;\n                        break;\n                    }\n                    case \"tuple\": {\n                        const json = _json;\n                        json.type = \"array\";\n                        const prefixItems = def.items.map((x, i) => this.process(x, { ...params, path: [...params.path, \"prefixItems\", i] }));\n                        if (this.target === \"draft-2020-12\") {\n                            json.prefixItems = prefixItems;\n                        }\n                        else {\n                            json.items = prefixItems;\n                        }\n                        if (def.rest) {\n                            const rest = this.process(def.rest, {\n                                ...params,\n                                path: [...params.path, \"items\"],\n                            });\n                            if (this.target === \"draft-2020-12\") {\n                                json.items = rest;\n                            }\n                            else {\n                                json.additionalItems = rest;\n                            }\n                        }\n                        // additionalItems\n                        if (def.rest) {\n                            json.items = this.process(def.rest, {\n                                ...params,\n                                path: [...params.path, \"items\"],\n                            });\n                        }\n                        // length\n                        const { minimum, maximum } = schema._zod.bag;\n                        if (typeof minimum === \"number\")\n                            json.minItems = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxItems = maximum;\n                        break;\n                    }\n                    case \"record\": {\n                        const json = _json;\n                        json.type = \"object\";\n                        json.propertyNames = this.process(def.keyType, { ...params, path: [...params.path, \"propertyNames\"] });\n                        json.additionalProperties = this.process(def.valueType, {\n                            ...params,\n                            path: [...params.path, \"additionalProperties\"],\n                        });\n                        break;\n                    }\n                    case \"map\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Map cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"set\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Set cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"enum\": {\n                        const json = _json;\n                        const values = getEnumValues(def.entries);\n                        // Number enums can have both string and number values\n                        if (values.every((v) => typeof v === \"number\"))\n                            json.type = \"number\";\n                        if (values.every((v) => typeof v === \"string\"))\n                            json.type = \"string\";\n                        json.enum = values;\n                        break;\n                    }\n                    case \"literal\": {\n                        const json = _json;\n                        const vals = [];\n                        for (const val of def.values) {\n                            if (val === undefined) {\n                                if (this.unrepresentable === \"throw\") {\n                                    throw new Error(\"Literal `undefined` cannot be represented in JSON Schema\");\n                                }\n                                else {\n                                    // do not add to vals\n                                }\n                            }\n                            else if (typeof val === \"bigint\") {\n                                if (this.unrepresentable === \"throw\") {\n                                    throw new Error(\"BigInt literals cannot be represented in JSON Schema\");\n                                }\n                                else {\n                                    vals.push(Number(val));\n                                }\n                            }\n                            else {\n                                vals.push(val);\n                            }\n                        }\n                        if (vals.length === 0) {\n                            // do nothing (an undefined literal was stripped)\n                        }\n                        else if (vals.length === 1) {\n                            const val = vals[0];\n                            json.type = val === null ? \"null\" : typeof val;\n                            json.const = val;\n                        }\n                        else {\n                            if (vals.every((v) => typeof v === \"number\"))\n                                json.type = \"number\";\n                            if (vals.every((v) => typeof v === \"string\"))\n                                json.type = \"string\";\n                            if (vals.every((v) => typeof v === \"boolean\"))\n                                json.type = \"string\";\n                            if (vals.every((v) => v === null))\n                                json.type = \"null\";\n                            json.enum = vals;\n                        }\n                        break;\n                    }\n                    case \"file\": {\n                        const json = _json;\n                        const file = {\n                            type: \"string\",\n                            format: \"binary\",\n                            contentEncoding: \"binary\",\n                        };\n                        const { minimum, maximum, mime } = schema._zod.bag;\n                        if (minimum !== undefined)\n                            file.minLength = minimum;\n                        if (maximum !== undefined)\n                            file.maxLength = maximum;\n                        if (mime) {\n                            if (mime.length === 1) {\n                                file.contentMediaType = mime[0];\n                                Object.assign(json, file);\n                            }\n                            else {\n                                json.anyOf = mime.map((m) => {\n                                    const mFile = { ...file, contentMediaType: m };\n                                    return mFile;\n                                });\n                            }\n                        }\n                        else {\n                            Object.assign(json, file);\n                        }\n                        // if (this.unrepresentable === \"throw\") {\n                        //   throw new Error(\"File cannot be represented in JSON Schema\");\n                        // }\n                        break;\n                    }\n                    case \"transform\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Transforms cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"nullable\": {\n                        const inner = this.process(def.innerType, params);\n                        _json.anyOf = [inner, { type: \"null\" }];\n                        break;\n                    }\n                    case \"nonoptional\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"success\": {\n                        const json = _json;\n                        json.type = \"boolean\";\n                        break;\n                    }\n                    case \"default\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        _json.default = JSON.parse(JSON.stringify(def.defaultValue));\n                        break;\n                    }\n                    case \"prefault\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        if (this.io === \"input\")\n                            _json._prefault = JSON.parse(JSON.stringify(def.defaultValue));\n                        break;\n                    }\n                    case \"catch\": {\n                        // use conditionals\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        let catchValue;\n                        try {\n                            catchValue = def.catchValue(undefined);\n                        }\n                        catch {\n                            throw new Error(\"Dynamic catch values are not supported in JSON Schema\");\n                        }\n                        _json.default = catchValue;\n                        break;\n                    }\n                    case \"nan\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"NaN cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"template_literal\": {\n                        const json = _json;\n                        const pattern = schema._zod.pattern;\n                        if (!pattern)\n                            throw new Error(\"Pattern not found in template literal\");\n                        json.type = \"string\";\n                        json.pattern = pattern.source;\n                        break;\n                    }\n                    case \"pipe\": {\n                        const innerType = this.io === \"input\" ? (def.in._zod.def.type === \"transform\" ? def.out : def.in) : def.out;\n                        this.process(innerType, params);\n                        result.ref = innerType;\n                        break;\n                    }\n                    case \"readonly\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        _json.readOnly = true;\n                        break;\n                    }\n                    // passthrough types\n                    case \"promise\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"optional\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"lazy\": {\n                        const innerType = schema._zod.innerType;\n                        this.process(innerType, params);\n                        result.ref = innerType;\n                        break;\n                    }\n                    case \"custom\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Custom types cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    default: {\n                        def;\n                    }\n                }\n            }\n        }\n        // metadata\n        const meta = this.metadataRegistry.get(schema);\n        if (meta)\n            Object.assign(result.schema, meta);\n        if (this.io === \"input\" && isTransforming(schema)) {\n            // examples/defaults only apply to output type of pipe\n            delete result.schema.examples;\n            delete result.schema.default;\n        }\n        // set prefault as default\n        if (this.io === \"input\" && result.schema._prefault)\n            (_a = result.schema).default ?? (_a.default = result.schema._prefault);\n        delete result.schema._prefault;\n        // pulling fresh from this.seen in case it was overwritten\n        const _result = this.seen.get(schema);\n        return _result.schema;\n    }\n    emit(schema, _params) {\n        const params = {\n            cycles: _params?.cycles ?? \"ref\",\n            reused: _params?.reused ?? \"inline\",\n            // unrepresentable: _params?.unrepresentable ?? \"throw\",\n            // uri: _params?.uri ?? ((id) => `${id}`),\n            external: _params?.external ?? undefined,\n        };\n        // iterate over seen map;\n        const root = this.seen.get(schema);\n        if (!root)\n            throw new Error(\"Unprocessed schema. This is a bug in Zod.\");\n        // initialize result with root schema fields\n        // Object.assign(result, seen.cached);\n        // returns a ref to the schema\n        // defId will be empty if the ref points to an external schema (or #)\n        const makeURI = (entry) => {\n            // comparing the seen objects because sometimes\n            // multiple schemas map to the same seen object.\n            // e.g. lazy\n            // external is configured\n            const defsSegment = this.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\n            if (params.external) {\n                const externalId = params.external.registry.get(entry[0])?.id; // ?? \"__shared\";// `__schema${this.counter++}`;\n                // check if schema is in the external registry\n                const uriGenerator = params.external.uri ?? ((id) => id);\n                if (externalId) {\n                    return { ref: uriGenerator(externalId) };\n                }\n                // otherwise, add to __shared\n                const id = entry[1].defId ?? entry[1].schema.id ?? `schema${this.counter++}`;\n                entry[1].defId = id; // set defId so it will be reused if needed\n                return { defId: id, ref: `${uriGenerator(\"__shared\")}#/${defsSegment}/${id}` };\n            }\n            if (entry[1] === root) {\n                return { ref: \"#\" };\n            }\n            // self-contained schema\n            const uriPrefix = `#`;\n            const defUriPrefix = `${uriPrefix}/${defsSegment}/`;\n            const defId = entry[1].schema.id ?? `__schema${this.counter++}`;\n            return { defId, ref: defUriPrefix + defId };\n        };\n        // stored cached version in `def` property\n        // remove all properties, set $ref\n        const extractToDef = (entry) => {\n            // if the schema is already a reference, do not extract it\n            if (entry[1].schema.$ref) {\n                return;\n            }\n            const seen = entry[1];\n            const { ref, defId } = makeURI(entry);\n            seen.def = { ...seen.schema };\n            // defId won't be set if the schema is a reference to an external schema\n            if (defId)\n                seen.defId = defId;\n            // wipe away all properties except $ref\n            const schema = seen.schema;\n            for (const key in schema) {\n                delete schema[key];\n            }\n            schema.$ref = ref;\n        };\n        // throw on cycles\n        // break cycles\n        if (params.cycles === \"throw\") {\n            for (const entry of this.seen.entries()) {\n                const seen = entry[1];\n                if (seen.cycle) {\n                    throw new Error(\"Cycle detected: \" +\n                        `#/${seen.cycle?.join(\"/\")}/<root>` +\n                        '\\n\\nSet the `cycles` parameter to `\"ref\"` to resolve cyclical schemas with defs.');\n                }\n            }\n        }\n        // extract schemas into $defs\n        for (const entry of this.seen.entries()) {\n            const seen = entry[1];\n            // convert root schema to # $ref\n            if (schema === entry[0]) {\n                extractToDef(entry); // this has special handling for the root schema\n                continue;\n            }\n            // extract schemas that are in the external registry\n            if (params.external) {\n                const ext = params.external.registry.get(entry[0])?.id;\n                if (schema !== entry[0] && ext) {\n                    extractToDef(entry);\n                    continue;\n                }\n            }\n            // extract schemas with `id` meta\n            const id = this.metadataRegistry.get(entry[0])?.id;\n            if (id) {\n                extractToDef(entry);\n                continue;\n            }\n            // break cycles\n            if (seen.cycle) {\n                // any\n                extractToDef(entry);\n                continue;\n            }\n            // extract reused schemas\n            if (seen.count > 1) {\n                if (params.reused === \"ref\") {\n                    extractToDef(entry);\n                    // biome-ignore lint:\n                    continue;\n                }\n            }\n        }\n        // flatten _refs\n        const flattenRef = (zodSchema, params) => {\n            const seen = this.seen.get(zodSchema);\n            const schema = seen.def ?? seen.schema;\n            const _cached = { ...schema };\n            // already seen\n            if (seen.ref === null) {\n                return;\n            }\n            // flatten ref if defined\n            const ref = seen.ref;\n            seen.ref = null; // prevent recursion\n            if (ref) {\n                flattenRef(ref, params);\n                // merge referenced schema into current\n                const refSchema = this.seen.get(ref).schema;\n                if (refSchema.$ref && params.target === \"draft-7\") {\n                    schema.allOf = schema.allOf ?? [];\n                    schema.allOf.push(refSchema);\n                }\n                else {\n                    Object.assign(schema, refSchema);\n                    Object.assign(schema, _cached); // prevent overwriting any fields in the original schema\n                }\n            }\n            // execute overrides\n            if (!seen.isParent)\n                this.override({\n                    zodSchema: zodSchema,\n                    jsonSchema: schema,\n                    path: seen.path ?? [],\n                });\n        };\n        for (const entry of [...this.seen.entries()].reverse()) {\n            flattenRef(entry[0], { target: this.target });\n        }\n        const result = {};\n        if (this.target === \"draft-2020-12\") {\n            result.$schema = \"https://json-schema.org/draft/2020-12/schema\";\n        }\n        else if (this.target === \"draft-7\") {\n            result.$schema = \"http://json-schema.org/draft-07/schema#\";\n        }\n        else {\n            console.warn(`Invalid target: ${this.target}`);\n        }\n        if (params.external?.uri) {\n            const id = params.external.registry.get(schema)?.id;\n            if (!id)\n                throw new Error(\"Schema is missing an `id` property\");\n            result.$id = params.external.uri(id);\n        }\n        Object.assign(result, root.def);\n        // build defs object\n        const defs = params.external?.defs ?? {};\n        for (const entry of this.seen.entries()) {\n            const seen = entry[1];\n            if (seen.def && seen.defId) {\n                defs[seen.defId] = seen.def;\n            }\n        }\n        // set definitions in result\n        if (params.external) {\n        }\n        else {\n            if (Object.keys(defs).length > 0) {\n                if (this.target === \"draft-2020-12\") {\n                    result.$defs = defs;\n                }\n                else {\n                    result.definitions = defs;\n                }\n            }\n        }\n        try {\n            // this \"finalizes\" this schema and ensures all cycles are removed\n            // each call to .emit() is functionally independent\n            // though the seen map is shared\n            return JSON.parse(JSON.stringify(result));\n        }\n        catch (_err) {\n            throw new Error(\"Error converting schema to JSON.\");\n        }\n    }\n}\nexport function toJSONSchema(input, _params) {\n    if (input instanceof $ZodRegistry) {\n        const gen = new JSONSchemaGenerator(_params);\n        const defs = {};\n        for (const entry of input._idmap.entries()) {\n            const [_, schema] = entry;\n            gen.process(schema);\n        }\n        const schemas = {};\n        const external = {\n            registry: input,\n            uri: _params?.uri,\n            defs,\n        };\n        for (const entry of input._idmap.entries()) {\n            const [key, schema] = entry;\n            schemas[key] = gen.emit(schema, {\n                ..._params,\n                external,\n            });\n        }\n        if (Object.keys(defs).length > 0) {\n            const defsSegment = gen.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\n            schemas.__shared = {\n                [defsSegment]: defs,\n            };\n        }\n        return { schemas };\n    }\n    const gen = new JSONSchemaGenerator(_params);\n    gen.process(input);\n    return gen.emit(input, _params);\n}\nfunction isTransforming(_schema, _ctx) {\n    const ctx = _ctx ?? { seen: new Set() };\n    if (ctx.seen.has(_schema))\n        return false;\n    ctx.seen.add(_schema);\n    const schema = _schema;\n    const def = schema._zod.def;\n    switch (def.type) {\n        case \"string\":\n        case \"number\":\n        case \"bigint\":\n        case \"boolean\":\n        case \"date\":\n        case \"symbol\":\n        case \"undefined\":\n        case \"null\":\n        case \"any\":\n        case \"unknown\":\n        case \"never\":\n        case \"void\":\n        case \"literal\":\n        case \"enum\":\n        case \"nan\":\n        case \"file\":\n        case \"template_literal\":\n            return false;\n        case \"array\": {\n            return isTransforming(def.element, ctx);\n        }\n        case \"object\": {\n            for (const key in def.shape) {\n                if (isTransforming(def.shape[key], ctx))\n                    return true;\n            }\n            return false;\n        }\n        case \"union\": {\n            for (const option of def.options) {\n                if (isTransforming(option, ctx))\n                    return true;\n            }\n            return false;\n        }\n        case \"intersection\": {\n            return isTransforming(def.left, ctx) || isTransforming(def.right, ctx);\n        }\n        case \"tuple\": {\n            for (const item of def.items) {\n                if (isTransforming(item, ctx))\n                    return true;\n            }\n            if (def.rest && isTransforming(def.rest, ctx))\n                return true;\n            return false;\n        }\n        case \"record\": {\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\n        }\n        case \"map\": {\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\n        }\n        case \"set\": {\n            return isTransforming(def.valueType, ctx);\n        }\n        // inner types\n        case \"promise\":\n        case \"optional\":\n        case \"nonoptional\":\n        case \"nullable\":\n        case \"readonly\":\n            return isTransforming(def.innerType, ctx);\n        case \"lazy\":\n            return isTransforming(def.getter(), ctx);\n        case \"default\": {\n            return isTransforming(def.innerType, ctx);\n        }\n        case \"prefault\": {\n            return isTransforming(def.innerType, ctx);\n        }\n        case \"custom\": {\n            return false;\n        }\n        case \"transform\": {\n            return true;\n        }\n        case \"pipe\": {\n            return isTransforming(def.in, ctx) || isTransforming(def.out, ctx);\n        }\n        case \"success\": {\n            return false;\n        }\n        case \"catch\": {\n            return false;\n        }\n        default:\n            def;\n    }\n    throw new Error(`Unknown schema type: ${def.type}`);\n}\n",
    "import * as core from \"../core/index.js\";\nimport * as schemas from \"./schemas.js\";\nexport const ZodISODateTime = /*@__PURE__*/ core.$constructor(\"ZodISODateTime\", (inst, def) => {\n    core.$ZodISODateTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function datetime(params) {\n    return core._isoDateTime(ZodISODateTime, params);\n}\nexport const ZodISODate = /*@__PURE__*/ core.$constructor(\"ZodISODate\", (inst, def) => {\n    core.$ZodISODate.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function date(params) {\n    return core._isoDate(ZodISODate, params);\n}\nexport const ZodISOTime = /*@__PURE__*/ core.$constructor(\"ZodISOTime\", (inst, def) => {\n    core.$ZodISOTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function time(params) {\n    return core._isoTime(ZodISOTime, params);\n}\nexport const ZodISODuration = /*@__PURE__*/ core.$constructor(\"ZodISODuration\", (inst, def) => {\n    core.$ZodISODuration.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function duration(params) {\n    return core._isoDuration(ZodISODuration, params);\n}\n",
    "import * as core from \"../core/index.js\";\nimport { $ZodError } from \"../core/index.js\";\nconst initializer = (inst, issues) => {\n    $ZodError.init(inst, issues);\n    inst.name = \"ZodError\";\n    Object.defineProperties(inst, {\n        format: {\n            value: (mapper) => core.formatError(inst, mapper),\n            // enumerable: false,\n        },\n        flatten: {\n            value: (mapper) => core.flattenError(inst, mapper),\n            // enumerable: false,\n        },\n        addIssue: {\n            value: (issue) => inst.issues.push(issue),\n            // enumerable: false,\n        },\n        addIssues: {\n            value: (issues) => inst.issues.push(...issues),\n            // enumerable: false,\n        },\n        isEmpty: {\n            get() {\n                return inst.issues.length === 0;\n            },\n            // enumerable: false,\n        },\n    });\n    // Object.defineProperty(inst, \"isEmpty\", {\n    //   get() {\n    //     return inst.issues.length === 0;\n    //   },\n    // });\n};\nexport const ZodError = core.$constructor(\"ZodError\", initializer);\nexport const ZodRealError = core.$constructor(\"ZodError\", initializer, {\n    Parent: Error,\n});\n// /** @deprecated Use `z.core.$ZodErrorMapCtx` instead. */\n// export type ErrorMapCtx = core.$ZodErrorMapCtx;\n",
    "import * as core from \"../core/index.js\";\nimport { ZodRealError } from \"./errors.js\";\nexport const parse = /* @__PURE__ */ core._parse(ZodRealError);\nexport const parseAsync = /* @__PURE__ */ core._parseAsync(ZodRealError);\nexport const safeParse = /* @__PURE__ */ core._safeParse(ZodRealError);\nexport const safeParseAsync = /* @__PURE__ */ core._safeParseAsync(ZodRealError);\n",
    "import * as core from \"../core/index.js\";\nimport { util } from \"../core/index.js\";\nimport * as checks from \"./checks.js\";\nimport * as iso from \"./iso.js\";\nimport * as parse from \"./parse.js\";\nexport const ZodType = /*@__PURE__*/ core.$constructor(\"ZodType\", (inst, def) => {\n    core.$ZodType.init(inst, def);\n    inst.def = def;\n    Object.defineProperty(inst, \"_def\", { value: def });\n    // base methods\n    inst.check = (...checks) => {\n        return inst.clone({\n            ...def,\n            checks: [\n                ...(def.checks ?? []),\n                ...checks.map((ch) => typeof ch === \"function\" ? { _zod: { check: ch, def: { check: \"custom\" }, onattach: [] } } : ch),\n            ],\n        }\n        // { parent: true }\n        );\n    };\n    inst.clone = (def, params) => core.clone(inst, def, params);\n    inst.brand = () => inst;\n    inst.register = ((reg, meta) => {\n        reg.add(inst, meta);\n        return inst;\n    });\n    // parsing\n    inst.parse = (data, params) => parse.parse(inst, data, params, { callee: inst.parse });\n    inst.safeParse = (data, params) => parse.safeParse(inst, data, params);\n    inst.parseAsync = async (data, params) => parse.parseAsync(inst, data, params, { callee: inst.parseAsync });\n    inst.safeParseAsync = async (data, params) => parse.safeParseAsync(inst, data, params);\n    inst.spa = inst.safeParseAsync;\n    // refinements\n    inst.refine = (check, params) => inst.check(refine(check, params));\n    inst.superRefine = (refinement) => inst.check(superRefine(refinement));\n    inst.overwrite = (fn) => inst.check(checks.overwrite(fn));\n    // wrappers\n    inst.optional = () => optional(inst);\n    inst.nullable = () => nullable(inst);\n    inst.nullish = () => optional(nullable(inst));\n    inst.nonoptional = (params) => nonoptional(inst, params);\n    inst.array = () => array(inst);\n    inst.or = (arg) => union([inst, arg]);\n    inst.and = (arg) => intersection(inst, arg);\n    inst.transform = (tx) => pipe(inst, transform(tx));\n    inst.default = (def) => _default(inst, def);\n    inst.prefault = (def) => prefault(inst, def);\n    // inst.coalesce = (def, params) => coalesce(inst, def, params);\n    inst.catch = (params) => _catch(inst, params);\n    inst.pipe = (target) => pipe(inst, target);\n    inst.readonly = () => readonly(inst);\n    // meta\n    inst.describe = (description) => {\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, { description });\n        return cl;\n    };\n    Object.defineProperty(inst, \"description\", {\n        get() {\n            return core.globalRegistry.get(inst)?.description;\n        },\n        configurable: true,\n    });\n    inst.meta = (...args) => {\n        if (args.length === 0) {\n            return core.globalRegistry.get(inst);\n        }\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, args[0]);\n        return cl;\n    };\n    // helpers\n    inst.isOptional = () => inst.safeParse(undefined).success;\n    inst.isNullable = () => inst.safeParse(null).success;\n    return inst;\n});\n/** @internal */\nexport const _ZodString = /*@__PURE__*/ core.$constructor(\"_ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    ZodType.init(inst, def);\n    const bag = inst._zod.bag;\n    inst.format = bag.format ?? null;\n    inst.minLength = bag.minimum ?? null;\n    inst.maxLength = bag.maximum ?? null;\n    // validations\n    inst.regex = (...args) => inst.check(checks.regex(...args));\n    inst.includes = (...args) => inst.check(checks.includes(...args));\n    inst.startsWith = (...args) => inst.check(checks.startsWith(...args));\n    inst.endsWith = (...args) => inst.check(checks.endsWith(...args));\n    inst.min = (...args) => inst.check(checks.minLength(...args));\n    inst.max = (...args) => inst.check(checks.maxLength(...args));\n    inst.length = (...args) => inst.check(checks.length(...args));\n    inst.nonempty = (...args) => inst.check(checks.minLength(1, ...args));\n    inst.lowercase = (params) => inst.check(checks.lowercase(params));\n    inst.uppercase = (params) => inst.check(checks.uppercase(params));\n    // transforms\n    inst.trim = () => inst.check(checks.trim());\n    inst.normalize = (...args) => inst.check(checks.normalize(...args));\n    inst.toLowerCase = () => inst.check(checks.toLowerCase());\n    inst.toUpperCase = () => inst.check(checks.toUpperCase());\n});\nexport const ZodString = /*@__PURE__*/ core.$constructor(\"ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    _ZodString.init(inst, def);\n    inst.email = (params) => inst.check(core._email(ZodEmail, params));\n    inst.url = (params) => inst.check(core._url(ZodURL, params));\n    inst.jwt = (params) => inst.check(core._jwt(ZodJWT, params));\n    inst.emoji = (params) => inst.check(core._emoji(ZodEmoji, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.uuid = (params) => inst.check(core._uuid(ZodUUID, params));\n    inst.uuidv4 = (params) => inst.check(core._uuidv4(ZodUUID, params));\n    inst.uuidv6 = (params) => inst.check(core._uuidv6(ZodUUID, params));\n    inst.uuidv7 = (params) => inst.check(core._uuidv7(ZodUUID, params));\n    inst.nanoid = (params) => inst.check(core._nanoid(ZodNanoID, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.cuid = (params) => inst.check(core._cuid(ZodCUID, params));\n    inst.cuid2 = (params) => inst.check(core._cuid2(ZodCUID2, params));\n    inst.ulid = (params) => inst.check(core._ulid(ZodULID, params));\n    inst.base64 = (params) => inst.check(core._base64(ZodBase64, params));\n    inst.base64url = (params) => inst.check(core._base64url(ZodBase64URL, params));\n    inst.xid = (params) => inst.check(core._xid(ZodXID, params));\n    inst.ksuid = (params) => inst.check(core._ksuid(ZodKSUID, params));\n    inst.ipv4 = (params) => inst.check(core._ipv4(ZodIPv4, params));\n    inst.ipv6 = (params) => inst.check(core._ipv6(ZodIPv6, params));\n    inst.cidrv4 = (params) => inst.check(core._cidrv4(ZodCIDRv4, params));\n    inst.cidrv6 = (params) => inst.check(core._cidrv6(ZodCIDRv6, params));\n    inst.e164 = (params) => inst.check(core._e164(ZodE164, params));\n    // iso\n    inst.datetime = (params) => inst.check(iso.datetime(params));\n    inst.date = (params) => inst.check(iso.date(params));\n    inst.time = (params) => inst.check(iso.time(params));\n    inst.duration = (params) => inst.check(iso.duration(params));\n});\nexport function string(params) {\n    return core._string(ZodString, params);\n}\nexport const ZodStringFormat = /*@__PURE__*/ core.$constructor(\"ZodStringFormat\", (inst, def) => {\n    core.$ZodStringFormat.init(inst, def);\n    _ZodString.init(inst, def);\n});\nexport const ZodEmail = /*@__PURE__*/ core.$constructor(\"ZodEmail\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmail.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function email(params) {\n    return core._email(ZodEmail, params);\n}\nexport const ZodGUID = /*@__PURE__*/ core.$constructor(\"ZodGUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodGUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function guid(params) {\n    return core._guid(ZodGUID, params);\n}\nexport const ZodUUID = /*@__PURE__*/ core.$constructor(\"ZodUUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodUUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function uuid(params) {\n    return core._uuid(ZodUUID, params);\n}\nexport function uuidv4(params) {\n    return core._uuidv4(ZodUUID, params);\n}\n// ZodUUIDv6\nexport function uuidv6(params) {\n    return core._uuidv6(ZodUUID, params);\n}\n// ZodUUIDv7\nexport function uuidv7(params) {\n    return core._uuidv7(ZodUUID, params);\n}\nexport const ZodURL = /*@__PURE__*/ core.$constructor(\"ZodURL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodURL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function url(params) {\n    return core._url(ZodURL, params);\n}\nexport const ZodEmoji = /*@__PURE__*/ core.$constructor(\"ZodEmoji\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmoji.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function emoji(params) {\n    return core._emoji(ZodEmoji, params);\n}\nexport const ZodNanoID = /*@__PURE__*/ core.$constructor(\"ZodNanoID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodNanoID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function nanoid(params) {\n    return core._nanoid(ZodNanoID, params);\n}\nexport const ZodCUID = /*@__PURE__*/ core.$constructor(\"ZodCUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid(params) {\n    return core._cuid(ZodCUID, params);\n}\nexport const ZodCUID2 = /*@__PURE__*/ core.$constructor(\"ZodCUID2\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID2.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid2(params) {\n    return core._cuid2(ZodCUID2, params);\n}\nexport const ZodULID = /*@__PURE__*/ core.$constructor(\"ZodULID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodULID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ulid(params) {\n    return core._ulid(ZodULID, params);\n}\nexport const ZodXID = /*@__PURE__*/ core.$constructor(\"ZodXID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodXID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function xid(params) {\n    return core._xid(ZodXID, params);\n}\nexport const ZodKSUID = /*@__PURE__*/ core.$constructor(\"ZodKSUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodKSUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ksuid(params) {\n    return core._ksuid(ZodKSUID, params);\n}\nexport const ZodIPv4 = /*@__PURE__*/ core.$constructor(\"ZodIPv4\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv4(params) {\n    return core._ipv4(ZodIPv4, params);\n}\nexport const ZodIPv6 = /*@__PURE__*/ core.$constructor(\"ZodIPv6\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv6(params) {\n    return core._ipv6(ZodIPv6, params);\n}\nexport const ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv4\", (inst, def) => {\n    core.$ZodCIDRv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv4(params) {\n    return core._cidrv4(ZodCIDRv4, params);\n}\nexport const ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv6\", (inst, def) => {\n    core.$ZodCIDRv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv6(params) {\n    return core._cidrv6(ZodCIDRv6, params);\n}\nexport const ZodBase64 = /*@__PURE__*/ core.$constructor(\"ZodBase64\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64(params) {\n    return core._base64(ZodBase64, params);\n}\nexport const ZodBase64URL = /*@__PURE__*/ core.$constructor(\"ZodBase64URL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64URL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64url(params) {\n    return core._base64url(ZodBase64URL, params);\n}\nexport const ZodE164 = /*@__PURE__*/ core.$constructor(\"ZodE164\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodE164.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function e164(params) {\n    return core._e164(ZodE164, params);\n}\nexport const ZodJWT = /*@__PURE__*/ core.$constructor(\"ZodJWT\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodJWT.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function jwt(params) {\n    return core._jwt(ZodJWT, params);\n}\nexport const ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"ZodCustomStringFormat\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCustomStringFormat.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function stringFormat(format, fnOrRegex, _params = {}) {\n    return core._stringFormat(ZodCustomStringFormat, format, fnOrRegex, _params);\n}\nexport const ZodNumber = /*@__PURE__*/ core.$constructor(\"ZodNumber\", (inst, def) => {\n    core.$ZodNumber.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.int = (params) => inst.check(int(params));\n    inst.safe = (params) => inst.check(int(params));\n    inst.positive = (params) => inst.check(checks.gt(0, params));\n    inst.nonnegative = (params) => inst.check(checks.gte(0, params));\n    inst.negative = (params) => inst.check(checks.lt(0, params));\n    inst.nonpositive = (params) => inst.check(checks.lte(0, params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    inst.step = (value, params) => inst.check(checks.multipleOf(value, params));\n    // inst.finite = (params) => inst.check(core.finite(params));\n    inst.finite = () => inst;\n    const bag = inst._zod.bag;\n    inst.minValue =\n        Math.max(bag.minimum ?? Number.NEGATIVE_INFINITY, bag.exclusiveMinimum ?? Number.NEGATIVE_INFINITY) ?? null;\n    inst.maxValue =\n        Math.min(bag.maximum ?? Number.POSITIVE_INFINITY, bag.exclusiveMaximum ?? Number.POSITIVE_INFINITY) ?? null;\n    inst.isInt = (bag.format ?? \"\").includes(\"int\") || Number.isSafeInteger(bag.multipleOf ?? 0.5);\n    inst.isFinite = true;\n    inst.format = bag.format ?? null;\n});\nexport function number(params) {\n    return core._number(ZodNumber, params);\n}\nexport const ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"ZodNumberFormat\", (inst, def) => {\n    core.$ZodNumberFormat.init(inst, def);\n    ZodNumber.init(inst, def);\n});\nexport function int(params) {\n    return core._int(ZodNumberFormat, params);\n}\nexport function float32(params) {\n    return core._float32(ZodNumberFormat, params);\n}\nexport function float64(params) {\n    return core._float64(ZodNumberFormat, params);\n}\nexport function int32(params) {\n    return core._int32(ZodNumberFormat, params);\n}\nexport function uint32(params) {\n    return core._uint32(ZodNumberFormat, params);\n}\nexport const ZodBoolean = /*@__PURE__*/ core.$constructor(\"ZodBoolean\", (inst, def) => {\n    core.$ZodBoolean.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function boolean(params) {\n    return core._boolean(ZodBoolean, params);\n}\nexport const ZodBigInt = /*@__PURE__*/ core.$constructor(\"ZodBigInt\", (inst, def) => {\n    core.$ZodBigInt.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.positive = (params) => inst.check(checks.gt(BigInt(0), params));\n    inst.negative = (params) => inst.check(checks.lt(BigInt(0), params));\n    inst.nonpositive = (params) => inst.check(checks.lte(BigInt(0), params));\n    inst.nonnegative = (params) => inst.check(checks.gte(BigInt(0), params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    const bag = inst._zod.bag;\n    inst.minValue = bag.minimum ?? null;\n    inst.maxValue = bag.maximum ?? null;\n    inst.format = bag.format ?? null;\n});\nexport function bigint(params) {\n    return core._bigint(ZodBigInt, params);\n}\nexport const ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"ZodBigIntFormat\", (inst, def) => {\n    core.$ZodBigIntFormat.init(inst, def);\n    ZodBigInt.init(inst, def);\n});\n// int64\nexport function int64(params) {\n    return core._int64(ZodBigIntFormat, params);\n}\n// uint64\nexport function uint64(params) {\n    return core._uint64(ZodBigIntFormat, params);\n}\nexport const ZodSymbol = /*@__PURE__*/ core.$constructor(\"ZodSymbol\", (inst, def) => {\n    core.$ZodSymbol.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function symbol(params) {\n    return core._symbol(ZodSymbol, params);\n}\nexport const ZodUndefined = /*@__PURE__*/ core.$constructor(\"ZodUndefined\", (inst, def) => {\n    core.$ZodUndefined.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _undefined(params) {\n    return core._undefined(ZodUndefined, params);\n}\nexport { _undefined as undefined };\nexport const ZodNull = /*@__PURE__*/ core.$constructor(\"ZodNull\", (inst, def) => {\n    core.$ZodNull.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _null(params) {\n    return core._null(ZodNull, params);\n}\nexport { _null as null };\nexport const ZodAny = /*@__PURE__*/ core.$constructor(\"ZodAny\", (inst, def) => {\n    core.$ZodAny.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function any() {\n    return core._any(ZodAny);\n}\nexport const ZodUnknown = /*@__PURE__*/ core.$constructor(\"ZodUnknown\", (inst, def) => {\n    core.$ZodUnknown.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function unknown() {\n    return core._unknown(ZodUnknown);\n}\nexport const ZodNever = /*@__PURE__*/ core.$constructor(\"ZodNever\", (inst, def) => {\n    core.$ZodNever.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function never(params) {\n    return core._never(ZodNever, params);\n}\nexport const ZodVoid = /*@__PURE__*/ core.$constructor(\"ZodVoid\", (inst, def) => {\n    core.$ZodVoid.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _void(params) {\n    return core._void(ZodVoid, params);\n}\nexport { _void as void };\nexport const ZodDate = /*@__PURE__*/ core.$constructor(\"ZodDate\", (inst, def) => {\n    core.$ZodDate.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    const c = inst._zod.bag;\n    inst.minDate = c.minimum ? new Date(c.minimum) : null;\n    inst.maxDate = c.maximum ? new Date(c.maximum) : null;\n});\nexport function date(params) {\n    return core._date(ZodDate, params);\n}\nexport const ZodArray = /*@__PURE__*/ core.$constructor(\"ZodArray\", (inst, def) => {\n    core.$ZodArray.init(inst, def);\n    ZodType.init(inst, def);\n    inst.element = def.element;\n    inst.min = (minLength, params) => inst.check(checks.minLength(minLength, params));\n    inst.nonempty = (params) => inst.check(checks.minLength(1, params));\n    inst.max = (maxLength, params) => inst.check(checks.maxLength(maxLength, params));\n    inst.length = (len, params) => inst.check(checks.length(len, params));\n    inst.unwrap = () => inst.element;\n});\nexport function array(element, params) {\n    return core._array(ZodArray, element, params);\n}\n// .keyof\nexport function keyof(schema) {\n    const shape = schema._zod.def.shape;\n    return literal(Object.keys(shape));\n}\nexport const ZodObject = /*@__PURE__*/ core.$constructor(\"ZodObject\", (inst, def) => {\n    core.$ZodObject.init(inst, def);\n    ZodType.init(inst, def);\n    util.defineLazy(inst, \"shape\", () => def.shape);\n    inst.keyof = () => _enum(Object.keys(inst._zod.def.shape));\n    inst.catchall = (catchall) => inst.clone({ ...inst._zod.def, catchall: catchall });\n    inst.passthrough = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    // inst.nonstrict = () => inst.clone({ ...inst._zod.def, catchall: api.unknown() });\n    inst.loose = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    inst.strict = () => inst.clone({ ...inst._zod.def, catchall: never() });\n    inst.strip = () => inst.clone({ ...inst._zod.def, catchall: undefined });\n    inst.extend = (incoming) => {\n        return util.extend(inst, incoming);\n    };\n    inst.merge = (other) => util.merge(inst, other);\n    inst.pick = (mask) => util.pick(inst, mask);\n    inst.omit = (mask) => util.omit(inst, mask);\n    inst.partial = (...args) => util.partial(ZodOptional, inst, args[0]);\n    inst.required = (...args) => util.required(ZodNonOptional, inst, args[0]);\n});\nexport function object(shape, params) {\n    const def = {\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", { ...shape });\n            return this.shape;\n        },\n        ...util.normalizeParams(params),\n    };\n    return new ZodObject(def);\n}\n// strictObject\nexport function strictObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", { ...shape });\n            return this.shape;\n        },\n        catchall: never(),\n        ...util.normalizeParams(params),\n    });\n}\n// looseObject\nexport function looseObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", { ...shape });\n            return this.shape;\n        },\n        catchall: unknown(),\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodUnion = /*@__PURE__*/ core.$constructor(\"ZodUnion\", (inst, def) => {\n    core.$ZodUnion.init(inst, def);\n    ZodType.init(inst, def);\n    inst.options = def.options;\n});\nexport function union(options, params) {\n    return new ZodUnion({\n        type: \"union\",\n        options: options,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodDiscriminatedUnion = /*@__PURE__*/ core.$constructor(\"ZodDiscriminatedUnion\", (inst, def) => {\n    ZodUnion.init(inst, def);\n    core.$ZodDiscriminatedUnion.init(inst, def);\n});\nexport function discriminatedUnion(discriminator, options, params) {\n    // const [options, params] = args;\n    return new ZodDiscriminatedUnion({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodIntersection = /*@__PURE__*/ core.$constructor(\"ZodIntersection\", (inst, def) => {\n    core.$ZodIntersection.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function intersection(left, right) {\n    return new ZodIntersection({\n        type: \"intersection\",\n        left: left,\n        right: right,\n    });\n}\nexport const ZodTuple = /*@__PURE__*/ core.$constructor(\"ZodTuple\", (inst, def) => {\n    core.$ZodTuple.init(inst, def);\n    ZodType.init(inst, def);\n    inst.rest = (rest) => inst.clone({\n        ...inst._zod.def,\n        rest: rest,\n    });\n});\nexport function tuple(items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof core.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new ZodTuple({\n        type: \"tuple\",\n        items: items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodRecord = /*@__PURE__*/ core.$constructor(\"ZodRecord\", (inst, def) => {\n    core.$ZodRecord.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function record(keyType, valueType, params) {\n    return new ZodRecord({\n        type: \"record\",\n        keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\n// type alksjf = core.output<core.$ZodRecordKey>;\nexport function partialRecord(keyType, valueType, params) {\n    return new ZodRecord({\n        type: \"record\",\n        keyType: union([keyType, never()]),\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodMap = /*@__PURE__*/ core.$constructor(\"ZodMap\", (inst, def) => {\n    core.$ZodMap.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function map(keyType, valueType, params) {\n    return new ZodMap({\n        type: \"map\",\n        keyType: keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSet = /*@__PURE__*/ core.$constructor(\"ZodSet\", (inst, def) => {\n    core.$ZodSet.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (...args) => inst.check(core._minSize(...args));\n    inst.nonempty = (params) => inst.check(core._minSize(1, params));\n    inst.max = (...args) => inst.check(core._maxSize(...args));\n    inst.size = (...args) => inst.check(core._size(...args));\n});\nexport function set(valueType, params) {\n    return new ZodSet({\n        type: \"set\",\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodEnum = /*@__PURE__*/ core.$constructor(\"ZodEnum\", (inst, def) => {\n    core.$ZodEnum.init(inst, def);\n    ZodType.init(inst, def);\n    inst.enum = def.entries;\n    inst.options = Object.values(def.entries);\n    const keys = new Set(Object.keys(def.entries));\n    inst.extract = (values, params) => {\n        const newEntries = {};\n        for (const value of values) {\n            if (keys.has(value)) {\n                newEntries[value] = def.entries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n    inst.exclude = (values, params) => {\n        const newEntries = { ...def.entries };\n        for (const value of values) {\n            if (keys.has(value)) {\n                delete newEntries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n});\nfunction _enum(values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport { _enum as enum };\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function nativeEnum(entries, params) {\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLiteral = /*@__PURE__*/ core.$constructor(\"ZodLiteral\", (inst, def) => {\n    core.$ZodLiteral.init(inst, def);\n    ZodType.init(inst, def);\n    inst.values = new Set(def.values);\n    Object.defineProperty(inst, \"value\", {\n        get() {\n            if (def.values.length > 1) {\n                throw new Error(\"This schema contains multiple valid literal values. Use `.values` instead.\");\n            }\n            return def.values[0];\n        },\n    });\n});\nexport function literal(value, params) {\n    return new ZodLiteral({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodFile = /*@__PURE__*/ core.$constructor(\"ZodFile\", (inst, def) => {\n    core.$ZodFile.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (size, params) => inst.check(core._minSize(size, params));\n    inst.max = (size, params) => inst.check(core._maxSize(size, params));\n    inst.mime = (types, params) => inst.check(core._mime(Array.isArray(types) ? types : [types], params));\n});\nexport function file(params) {\n    return core._file(ZodFile, params);\n}\nexport const ZodTransform = /*@__PURE__*/ core.$constructor(\"ZodTransform\", (inst, def) => {\n    core.$ZodTransform.init(inst, def);\n    ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = inst);\n                _issue.continue ?? (_issue.continue = true);\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        const output = def.transform(payload.value, payload);\n        if (output instanceof Promise) {\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        payload.value = output;\n        return payload;\n    };\n});\nexport function transform(fn) {\n    return new ZodTransform({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport const ZodOptional = /*@__PURE__*/ core.$constructor(\"ZodOptional\", (inst, def) => {\n    core.$ZodOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function optional(innerType) {\n    return new ZodOptional({\n        type: \"optional\",\n        innerType: innerType,\n    });\n}\nexport const ZodNullable = /*@__PURE__*/ core.$constructor(\"ZodNullable\", (inst, def) => {\n    core.$ZodNullable.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nullable(innerType) {\n    return new ZodNullable({\n        type: \"nullable\",\n        innerType: innerType,\n    });\n}\n// nullish\nexport function nullish(innerType) {\n    return optional(nullable(innerType));\n}\nexport const ZodDefault = /*@__PURE__*/ core.$constructor(\"ZodDefault\", (inst, def) => {\n    core.$ZodDefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeDefault = inst.unwrap;\n});\nexport function _default(innerType, defaultValue) {\n    return new ZodDefault({\n        type: \"default\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        },\n    });\n}\nexport const ZodPrefault = /*@__PURE__*/ core.$constructor(\"ZodPrefault\", (inst, def) => {\n    core.$ZodPrefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function prefault(innerType, defaultValue) {\n    return new ZodPrefault({\n        type: \"prefault\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        },\n    });\n}\nexport const ZodNonOptional = /*@__PURE__*/ core.$constructor(\"ZodNonOptional\", (inst, def) => {\n    core.$ZodNonOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nonoptional(innerType, params) {\n    return new ZodNonOptional({\n        type: \"nonoptional\",\n        innerType: innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSuccess = /*@__PURE__*/ core.$constructor(\"ZodSuccess\", (inst, def) => {\n    core.$ZodSuccess.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function success(innerType) {\n    return new ZodSuccess({\n        type: \"success\",\n        innerType: innerType,\n    });\n}\nexport const ZodCatch = /*@__PURE__*/ core.$constructor(\"ZodCatch\", (inst, def) => {\n    core.$ZodCatch.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeCatch = inst.unwrap;\n});\nfunction _catch(innerType, catchValue) {\n    return new ZodCatch({\n        type: \"catch\",\n        innerType: innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport { _catch as catch };\nexport const ZodNaN = /*@__PURE__*/ core.$constructor(\"ZodNaN\", (inst, def) => {\n    core.$ZodNaN.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function nan(params) {\n    return core._nan(ZodNaN, params);\n}\nexport const ZodPipe = /*@__PURE__*/ core.$constructor(\"ZodPipe\", (inst, def) => {\n    core.$ZodPipe.init(inst, def);\n    ZodType.init(inst, def);\n    inst.in = def.in;\n    inst.out = def.out;\n});\nexport function pipe(in_, out) {\n    return new ZodPipe({\n        type: \"pipe\",\n        in: in_,\n        out: out,\n        // ...util.normalizeParams(params),\n    });\n}\nexport const ZodReadonly = /*@__PURE__*/ core.$constructor(\"ZodReadonly\", (inst, def) => {\n    core.$ZodReadonly.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function readonly(innerType) {\n    return new ZodReadonly({\n        type: \"readonly\",\n        innerType: innerType,\n    });\n}\nexport const ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"ZodTemplateLiteral\", (inst, def) => {\n    core.$ZodTemplateLiteral.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function templateLiteral(parts, params) {\n    return new ZodTemplateLiteral({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLazy = /*@__PURE__*/ core.$constructor(\"ZodLazy\", (inst, def) => {\n    core.$ZodLazy.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.getter();\n});\nexport function lazy(getter) {\n    return new ZodLazy({\n        type: \"lazy\",\n        getter: getter,\n    });\n}\nexport const ZodPromise = /*@__PURE__*/ core.$constructor(\"ZodPromise\", (inst, def) => {\n    core.$ZodPromise.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function promise(innerType) {\n    return new ZodPromise({\n        type: \"promise\",\n        innerType: innerType,\n    });\n}\nexport const ZodCustom = /*@__PURE__*/ core.$constructor(\"ZodCustom\", (inst, def) => {\n    core.$ZodCustom.init(inst, def);\n    ZodType.init(inst, def);\n});\n// custom checks\nexport function check(fn) {\n    const ch = new core.$ZodCheck({\n        check: \"custom\",\n        // ...util.normalizeParams(params),\n    });\n    ch._zod.check = fn;\n    return ch;\n}\nexport function custom(fn, _params) {\n    return core._custom(ZodCustom, fn ?? (() => true), _params);\n}\nexport function refine(fn, _params = {}) {\n    return core._refine(ZodCustom, fn, _params);\n}\n// superRefine\nexport function superRefine(fn) {\n    const ch = check((payload) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, ch._zod.def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = ch);\n                _issue.continue ?? (_issue.continue = !ch._zod.def.abort);\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        return fn(payload.value, payload);\n    });\n    return ch;\n}\nfunction _instanceof(cls, params = {\n    error: `Input not instance of ${cls.name}`,\n}) {\n    const inst = new ZodCustom({\n        type: \"custom\",\n        check: \"custom\",\n        fn: (data) => data instanceof cls,\n        abort: true,\n        ...util.normalizeParams(params),\n    });\n    inst._zod.bag.Class = cls;\n    return inst;\n}\nexport { _instanceof as instanceof };\n// stringbool\nexport const stringbool = (...args) => core._stringbool({\n    Pipe: ZodPipe,\n    Boolean: ZodBoolean,\n    String: ZodString,\n    Transform: ZodTransform,\n}, ...args);\nexport function json(params) {\n    const jsonSchema = lazy(() => {\n        return union([string(params), number(), boolean(), _null(), array(jsonSchema), record(string(), jsonSchema)]);\n    });\n    return jsonSchema;\n}\n// preprocess\n// /** @deprecated Use `z.pipe()` and `z.transform()` instead. */\nexport function preprocess(fn, schema) {\n    return pipe(transform(fn), schema);\n}\n",
    "// Zod 3 compat layer\nimport * as core from \"../core/index.js\";\n/** @deprecated Use the raw string literal codes instead, e.g. \"invalid_type\". */\nexport const ZodIssueCode = {\n    invalid_type: \"invalid_type\",\n    too_big: \"too_big\",\n    too_small: \"too_small\",\n    invalid_format: \"invalid_format\",\n    not_multiple_of: \"not_multiple_of\",\n    unrecognized_keys: \"unrecognized_keys\",\n    invalid_union: \"invalid_union\",\n    invalid_key: \"invalid_key\",\n    invalid_element: \"invalid_element\",\n    invalid_value: \"invalid_value\",\n    custom: \"custom\",\n};\nexport { $brand, config } from \"../core/index.js\";\n/** @deprecated Use `z.config(params)` instead. */\nexport function setErrorMap(map) {\n    core.config({\n        customError: map,\n    });\n}\n/** @deprecated Use `z.config()` instead. */\nexport function getErrorMap() {\n    return core.config().customError;\n}\n/** @deprecated Do not use. Stub definition, only included for zod-to-json-schema compatibility. */\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n",
    "import * as core from \"../core/index.js\";\nimport * as schemas from \"./schemas.js\";\nexport function string(params) {\n    return core._coercedString(schemas.ZodString, params);\n}\nexport function number(params) {\n    return core._coercedNumber(schemas.ZodNumber, params);\n}\nexport function boolean(params) {\n    return core._coercedBoolean(schemas.ZodBoolean, params);\n}\nexport function bigint(params) {\n    return core._coercedBigint(schemas.ZodBigInt, params);\n}\nexport function date(params) {\n    return core._coercedDate(schemas.ZodDate, params);\n}\n",
    "export * as core from \"../core/index.js\";\nexport * from \"./schemas.js\";\nexport * from \"./checks.js\";\nexport * from \"./errors.js\";\nexport * from \"./parse.js\";\nexport * from \"./compat.js\";\n// zod-specified\nimport { config } from \"../core/index.js\";\nimport en from \"../locales/en.js\";\nconfig(en());\nexport { globalRegistry, registry, config, function, $output, $input, $brand, clone, regexes, treeifyError, prettifyError, formatError, flattenError, toJSONSchema, TimePrecision, NEVER, } from \"../core/index.js\";\nexport * as locales from \"../locales/index.js\";\n// iso\n// must be exported from top-level\n// https://github.com/colinhacks/zod/issues/4491\nexport { ZodISODateTime, ZodISODate, ZodISOTime, ZodISODuration } from \"./iso.js\";\nexport * as iso from \"./iso.js\";\nexport * as coerce from \"./coerce.js\";\n",
    "import { z } from 'zod/v4';\n\nexport const EnvConfigSchema = z.object({\n    APP_NAME: z.string(),\n    APP_HOST: z.url(),\n    APP_IP: z.ipv4(),\n\n    MODE: z.literal(['DEVELOPMENT', 'PRODUCTION', 'BUILDING', 'PREVIEW']),\n\n    PORT_BOT_APP: z.coerce.number(),\n    PORT_MINIAPP_APP: z.coerce.number(),\n    PORT_API_APP: z.coerce.number(),\n    PORT_ADMIN_APP: z.coerce.number(),\n\n    SUB_BOT_APP: z.string(),\n    SUB_MINIAPP_APP: z.string(),\n    SUB_API_APP: z.string(),\n    SUB_ADMIN_APP: z.string(),\n\n    TELEGRAM_BOT_TOKEN: z.string().min(10),\n    TELEGRAM_BOT_TESTING_TOKEN: z.string().min(10),\n});\n\nexport type EnvConfigInputSchema = z.input<typeof EnvConfigSchema>;\nexport type EnvConfigSchema = z.infer<typeof EnvConfigSchema>;\n\n\nexport const useEnvConfig = (data: any): EnvConfigSchema => EnvConfigSchema.parse(data);\n",
    "import { z } from 'zod/v4';\nimport { EnvConfigSchema } from './env';\n\n\nexport const BotConfigSchema = EnvConfigSchema.pick({\n    PORT_BOT_APP: true,\n    TELEGRAM_BOT_TESTING_TOKEN: true,\n    TELEGRAM_BOT_TOKEN: true\n});\n\n\nexport type BotConfigInputSchema = z.input<typeof BotConfigSchema>;\nexport type BotConfigSchema = z.infer<typeof BotConfigSchema>;\n\n\nexport const useBotConfig = (data: any): BotConfigSchema => BotConfigSchema.parse(data);\n",
    "import type z from \"zod\";\nimport { EnvConfigSchema } from \"./env\";\n\nexport const SubsConfigSchema = EnvConfigSchema.pick({\n    SUB_ADMIN_APP: true,\n    SUB_API_APP: true,\n    SUB_BOT_APP: true,\n    SUB_MINIAPP_APP: true\n});\n\nexport type SubsConfigInputSchema = z.input<typeof SubsConfigSchema>;\nexport type SubsConfigSchema = z.infer<typeof SubsConfigSchema>;\n\nexport const useSubsConfig = (data: any): SubsConfigSchema => SubsConfigSchema.parse(data);\n",
    "import type z from \"zod\";\nimport { EnvConfigSchema } from \"./env\";\n\nexport const PortsConfigSchema = EnvConfigSchema.pick({\n    PORT_ADMIN_APP: true,\n    PORT_API_APP: true,\n    PORT_BOT_APP: true,\n    PORT_MINIAPP_APP: true\n});\n\nexport type PortsConfigInputSchema = z.input<typeof PortsConfigSchema>;\nexport type PortsConfigSchema = z.infer<typeof PortsConfigSchema>;\n\nexport const usePortsConfig = (data: any): PortsConfigSchema => PortsConfigSchema.parse(data);\n",
    "import { z } from 'zod/v4';\nimport { EnvConfigSchema } from './env';\n\n\nexport const AppConfigSchema = EnvConfigSchema.pick({\n    APP_HOST: true,\n    APP_IP: true,\n    APP_NAME: true\n});\n\n\nexport type AppConfigInputSchema = z.input<typeof AppConfigSchema>;\nexport type AppConfigSchema = z.infer<typeof AppConfigSchema>;\n\n\nexport const useAppConfig = (data: any): AppConfigSchema => AppConfigSchema.parse(data);\n",
    "import type z from \"zod\";\nimport { EnvConfigSchema } from \"./env\";\n\nexport const ModeSchema = EnvConfigSchema.pick({\n    MODE: true\n});\nexport type ModeSchema = z.infer<typeof ModeSchema.shape.MODE>;\n\nexport const useMode = (env: any): ModeSchema => ModeSchema.parse(env).MODE;\n",
    "import z from \"zod\";\nimport { EnvConfigSchema } from \"./env\";\n\nexport const APIConfigSchema = EnvConfigSchema.pick({\n    PORT_API_APP: true,\n});\n\nexport type APIConfigSchema = z.infer<typeof APIConfigSchema>;\nexport type APIConfigInputSchema = z.input<typeof APIConfigSchema>;\n\n\nexport const useAPIConfig = (env: any): APIConfigSchema => APIConfigSchema.parse(env);\n",
    "import os from 'os';\n\nexport const useDeviceHosts = (): string[] => {\n    const networkInterfaces = os.networkInterfaces();\n\n    let hosts: string[] = [];\n\n    for (const iface in networkInterfaces) {\n        if (networkInterfaces[iface]) for (const details of networkInterfaces[iface]) {\n            if (details.family == 'IPv4' && !details.internal) {\n                hosts.push(details.address)\n            }\n        }\n    }\n\n    return hosts;\n}\n",
    "import { useBotConfig, useMode } from '@repo/env';\n\nexport const botConfig = useBotConfig(Bun.env);\nexport const mode = useMode(Bun.env);\n\nexport const isTestEnv = mode === 'DEVELOPMENT' || mode == 'PREVIEW';\n",
    "import { usePortsConfig } from '@repo/env';\nimport { useDeviceHosts } from '@repo/utils'\n\nimport { isTestEnv, botConfig } from '$lib/config';\n\nimport { Bot } from 'grammy';\n\nconst ports = usePortsConfig(Bun.env);\nconst deviceHosts = useDeviceHosts()\n\n\n\nconst bot = new Bot(\n    isTestEnv ? botConfig.TELEGRAM_BOT_TESTING_TOKEN : botConfig.TELEGRAM_BOT_TOKEN,\n    {\n        client: {\n            environment: isTestEnv ? 'test' : 'prod',\n            fetch: Bun.fetch\n        }\n    }\n);\n\nbot.command('start', async __context__ => {\n    await __context__.reply('Hi, How are you!');\n});\n\nbot.command('app', async __context__ => {\n    if (!isTestEnv) {\n        await __context__.reply('Недоступно!');\n        return;\n    }\n\n    if (deviceHosts.length) {\n        const url = new URL(`http:${deviceHosts[0]}`);\n        url.protocol = 'http';\n        url.port = `${ports.PORT_ADMIN_APP}`;\n\n        await __context__.reply('Nate', {\n            reply_markup: {\n                inline_keyboard: [\n                    [\n                        {\n                            text: 'Open MiniApp',\n                            web_app: {\n                                url: url.href\n                            }\n                        }\n                    ]\n                ]\n            }\n        })\n    } else {\n        await __context__.reply('Не удалось сгенерировать ссылку!');\n    }\n})\n\n\nexport default bot;\n",
    "import bot from \"./bot\"\n\nimport { mode } from \"$lib/config\";\n\nif (import.meta.main) {\n    bot.start({\n        onStart(botInfo) {\n            console.log(`Bot started in ${mode} mode!`)\n        },\n    })\n}\n"
  ],
  "mappings": "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",
  "debugId": "8B477E732643CC8C64756E2164756E21",
  "names": []
}